{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport 'isomorphic-unfetch';\nimport Link from 'next/link';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport ReactHtmlParser, { processNodes, convertNodeToElement, htmlparser2 } from 'react-html-parser';\nimport { Helmet } from 'react-helmet';\nimport Layout from '../../components/MyLayout';\nimport { createMedia } from '@artsy/fresnel';\nimport { useRouter } from 'next/router';\nimport { saveNovel } from '../../redux/actions/novelActions';\nimport { API_URL } from '../../config/config';\nimport { Button, Container, Divider, Grid, Header, Icon, Image, List, Menu, Segment, Sidebar, Visibility, Item, Label, Tab, Statistic } from 'semantic-ui-react';\n\nvar _createMedia = createMedia({\n  breakpoints: {\n    mobile: 0,\n    tablet: 768,\n    computer: 1024\n  }\n}),\n    MediaContextProvider = _createMedia.MediaContextProvider,\n    Media = _createMedia.Media;\n\nvar Truyen = /*#__PURE__*/function (_React$Component) {\n  _inherits(Truyen, _React$Component);\n\n  var _super = _createSuper(Truyen);\n\n  _createClass(Truyen, null, [{\n    key: \"getInitialProps\",\n    value: function getInitialProps(_ref) {\n      var store = _ref.store;\n    }\n  }]);\n\n  function Truyen(props) {\n    _classCallCheck(this, Truyen);\n\n    return _super.call(this, props);\n  }\n\n  _createClass(Truyen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      console.log(this.props.data);\n      this.props.saveNovel(this.props.data);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props$data$chap,\n          _this = this;\n\n      console.log(this.props);\n      return __jsx(Layout, null, __jsx(\"style\", null, \"\\n      html, body {\\n        background-color: #f2f3f5 !important;\\n      }\\n    }\\n    \"), __jsx(Helmet, null, __jsx(\"title\", null, \"\".concat(this.props.data.novelsname), \" - KitesNovel\"), __jsx(\"meta\", {\n        name: \"description\",\n        content: \"\".concat(this.props.data.des)\n      }), __jsx(\"meta\", {\n        name: \"theme-color\",\n        content: \"#008f68\"\n      }), __jsx(\"meta\", {\n        name: \"keywords\",\n        content: \"\".concat(this.props.data.novelsname, \", \").concat(this.props.data.novelsname, \" novel, \").concat(this.props.data.novelsname, \" light novel, \").concat(this.props.data.novelsname, \" full chapters, \").concat(this.props.data.novelsname, \" latest chapters\")\n      }), __jsx(\"meta\", {\n        property: \"og:title\",\n        content: \"\".concat(this.props.data.novelsname)\n      }), __jsx(\"meta\", {\n        property: \"og:type\",\n        content: \"article\"\n      }), __jsx(\"meta\", {\n        property: \"og:image\",\n        content: \"\".concat(this.props.data.cover)\n      }), __jsx(\"meta\", {\n        property: \"og:description\",\n        content: \"\".concat(this.props.data.des)\n      }), __jsx(\"meta\", {\n        property: \"og:site_name\",\n        content: \"Kitesnovel.com\"\n      }), __jsx(\"meta\", {\n        property: \"og:url\",\n        content: \"http://kitesnovel.com/novel/\".concat(this.props.data.idnovels)\n      }), __jsx(\"meta\", {\n        property: \"book:author\",\n        content: \"\".concat(this.props.data.author)\n      }), __jsx(\"meta\", {\n        property: \"og:image:width\",\n        content: \"200\"\n      }), __jsx(\"meta\", {\n        property: \"og:image:height\",\n        content: \"300\"\n      }), __jsx(\"script\", {\n        type: \"application/ld+json\"\n      }, \"\\n                    {\\n                    \\\"@context\\\": \\\"http://schema.org\\\",\\n                    \\\"url\\\": \\\"http://kitesnovel.com/novel/\".concat(this.props.data.idnovels, \"\\\",\\n                    \\\"image\\\": \\\"\").concat(this.props.data.cover, \"\\\",\\n                    \\\"@type\\\": \\\"Book\\\",\\n                    \\\"name\\\": \\\"\").concat(this.props.data.novelsname, \"\\\",\\n                    \\\"author\\\": \\\"\").concat(this.props.data.author, \"\\\",\\n                    \\\"description\\\": \\\"\").concat(this.props.data.des, \"\\\"\\n                    }\\n                    \"))), __jsx(MediaContextProvider, null, __jsx(Media, {\n        greaterThan: \"mobile\"\n      }, __jsx(Segment, {\n        inverted: true,\n        style: {\n          maxHeight: '32.625rem',\n          padding: '1em 0em'\n        },\n        vertical: true\n      }, __jsx(\"div\", {\n        className: \"book-info\"\n      }, __jsx(\"img\", {\n        className: \"glass_background-img\",\n        src: this.props.data.cover\n      }), __jsx(Container, {\n        style: {}\n      }, __jsx(Grid, null, __jsx(Grid.Column, {\n        mobile: 16,\n        tablet: 4,\n        computer: 4\n      }, __jsx(Image, {\n        fluid: true,\n        className: \"item-img\",\n        src: this.props.data.cover,\n        style: {\n          height: '22.75rem'\n        }\n      })), __jsx(Grid.Column, {\n        mobile: 16,\n        tablet: 12,\n        computer: 12\n      }, __jsx(Item.Group, {\n        textAlign: \"left\"\n      }, __jsx(Item.Content, null, __jsx(Item.Header, {\n        className: \"book-title\",\n        as: \"h2\"\n      }, this.props.data.novelsname)), __jsx(Item.Extra, {\n        textAlign: \"left\",\n        style: {\n          marginTop: 10\n        }\n      }, __jsx(\"span\", {\n        className: \"label\"\n      }, \"Author:\"), \" \", this.props.data.author), __jsx(Item.Extra, {\n        textAlign: \"left\",\n        style: {\n          marginTop: 10\n        }\n      }, \"Genres: \", this.props.data.genresdata.map(function (genresdata) {\n        return (// <Link as={`/theloai/${genresdata.idgenres}/1`} href={`/theloai/[id]/[page]`}>\n          __jsx(Label, {\n            as: \"a\",\n            color: \"yellow\",\n            tag: true\n          }, genresdata.genrename) // </Link>\n\n        );\n      })), __jsx(Item.Extra, {\n        textAlign: \"left\",\n        style: {\n          marginTop: 10\n        }\n      }, __jsx(\"span\", {\n        className: \"label\"\n      }, \"Status:\"), \" \", this.props.data.status), __jsx(Item.Content, null, __jsx(Statistic.Group, {\n        inverted: true,\n        size: \"small\"\n      }, __jsx(Statistic, null, __jsx(Statistic.Value, null, (_this$props$data$chap = this.props.data.chapterlist) === null || _this$props$data$chap === void 0 ? void 0 : _this$props$data$chap.length), __jsx(Statistic.Label, null, \"Chapter\")), __jsx(Statistic, null, __jsx(Statistic.Value, null, this.props.data.view), __jsx(Statistic.Label, null, \"Views\"))))), __jsx(Link, {\n        as: \"/doc/\".concat(this.props.data.idnovels, \"/\").concat(this.props.data.chapterlist[0].idchapter),\n        href: \"/doc/[id]/[chapter]\"\n      }, __jsx(Button, {\n        size: \"huge\",\n        color: \"yellow\"\n      }, \"READ\")))))))), __jsx(Media, {\n        at: \"mobile\"\n      }, __jsx(Segment, {\n        inverted: true,\n        style: {\n          minHeight: '32.625rem',\n          padding: '1em 0em'\n        },\n        vertical: true\n      }, __jsx(Container, {\n        style: {}\n      }, __jsx(Grid, null, __jsx(Grid.Column, {\n        mobile: 16,\n        tablet: 4,\n        computer: 4\n      }, __jsx(\"div\", {\n        className: \"basic-info_header__31qug\"\n      }, __jsx(\"div\", {\n        className: \"glass_background__p1P4f basic-info_cover-background__1Q9Rl\"\n      }, __jsx(\"img\", {\n        className: \"glass_background-img__2je7l\",\n        src: this.props.data.cover\n      }), __jsx(\"div\", {\n        className: \"glass_shade__3yav5\"\n      })), __jsx(\"div\", {\n        className: \"basic-info_cover-overlay__2gp4w\"\n      }), __jsx(\"div\", {\n        className: \"label_container__3-tcR basic-info_cover-wrapper__1mcNB\"\n      }, __jsx(\"div\", {\n        className: \"image_image-wrapper__3EJJ6 basic-info_cover__XtNRk\"\n      }, __jsx(\"img\", {\n        src: this.props.data.cover,\n        className: \"image_image__j9OCH\"\n      }))))), __jsx(Grid.Column, {\n        mobile: 16,\n        tablet: 12,\n        computer: 12\n      }, __jsx(Item.Group, {\n        textAlign: \"center\"\n      }, __jsx(Item.Content, null, __jsx(Item.Header, {\n        className: \"book-title_m\",\n        as: \"h2\"\n      }, this.props.data.novelsname)), __jsx(Item.Extra, {\n        textAlign: \"left\",\n        style: {\n          marginTop: 10\n        }\n      }, __jsx(\"span\", {\n        className: \"label\"\n      }, \"Author:\"), \" \", this.props.data.author), __jsx(Item.Extra, {\n        textAlign: \"left\",\n        style: {\n          marginTop: 10\n        }\n      }, \"Genres: \", this.props.data.genresdata.map(function (genresdata) {\n        return (// <Link as={`/theloai/${genresdata.idgenres}/1`} href={`/theloai/[id]/[page]`}>\n          __jsx(Label, {\n            as: \"a\",\n            color: \"yellow\",\n            tag: true\n          }, __jsx(Label.Detail, null, genresdata.genrename)) // </Link>\n\n        );\n      })), __jsx(Item.Extra, {\n        textAlign: \"left\",\n        style: {\n          marginTop: 10\n        }\n      }, __jsx(\"span\", {\n        className: \"label\"\n      }, \"Status:\"), \" \", this.props.data.status)), __jsx(Item.Group, {\n        className: \"botom_book\",\n        textAlign: \"center\"\n      }, __jsx(Link, {\n        as: \"/doc/\".concat(this.props.data.idnovels, \"/\").concat(this.props.data.chapterlist[0].idchapter),\n        href: \"/doc/[id]/[chapter]\"\n      }, __jsx(Button, {\n        size: \"huge\",\n        style: {\n          marginBottom: 20\n        },\n        color: \"yellow\"\n      }, \"READ\"))))))))), __jsx(Container, null, __jsx(Grid, null, __jsx(Grid.Column, {\n        className: \"detail-container\",\n        mobile: 16,\n        tablet: 16,\n        computer: 16\n      }, __jsx(Divider, {\n        horizontal: true\n      }, __jsx(Header, {\n        className: \"title-name-bottom\",\n        as: \"h2\"\n      }, \"Synopsis\")), __jsx(Item.Group, {\n        textAlign: \"left\"\n      }, __jsx(Item.Description, {\n        className: \"content\"\n      }, ReactHtmlParser(this.props.data.description))), __jsx(Divider, {\n        horizontal: true\n      }, __jsx(Header, {\n        className: \"title-name-bottom\",\n        as: \"h2\"\n      }, \"Chapter\")), __jsx(Grid, null, this.props.data.chapterlist.map(function (datachapter, key) {\n        return __jsx(Grid.Column, {\n          mobile: 16,\n          tablet: 8,\n          computer: 8,\n          style: {\n            wordBreak: 'break-word',\n            overflow: 'hidden'\n          }\n        }, __jsx(Link, {\n          as: \"/doc/\".concat(_this.props.data.idnovels, \"/\").concat(datachapter.idchapter),\n          href: \"/doc/[id]/[chapter]\"\n        }, __jsx(\"a\", {\n          className: \"chapter\"\n        }, datachapter.chaptername)), __jsx(Divider, {\n          inverted: true\n        }));\n      }))))));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref2) {\n        var id, res, json;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                id = _ref2.query.id;\n                _context.next = 3;\n                return fetch(\"\".concat(API_URL, \"novel?id=\").concat(id));\n\n              case 3:\n                res = _context.sent;\n                _context.next = 6;\n                return res.json();\n\n              case 6:\n                json = _context.sent;\n                return _context.abrupt(\"return\", {\n                  data: json\n                });\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getInitialProps(_x) {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  return Truyen;\n}(React.Component);\n\nfunction mapStateToProps(state) {\n  return {\n    novelReducer: state.novelReducer\n  };\n}\n\nexport default connect(mapStateToProps, {\n  saveNovel: saveNovel\n})(Truyen);","map":{"version":3,"sources":["C:/Users/bakhjem/Desktop/nhattin/nextjstruyen/pages/novel/[id].js"],"names":["Link","React","connect","ReactHtmlParser","processNodes","convertNodeToElement","htmlparser2","Helmet","Layout","createMedia","useRouter","saveNovel","API_URL","Button","Container","Divider","Grid","Header","Icon","Image","List","Menu","Segment","Sidebar","Visibility","Item","Label","Tab","Statistic","breakpoints","mobile","tablet","computer","MediaContextProvider","Media","Truyen","store","props","console","log","data","novelsname","des","cover","idnovels","author","maxHeight","padding","height","marginTop","genresdata","map","genrename","status","chapterlist","length","view","idchapter","minHeight","marginBottom","description","datachapter","key","wordBreak","overflow","chaptername","id","query","fetch","res","json","Component","mapStateToProps","state","novelReducer"],"mappings":"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","sourcesContent":["import 'isomorphic-unfetch'\r\nimport Link from 'next/link'\r\nimport React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport ReactHtmlParser, { processNodes, convertNodeToElement, htmlparser2 } from 'react-html-parser';\r\nimport { Helmet } from 'react-helmet';\r\nimport Layout from '../../components/MyLayout';\r\nimport { createMedia } from '@artsy/fresnel'\r\nimport { useRouter } from 'next/router';\r\nimport { saveNovel } from '../../redux/actions/novelActions'\r\nimport { API_URL } from '../../config/config'\r\nimport {\r\n    Button,\r\n    Container,\r\n    Divider,\r\n    Grid,\r\n    Header,\r\n    Icon,\r\n    Image,\r\n    List,\r\n    Menu,\r\n    Segment,\r\n    Sidebar,\r\n    Visibility,\r\n    Item,\r\n    Label,\r\n    Tab, Statistic\r\n} from 'semantic-ui-react';\r\nconst { MediaContextProvider, Media } = createMedia({\r\n    breakpoints: {\r\n        mobile: 0,\r\n        tablet: 768,\r\n        computer: 1024,\r\n    },\r\n})\r\nclass Truyen extends React.Component {\r\n    static getInitialProps({ store }) { }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    componentDidMount() {\r\n        console.log(this.props.data)\r\n        this.props.saveNovel(this.props.data)\r\n    }\r\n\r\n    static async getInitialProps({ query: { id } }) {\r\n        // eslint-disable-next-line no-undef\r\n        // const { id } = context.query\r\n        // const router = useRouter()\r\n        // const { id } = router.query\r\n        const res = await fetch(`${API_URL}novel?id=${id}`)\r\n        const json = await res.json()\r\n        // console.log(json)\r\n\r\n        return { data: json }\r\n    }\r\n\r\n    render() {\r\n        console.log(this.props)\r\n\r\n        return (\r\n            <Layout>\r\n                <style>\r\n                    {`\r\n      html, body {\r\n        background-color: #f2f3f5 !important;\r\n      }\r\n    }\r\n    `}\r\n                </style>\r\n                <Helmet>\r\n                    <title>{`${this.props.data.novelsname}`} - KitesNovel</title>\r\n                    <meta name=\"description\" content={`${this.props.data.des}`} />\r\n                    <meta name=\"theme-color\" content=\"#008f68\" />\r\n                    <meta name=\"keywords\" content={`${this.props.data.novelsname}, ${this.props.data.novelsname} novel, ${this.props.data.novelsname} light novel, ${this.props.data.novelsname} full chapters, ${this.props.data.novelsname} latest chapters`} />\r\n                    <meta property=\"og:title\" content={`${this.props.data.novelsname}`} />\r\n                    <meta property=\"og:type\" content=\"article\" />\r\n                    <meta property=\"og:image\" content={`${this.props.data.cover}`} />\r\n                    <meta property=\"og:description\" content={`${this.props.data.des}`} />\r\n                    <meta property=\"og:site_name\" content=\"Kitesnovel.com\" />\r\n                    <meta property=\"og:url\" content={`http://kitesnovel.com/novel/${this.props.data.idnovels}`} />\r\n                    <meta property=\"book:author\" content={`${this.props.data.author}`} />\r\n                    <meta property=\"og:image:width\" content=\"200\" />\r\n                    <meta property=\"og:image:height\" content=\"300\" />\r\n\r\n                    <script type=\"application/ld+json\">{`\r\n                    {\r\n                    \"@context\": \"http://schema.org\",\r\n                    \"url\": \"http://kitesnovel.com/novel/${this.props.data.idnovels}\",\r\n                    \"image\": \"${this.props.data.cover}\",\r\n                    \"@type\": \"Book\",\r\n                    \"name\": \"${this.props.data.novelsname}\",\r\n                    \"author\": \"${this.props.data.author}\",\r\n                    \"description\": \"${this.props.data.des}\"\r\n                    }\r\n                    `}</script>\r\n                </Helmet>\r\n                <MediaContextProvider>\r\n                    <Media greaterThan='mobile'>\r\n                        <Segment\r\n                            inverted\r\n                            style={{ maxHeight: '32.625rem', padding: '1em 0em' }}\r\n                            vertical\r\n                        >\r\n                            <div className='book-info'>\r\n                                <img className='glass_background-img' src={this.props.data.cover} />\r\n                                <Container style={{}}>\r\n                                    <Grid>\r\n                                        <Grid.Column mobile={16} tablet={4} computer={4}>\r\n                                            <Image fluid className='item-img' src={this.props.data.cover} style={{ height: '22.75rem' }} />\r\n                                        </Grid.Column>\r\n                                        <Grid.Column mobile={16} tablet={12} computer={12}>\r\n                                            <Item.Group textAlign='left'>\r\n                                                <Item.Content>\r\n                                                    <Item.Header className='book-title' as='h2'>{this.props.data.novelsname}</Item.Header>\r\n                                                </Item.Content>\r\n                                                <Item.Extra textAlign='left' style={{ marginTop: 10 }}>\r\n                                                    <span className='label'>Author:</span> {this.props.data.author}\r\n                                                </Item.Extra>\r\n                                                <Item.Extra textAlign='left' style={{ marginTop: 10 }}>\r\n                                                    Genres: {this.props.data.genresdata.map(genresdata => (\r\n                                                    // <Link as={`/theloai/${genresdata.idgenres}/1`} href={`/theloai/[id]/[page]`}>\r\n                                                        <Label as='a' color='yellow' tag>\r\n                                                            {genresdata.genrename}\r\n                                                        </Label>\r\n\r\n                                                    // </Link>\r\n                                                ))}\r\n                                                </Item.Extra>\r\n                                                <Item.Extra textAlign='left' style={{ marginTop: 10 }}>\r\n                                                    <span className='label'>Status:</span> {this.props.data.status}\r\n                                                </Item.Extra>\r\n                                                <Item.Content>\r\n                                                    <Statistic.Group inverted size='small'>\r\n                                                        <Statistic>\r\n                                                            <Statistic.Value>{this.props.data.chapterlist?.length}</Statistic.Value>\r\n                                                            <Statistic.Label>Chapter</Statistic.Label>\r\n                                                        </Statistic>\r\n                                                        <Statistic>\r\n                                                            <Statistic.Value>{this.props.data.view}</Statistic.Value>\r\n                                                            <Statistic.Label>Views</Statistic.Label>\r\n                                                        </Statistic>\r\n                                                    </Statistic.Group>\r\n                                                </Item.Content>\r\n                                            </Item.Group>\r\n                                            <Link\r\n                                                as={`/doc/${this.props.data.idnovels}/${this.props.data.chapterlist[0].idchapter}`}\r\n                                                href={`/doc/[id]/[chapter]`}>\r\n                                                <Button size='huge' color='yellow'>READ</Button>\r\n                                            </Link>\r\n\r\n                                        </Grid.Column>\r\n                                    </Grid>\r\n                                </Container>\r\n                            </div>\r\n                        </Segment>\r\n\r\n                    </Media>\r\n                    <Media at='mobile'>\r\n                        <Segment\r\n                            inverted\r\n                            style={{ minHeight: '32.625rem', padding: '1em 0em',  }}\r\n                            vertical\r\n                        >\r\n                            <Container style={{}}>\r\n                                <Grid>\r\n                                    <Grid.Column mobile={16} tablet={4} computer={4}>\r\n                                        <div className='basic-info_header__31qug'>\r\n                                            <div className='glass_background__p1P4f basic-info_cover-background__1Q9Rl'>\r\n                                                <img className='glass_background-img__2je7l' src={this.props.data.cover} />\r\n                                                <div className='glass_shade__3yav5' />\r\n                                            </div>\r\n                                            <div className='basic-info_cover-overlay__2gp4w' />\r\n                                            <div className='label_container__3-tcR basic-info_cover-wrapper__1mcNB'>\r\n                                                <div className='image_image-wrapper__3EJJ6 basic-info_cover__XtNRk'>\r\n                                                    <img src={this.props.data.cover} className='image_image__j9OCH' />\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </Grid.Column>\r\n                                    <Grid.Column mobile={16} tablet={12} computer={12}>\r\n                                        <Item.Group textAlign='center'>\r\n                                            <Item.Content>\r\n                                                <Item.Header className='book-title_m' as='h2'>{this.props.data.novelsname}</Item.Header>\r\n                                            </Item.Content>\r\n                                            <Item.Extra textAlign='left' style={{ marginTop: 10 }}>\r\n                                                <span className='label'>Author:</span> {this.props.data.author}\r\n                                            </Item.Extra>\r\n                                            <Item.Extra textAlign='left' style={{ marginTop: 10 }}>\r\n                                                Genres: {this.props.data.genresdata.map(genresdata => (\r\n                                                // <Link as={`/theloai/${genresdata.idgenres}/1`} href={`/theloai/[id]/[page]`}>\r\n                                                    <Label as='a' color='yellow' tag>\r\n                                                        <Label.Detail>{genresdata.genrename}</Label.Detail>\r\n                                                    </Label>\r\n\r\n                                                // </Link>\r\n                                            ))}\r\n                                            </Item.Extra>\r\n                                            <Item.Extra textAlign='left' style={{ marginTop: 10 }}>\r\n                                                <span className='label'>Status:</span> {this.props.data.status}\r\n                                            </Item.Extra>\r\n                                        </Item.Group>\r\n                                        <Item.Group className='botom_book' textAlign='center'>\r\n                                            <Link\r\n                                                as={`/doc/${this.props.data.idnovels}/${this.props.data.chapterlist[0].idchapter}`}\r\n                                                href={`/doc/[id]/[chapter]`}>\r\n                                                <Button size='huge' style={{ marginBottom: 20 }} color='yellow'>READ</Button>\r\n                                            </Link>\r\n                                        </Item.Group>\r\n\r\n\r\n                                    </Grid.Column>\r\n                                </Grid>\r\n                            </Container>\r\n\r\n                        </Segment>\r\n\r\n                    </Media>\r\n                </MediaContextProvider>\r\n                <Container>\r\n                    <Grid>\r\n                        <Grid.Column className='detail-container' mobile={16} tablet={16} computer={16}>\r\n                            <Divider horizontal>\r\n                                <Header className='title-name-bottom' as='h2'>Synopsis</Header>\r\n                            </Divider>\r\n\r\n                            <Item.Group textAlign='left'>\r\n                                <Item.Description className='content'>\r\n                                    {ReactHtmlParser(this.props.data.description)}\r\n                                </Item.Description>\r\n                            </Item.Group>\r\n                            <Divider horizontal>\r\n                                <Header className='title-name-bottom' as='h2'>Chapter</Header>\r\n                            </Divider>\r\n\r\n                            <Grid>\r\n                                {this.props.data.chapterlist.map((datachapter, key) => (\r\n                                    <Grid.Column mobile={16} tablet={8} computer={8} style={{ wordBreak: 'break-word', overflow: 'hidden' }}>\r\n                                        <Link\r\n                                            as={`/doc/${this.props.data.idnovels}/${datachapter.idchapter}`}\r\n                                            href={`/doc/[id]/[chapter]`}>\r\n                                            <a className='chapter'>{datachapter.chaptername}</a>\r\n                                        </Link>\r\n                                        <Divider inverted></Divider>\r\n                                    </Grid.Column>\r\n\r\n                                ))}\r\n                            </Grid>\r\n                        </Grid.Column>\r\n                    </Grid>\r\n                </Container>\r\n\r\n\r\n            </Layout>\r\n        )\r\n    }\r\n}\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        novelReducer: state.novelReducer\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, { saveNovel })(Truyen);\r\n"]},"metadata":{},"sourceType":"module"}