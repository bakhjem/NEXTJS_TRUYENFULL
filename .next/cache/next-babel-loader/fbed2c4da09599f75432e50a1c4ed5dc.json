{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport Layout from '../../../components/MyLayout';\nimport 'isomorphic-unfetch';\nimport Link from 'next/link';\nimport React, { Component, createRef } from 'react';\nimport { createMedia } from '@artsy/fresnel';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport ReactHtmlParser, { processNodes, convertNodeToElement, htmlparser2 } from 'react-html-parser';\nimport { Helmet } from 'react-helmet';\nimport { saveNovel, settingNovel } from '../../../redux/actions/novelActions';\nimport { API_URL } from '../../../config/config';\nimport { Container, Breadcrumb, Divider, Dropdown, Grid, Header, Icon, Image, List, Menu, Segment, Visibility, Item, Sticky, Rail, Ref, Button, Popup } from 'semantic-ui-react';\n\nvar _createMedia = createMedia({\n  breakpoints: {\n    mobile: 0,\n    tablet: 768,\n    computer: 1024\n  }\n}),\n    MediaContextProvider = _createMedia.MediaContextProvider,\n    Media = _createMedia.Media;\n\nvar menuStyle = {\n  border: 'none',\n  borderRadius: 0,\n  boxShadow: 'none',\n  marginBottom: '1em',\n  transition: 'box-shadow 0.5s ease, padding 0.5s ease'\n};\nvar fixedMenuStyle = {\n  backgroundColor: '#fff',\n  border: '1px solid #ddd',\n  boxShadow: '0px 3px 5px rgba(0, 0, 0, 0.2)'\n};\n\nvar Chapter = /*#__PURE__*/function (_React$Component) {\n  _inherits(Chapter, _React$Component);\n\n  var _super = _createSuper(Chapter);\n\n  function Chapter(props) {\n    var _this;\n\n    _classCallCheck(this, Chapter);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"contextRef\", /*#__PURE__*/createRef());\n\n    _defineProperty(_assertThisInitialized(_this), \"handleOverlayRef\", function (c) {\n      var overlayRect = _this.state.overlayRect;\n\n      if (!overlayRect) {\n        _this.setState({\n          overlayRect: _.pick(c.getBoundingClientRect(), 'height', 'width')\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"stickOverlay\", function () {\n      return _this.setState({\n        overlayFixed: true\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"stickTopMenu\", function () {\n      return _this.setState({\n        menuFixed: true\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"unStickOverlay\", function () {\n      return _this.setState({\n        overlayFixed: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"unStickTopMenu\", function () {\n      return _this.setState({\n        menuFixed: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleNightMode\", function (data) {\n      var params = {\n        nightmode: !data,\n        fontsize: _this.state.fontsize,\n        font: _this.state.font,\n        lineheight: _this.state.lineheight,\n        background: _this.state.background\n      };\n\n      _this.props.settingNovel(params);\n    });\n\n    _this.state = {\n      prechap: '',\n      nextchap: '',\n      menuFixed: false,\n      overlayFixed: false,\n      totalchapter: 1\n    };\n    return _this;\n  }\n\n  _createClass(Chapter, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var _this2 = this;\n\n      if (this.props.novelchapter !== prevProps.novelchapter) {\n        fetch(\"\".concat(API_URL, \"novel?id=\").concat(this.props.novelchapter.idnovels)).then(function (r) {\n          return r.json();\n        }).then(function (data) {\n          if (data.chapterlist.length === 1) {\n            _this2.state({\n              prechap: '',\n              nextchap: '',\n              totalchapter: data.chapterlist.length\n            });\n          } else {\n            for (var i = 0; i < data.chapterlist.length; i++) {\n              if (_this2.props.novelchapter.idchapter === data.chapterlist[i].idchapter) {\n                if (i === 0) {\n                  _this2.setState({\n                    prechap: '',\n                    nextchap: data.chapterlist[i + 1].idchapter,\n                    totalchapter: data.chapterlist.length\n                  }); // return { novelchapter: json, prechap: '', nextchap: json1.chapterlist[i + 1].idchapter }\n\n                }\n\n                if (i > 0 && i < data.chapterlist.length - 1) {\n                  _this2.setState({\n                    prechap: data.chapterlist[i - 1].idchapter,\n                    nextchap: data.chapterlist[i + 1].idchapter,\n                    totalchapter: data.chapterlist.length\n                  }); // return { novelchapter: json, prechap: json1.chapterlist[i - 1].idchapter, nextchap: json1.chapterlist[i + 1].idchapter }\n\n                }\n\n                if (i === data.chapterlist.length - 1) {\n                  _this2.setState({\n                    prechap: data.chapterlist[i - 1].idchapter,\n                    nextchap: '',\n                    totalchapter: data.chapterlist.length\n                  }); // return { novelchapter: json, prechap: json1.chapterlist[i - 1].idchapter, nextchap: '' }\n\n                }\n              }\n            }\n          }\n        });\n      }\n\n      if (this.props.novelReducer !== prevProps.novelReducer) {\n        this.setState({\n          nightmode: this.props.novelReducer.nightmode,\n          fontsize: this.props.novelReducer.fontsize,\n          font: this.props.novelReducer.font,\n          lineheight: this.props.novelReducer.lineheight,\n          background: this.props.novelReducer.background\n        });\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this3 = this;\n\n      fetch(\"\".concat(API_URL, \"novel?id=\").concat(this.props.novelchapter.idnovels)).then(function (r) {\n        return r.json();\n      }).then(function (data) {\n        _this3.props.saveNovel(data);\n\n        if (data.chapterlist.length === 1) {\n          _this3.state({\n            prechap: '',\n            nextchap: ''\n          });\n        } else {\n          for (var i = 0; i < data.chapterlist.length; i++) {\n            if (_this3.props.novelchapter.idchapter === data.chapterlist[i].idchapter) {\n              if (i === 0) {\n                _this3.setState({\n                  prechap: '',\n                  nextchap: data.chapterlist[i + 1].idchapter\n                }); // return { novelchapter: json, prechap: '', nextchap: json1.chapterlist[i + 1].idchapter }\n\n              }\n\n              if (i > 0 && i < data.chapterlist.length - 1) {\n                _this3.setState({\n                  prechap: data.chapterlist[i - 1].idchapter,\n                  nextchap: data.chapterlist[i + 1].idchapter\n                }); // return { novelchapter: json, prechap: json1.chapterlist[i - 1].idchapter, nextchap: json1.chapterlist[i + 1].idchapter }\n\n              }\n\n              if (i === data.chapterlist.length - 1) {\n                _this3.setState({\n                  prechap: data.chapterlist[i - 1].idchapter,\n                  nextchap: ''\n                }); // return { novelchapter: json, prechap: json1.chapterlist[i - 1].idchapter, nextchap: '' }\n\n              }\n            }\n          }\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      console.log(this.props);\n      console.log(this.state);\n      var _this$state = this.state,\n          menuFixed = _this$state.menuFixed,\n          overlayFixed = _this$state.overlayFixed,\n          overlayRect = _this$state.overlayRect;\n      return __jsx(Layout, null, __jsx(\"style\", null, \"\\n          html, body {\\n            background: \".concat(this.props.novelReducer.nightmode === true ? '#1a1a1a' : '#f5f7fa', \" ;\\n          }\\n        \")), __jsx(Helmet, null, __jsx(\"title\", null, \"Read \".concat(this.props.novelchapter.chaptername), \" - KitesNovel\"), __jsx(\"meta\", {\n        name: \"description\",\n        content: \"Read \".concat(this.props.novelchapter.chaptername, \" for free, total \").concat(this.state.totalchapter, \" chapter \")\n      }), __jsx(\"meta\", {\n        name: \"theme-color\",\n        content: \"#008f68\"\n      }), __jsx(\"meta\", {\n        name: \"keywords\",\n        content: \"\".concat(this.props.novelchapter.chaptername, \", \").concat(this.props.novelchapter.chaptername, \" free, \").concat(this.props.novelReducer.novelname, \" light novel, \").concat(this.props.novelReducer.novelname, \" full chapters, \").concat(this.props.novelReducer.novelname, \" latest chapters\")\n      })), __jsx(MediaContextProvider, null, __jsx(Media, {\n        greaterThan: \"mobile\"\n      }, __jsx(Visibility, {\n        onBottomPassed: this.stickTopMenu,\n        onBottomVisible: this.unStickTopMenu,\n        once: false\n      }, __jsx(Menu, {\n        borderless: true,\n        fixed: menuFixed ? 'top' : undefined,\n        style: menuFixed ? fixedMenuStyle : menuStyle\n      }, __jsx(Container, null, __jsx(Menu.Item, null, __jsx(Link, {\n        href: \"/\"\n      }, __jsx(Image, {\n        size: \"tiny\",\n        src: \"/logo.png\"\n      }))), __jsx(Menu.Item, {\n        header: true\n      }, __jsx(Breadcrumb, {\n        size: 'large'\n      }, __jsx(Breadcrumb.Section, {\n        link: true\n      }, __jsx(Link, {\n        href: \"/\"\n      }, \"Home\")), __jsx(Breadcrumb.Divider, {\n        icon: \"right chevron\"\n      }), __jsx(Breadcrumb.Section, {\n        link: true\n      }, __jsx(Link, {\n        as: \"/novel/\".concat(this.props.novelchapter.idnovels),\n        href: \"/novel/[id]\"\n      }, this.props.novelReducer.novelname)), __jsx(Breadcrumb.Divider, {\n        icon: \"right chevron\"\n      }), __jsx(Breadcrumb.Section, {\n        active: true\n      }, this.props.novelchapter.chaptername))))))), __jsx(Media, {\n        at: \"mobile\"\n      }, __jsx(Visibility, {\n        onBottomPassed: this.stickTopMenu,\n        onBottomVisible: this.unStickTopMenu,\n        once: false\n      }, __jsx(Menu, {\n        borderless: true,\n        fixed: menuFixed ? 'top' : undefined,\n        style: menuFixed ? fixedMenuStyle : menuStyle\n      }, __jsx(Container, null, __jsx(Menu.Item, null, __jsx(Link, {\n        href: \"/\"\n      }, __jsx(Image, {\n        size: \"tiny\",\n        src: \"/logo.png\"\n      }))), __jsx(Menu.Item, {\n        header: true\n      }, __jsx(Breadcrumb, {\n        size: 'large'\n      }, __jsx(Breadcrumb.Section, {\n        link: true\n      }, __jsx(Link, {\n        as: \"/novel/\".concat(this.props.novelchapter.idnovels),\n        href: \"/novel/[id]\"\n      }, this.props.novelReducer.novelname))))))))), __jsx(Container, {\n        text: true,\n        style: {\n          backgroundColor: this.props.novelReducer.nightmode === true ? '#232323' : this.props.novelReducer.background\n        }\n      }, __jsx(Grid, {\n        style: {\n          marginTop: 20\n        }\n      }, __jsx(Grid.Column, {\n        className: \"detail-containers\",\n        mobile: 16,\n        tablet: 16,\n        computer: 16\n      }, __jsx(Ref, {\n        innerRef: this.contextRef\n      }, __jsx(Segment, {\n        style: {\n          backgroundColor: this.props.novelReducer.nightmode === true ? '#232323' : this.props.novelReducer.background\n        }\n      }, __jsx(Item.Group, {\n        textAlign: \"left\"\n      }, __jsx(Item.Description, {\n        className: \"content\",\n        style: {\n          fontFamily: this.props.novelReducer.font,\n          lineHeight: this.props.novelReducer.lineheight,\n          fontSize: this.props.novelReducer.fontsize,\n          color: this.props.novelReducer.nightmode === true ? '#b3b3b3' : 'black'\n        }\n      }, this.props.novelchapter.content !== undefined ? ReactHtmlParser(this.props.novelchapter.content) : null)), __jsx(MediaContextProvider, null, __jsx(Media, {\n        greaterThan: \"mobile\"\n      }, __jsx(Rail, {\n        position: \"right\",\n        style: {\n          marginTop: 100\n        }\n      }, __jsx(Sticky, {\n        offset: 100,\n        bottomOffset: 100,\n        context: this.contextRef\n      }, __jsx(List, null, __jsx(List.Item, null, __jsx(Popup, {\n        position: \"left center\",\n        trigger: __jsx(Button, {\n          size: \"large\",\n          circular: true,\n          icon: \"bars\"\n        }),\n        flowing: true,\n        hoverable: true\n      }, __jsx(Grid, {\n        textAlign: \"left\",\n        divided: true,\n        columns: 1\n      }, __jsx(Grid.Column, {\n        textAlign: \"left\"\n      }, __jsx(Header, {\n        as: \"h4\"\n      }, \"Background\"), __jsx(Grid.Row, null, __jsx(Grid.Column, null, __jsx(Button, {\n        circular: true\n      })), __jsx(Grid.Column, null, __jsx(Button, {\n        circular: true\n      })), __jsx(Grid.Column, null, __jsx(Button, {\n        circular: true\n      })), __jsx(Grid.Column, null, __jsx(Button, {\n        circular: true\n      }))))))), __jsx(List.Item, null, __jsx(Button, {\n        size: \"large\",\n        circular: true,\n        icon: \"font\"\n      })), __jsx(List.Item, null, __jsx(Button, {\n        onClick: function onClick() {\n          return _this4.handleNightMode(_this4.props.novelReducer.nightmode);\n        },\n        size: \"large\",\n        circular: true,\n        icon: this.props.novelReducer.nightmode ? 'lightbulb outline' : 'moon'\n      })))))))))), __jsx(MediaContextProvider, null, __jsx(Media, {\n        greaterThan: \"mobile\"\n      }, __jsx(Grid.Row, {\n        verticalAlign: \"middle\"\n      }, __jsx(Button.Group, {\n        widths: \"3\"\n      }, __jsx(Link, {\n        as: \"/doc/\".concat(this.props.novelchapter.idnovels, \"/\").concat(this.state.prechap),\n        href: \"/doc/[id]/[chapter]\"\n      }, __jsx(Button, {\n        size: \"huge\",\n        color: \"black\",\n        disabled: this.state.prechap !== \"\" ? false : true,\n        labelPosition: \"left\",\n        icon: \"left chevron\",\n        content: \"Prev chapter\"\n      })), __jsx(Button, {\n        size: \"huge\",\n        color: \"black\",\n        icon: \"bars\",\n        content: \"Chapter List\"\n      }), __jsx(Link, {\n        as: \"/doc/\".concat(this.props.novelchapter.idnovels, \"/\").concat(this.state.nextchap),\n        href: \"/doc/[id]/[chapter]\"\n      }, __jsx(Button, {\n        size: \"huge\",\n        color: \"black\",\n        disabled: this.state.nextchap !== \"\" ? false : true,\n        labelPosition: \"right\",\n        icon: \"right chevron\",\n        content: \"Next chapter\"\n      }))))), __jsx(Media, {\n        at: \"mobile\"\n      }, __jsx(Grid.Row, {\n        mobile: 16,\n        tablet: 16,\n        computer: 16,\n        verticalAlign: \"middle\"\n      }, __jsx(Button.Group, {\n        widths: \"3\"\n      }, __jsx(Link, {\n        as: \"/doc/\".concat(this.props.novelchapter.idnovels, \"/\").concat(this.state.prechap),\n        href: \"/doc/[id]/[chapter]\"\n      }, __jsx(Button, {\n        size: \"huge\",\n        color: \"black\",\n        disabled: this.state.prechap !== \"\" ? false : true,\n        labelPosition: \"left\",\n        icon: \"left chevron\"\n      })), __jsx(Button, {\n        size: \"huge\",\n        color: \"black\",\n        icon: \"bars\"\n      }), __jsx(Link, {\n        as: \"/doc/\".concat(this.props.novelchapter.idnovels, \"/\").concat(this.state.nextchap),\n        href: \"/doc/[id]/[chapter]\"\n      }, __jsx(Button, {\n        size: \"huge\",\n        color: \"black\",\n        disabled: this.state.nextchap !== \"\" ? false : true,\n        labelPosition: \"right\",\n        icon: \"right chevron\"\n      })))))))));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(context) {\n        var _context$query, id, chapter, res, json;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context$query = context.query, id = _context$query.id, chapter = _context$query.chapter;\n                _context.next = 3;\n                return fetch(\"\".concat(API_URL, \"chapter?novelid=\").concat(id, \"&chapterid=\").concat(chapter));\n\n              case 3:\n                res = _context.sent;\n                _context.next = 6;\n                return res.json();\n\n              case 6:\n                json = _context.sent;\n                return _context.abrupt(\"return\", {\n                  novelchapter: json\n                });\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getInitialProps(_x) {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  return Chapter;\n}(React.Component);\n\nfunction mapStateToProps(state) {\n  return {\n    novelReducer: state.novelReducer\n  };\n}\n\nexport default connect(mapStateToProps, {\n  saveNovel: saveNovel,\n  settingNovel: settingNovel\n})(Chapter);","map":{"version":3,"sources":["C:/Users/bakhjem/Desktop/nhattin/nextjstruyen/pages/doc/[id]/[chapter].js"],"names":["Layout","Link","React","Component","createRef","createMedia","connect","PropTypes","ReactHtmlParser","processNodes","convertNodeToElement","htmlparser2","Helmet","saveNovel","settingNovel","API_URL","Container","Breadcrumb","Divider","Dropdown","Grid","Header","Icon","Image","List","Menu","Segment","Visibility","Item","Sticky","Rail","Ref","Button","Popup","breakpoints","mobile","tablet","computer","MediaContextProvider","Media","menuStyle","border","borderRadius","boxShadow","marginBottom","transition","fixedMenuStyle","backgroundColor","Chapter","props","c","overlayRect","state","setState","_","pick","getBoundingClientRect","overlayFixed","menuFixed","data","params","nightmode","fontsize","font","lineheight","background","prechap","nextchap","totalchapter","prevProps","prevState","novelchapter","fetch","idnovels","then","r","json","chapterlist","length","i","idchapter","novelReducer","console","log","chaptername","novelname","stickTopMenu","unStickTopMenu","undefined","marginTop","contextRef","fontFamily","lineHeight","fontSize","color","content","handleNightMode","context","query","id","chapter","res","mapStateToProps"],"mappings":"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","sourcesContent":["import Layout from '../../../components/MyLayout'\r\nimport 'isomorphic-unfetch'\r\nimport Link from 'next/link'\r\nimport React, { Component, createRef } from 'react';\r\nimport { createMedia } from '@artsy/fresnel'\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types'\r\nimport ReactHtmlParser, { processNodes, convertNodeToElement, htmlparser2 } from 'react-html-parser';\r\nimport { Helmet } from 'react-helmet';\r\nimport { saveNovel, settingNovel } from '../../../redux/actions/novelActions'\r\nimport { API_URL } from '../../../config/config'\r\nimport {\r\n    Container, Breadcrumb,\r\n    Divider,\r\n    Dropdown,\r\n    Grid,\r\n    Header,\r\n    Icon,\r\n    Image,\r\n    List,\r\n    Menu,\r\n    Segment,\r\n    Visibility,\r\n    Item,\r\n    Sticky, Rail,\r\n    Ref, Button, Popup\r\n} from 'semantic-ui-react';\r\nconst { MediaContextProvider, Media } = createMedia({\r\n    breakpoints: {\r\n        mobile: 0,\r\n        tablet: 768,\r\n        computer: 1024,\r\n    },\r\n})\r\nconst menuStyle = {\r\n    border: 'none',\r\n    borderRadius: 0,\r\n    boxShadow: 'none',\r\n    marginBottom: '1em',\r\n    transition: 'box-shadow 0.5s ease, padding 0.5s ease',\r\n}\r\n\r\nconst fixedMenuStyle = {\r\n    backgroundColor: '#fff',\r\n    border: '1px solid #ddd',\r\n    boxShadow: '0px 3px 5px rgba(0, 0, 0, 0.2)',\r\n}\r\nclass Chapter extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            prechap: '',\r\n            nextchap: '',\r\n            menuFixed: false,\r\n            overlayFixed: false,\r\n            totalchapter: 1\r\n        }\r\n    }\r\n    contextRef = createRef()\r\n    handleOverlayRef = (c) => {\r\n        const { overlayRect } = this.state\r\n\r\n        if (!overlayRect) {\r\n            this.setState({ overlayRect: _.pick(c.getBoundingClientRect(), 'height', 'width') })\r\n        }\r\n    }\r\n\r\n    stickOverlay = () => this.setState({ overlayFixed: true })\r\n\r\n    stickTopMenu = () => this.setState({ menuFixed: true })\r\n\r\n    unStickOverlay = () => this.setState({ overlayFixed: false })\r\n\r\n    unStickTopMenu = () => this.setState({ menuFixed: false })\r\n    static async getInitialProps(context) {\r\n        const { id, chapter } = context.query\r\n        const res = await fetch(`${API_URL}chapter?novelid=${id}&chapterid=${chapter}`)\r\n        const json = await res.json()\r\n\r\n        return { novelchapter: json }\r\n    }\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (this.props.novelchapter !== prevProps.novelchapter) {\r\n            fetch(`${API_URL}novel?id=${this.props.novelchapter.idnovels}`)\r\n                .then(r => r.json())\r\n                .then(data => {\r\n                    if (data.chapterlist.length === 1) {\r\n                        this.state({ prechap: '', nextchap: '', totalchapter: data.chapterlist.length })\r\n                    } else {\r\n                        for (let i = 0; i < data.chapterlist.length; i++) {\r\n                            if (\r\n                                this.props.novelchapter.idchapter ===\r\n                                data.chapterlist[i].idchapter\r\n                            ) {\r\n                                if (i === 0) {\r\n                                    this.setState({ prechap: '', nextchap: data.chapterlist[i + 1].idchapter, totalchapter: data.chapterlist.length })\r\n                                    // return { novelchapter: json, prechap: '', nextchap: json1.chapterlist[i + 1].idchapter }\r\n\r\n                                }\r\n                                if (i > 0 && i < data.chapterlist.length - 1) {\r\n                                    this.setState({ prechap: data.chapterlist[i - 1].idchapter, nextchap: data.chapterlist[i + 1].idchapter, totalchapter: data.chapterlist.length })\r\n                                    // return { novelchapter: json, prechap: json1.chapterlist[i - 1].idchapter, nextchap: json1.chapterlist[i + 1].idchapter }\r\n                                }\r\n                                if (i === data.chapterlist.length - 1) {\r\n                                    this.setState({ prechap: data.chapterlist[i - 1].idchapter, nextchap: '', totalchapter: data.chapterlist.length })\r\n                                    // return { novelchapter: json, prechap: json1.chapterlist[i - 1].idchapter, nextchap: '' }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                });\r\n        }\r\n        if (this.props.novelReducer !== prevProps.novelReducer) {\r\n            this.setState({\r\n                nightmode: this.props.novelReducer.nightmode,\r\n                fontsize: this.props.novelReducer.fontsize,\r\n                font: this.props.novelReducer.font,\r\n                lineheight: this.props.novelReducer.lineheight,\r\n                background: this.props.novelReducer.background,\r\n            })\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch(`${API_URL}novel?id=${this.props.novelchapter.idnovels}`)\r\n            .then(r => r.json())\r\n            .then(data => {\r\n                this.props.saveNovel(data)\r\n                if (data.chapterlist.length === 1) {\r\n                    this.state({ prechap: '', nextchap: '' })\r\n                } else {\r\n                    for (let i = 0; i < data.chapterlist.length; i++) {\r\n                        if (\r\n                            this.props.novelchapter.idchapter ===\r\n                            data.chapterlist[i].idchapter\r\n                        ) {\r\n                            if (i === 0) {\r\n                                this.setState({ prechap: '', nextchap: data.chapterlist[i + 1].idchapter })\r\n                                // return { novelchapter: json, prechap: '', nextchap: json1.chapterlist[i + 1].idchapter }\r\n\r\n                            }\r\n                            if (i > 0 && i < data.chapterlist.length - 1) {\r\n                                this.setState({ prechap: data.chapterlist[i - 1].idchapter, nextchap: data.chapterlist[i + 1].idchapter })\r\n                                // return { novelchapter: json, prechap: json1.chapterlist[i - 1].idchapter, nextchap: json1.chapterlist[i + 1].idchapter }\r\n                            }\r\n                            if (i === data.chapterlist.length - 1) {\r\n                                this.setState({ prechap: data.chapterlist[i - 1].idchapter, nextchap: '' })\r\n                                // return { novelchapter: json, prechap: json1.chapterlist[i - 1].idchapter, nextchap: '' }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n    }\r\n    handleNightMode = (data) => {\r\n        let params = {\r\n            nightmode: !data,\r\n            fontsize: this.state.fontsize,\r\n            font: this.state.font,\r\n            lineheight: this.state.lineheight,\r\n            background: this.state.background,\r\n        }\r\n        this.props.settingNovel(params)\r\n    }\r\n    render() {\r\n        console.log(this.props)\r\n        console.log(this.state)\r\n        const { menuFixed, overlayFixed, overlayRect } = this.state;\r\n        return (\r\n            <Layout>\r\n                <style>\r\n                    {`\r\n          html, body {\r\n            background: ${this.props.novelReducer.nightmode === true ? '#1a1a1a' : '#f5f7fa'} ;\r\n          }\r\n        `}\r\n                </style>\r\n                <Helmet>\r\n                    <title>{`Read ${this.props.novelchapter.chaptername}`} - KitesNovel</title>\r\n                    <meta name=\"description\" content={`Read ${this.props.novelchapter.chaptername} for free, total ${this.state.totalchapter} chapter `} />\r\n                    <meta name=\"theme-color\" content=\"#008f68\" />\r\n                    <meta name=\"keywords\" content={`${this.props.novelchapter.chaptername}, ${this.props.novelchapter.chaptername} free, ${this.props.novelReducer.novelname} light novel, ${this.props.novelReducer.novelname} full chapters, ${this.props.novelReducer.novelname} latest chapters`} />\r\n                </Helmet>\r\n                <MediaContextProvider>\r\n                    <Media greaterThan='mobile'>\r\n                        <Visibility\r\n                            onBottomPassed={this.stickTopMenu}\r\n                            onBottomVisible={this.unStickTopMenu}\r\n                            once={false}\r\n                        >\r\n                            <Menu\r\n                                borderless\r\n                                fixed={menuFixed ? 'top' : undefined}\r\n                                style={menuFixed ? fixedMenuStyle : menuStyle}\r\n                            >\r\n                                <Container>\r\n                                    <Menu.Item>\r\n                                        <Link href='/'>\r\n                                            <Image size='tiny' src='/logo.png' />\r\n                                        </Link>\r\n\r\n                                    </Menu.Item>\r\n                                    <Menu.Item header>\r\n                                        <Breadcrumb size={'large'}>\r\n                                            <Breadcrumb.Section link><Link href='/'>Home</Link></Breadcrumb.Section>\r\n                                            <Breadcrumb.Divider icon='right chevron' />\r\n                                            <Breadcrumb.Section link>\r\n                                                <Link\r\n                                                    as={`/novel/${this.props.novelchapter.idnovels}`} href={`/novel/[id]`}\r\n                                                >{this.props.novelReducer.novelname}\r\n                                                </Link></Breadcrumb.Section>\r\n                                            <Breadcrumb.Divider icon='right chevron' />\r\n                                            <Breadcrumb.Section active>{this.props.novelchapter.chaptername}</Breadcrumb.Section>\r\n                                        </Breadcrumb>\r\n                                    </Menu.Item>\r\n                                </Container>\r\n                            </Menu>\r\n                        </Visibility>\r\n                    </Media>\r\n                    <Media at='mobile'>\r\n                        <Visibility\r\n                            onBottomPassed={this.stickTopMenu}\r\n                            onBottomVisible={this.unStickTopMenu}\r\n                            once={false}\r\n                        >\r\n                            <Menu\r\n                                borderless\r\n                                fixed={menuFixed ? 'top' : undefined}\r\n                                style={menuFixed ? fixedMenuStyle : menuStyle}\r\n                            >\r\n                                <Container>\r\n                                    <Menu.Item>\r\n                                        <Link href='/'>\r\n                                            <Image size='tiny' src='/logo.png' />\r\n                                        </Link>\r\n                                    </Menu.Item>\r\n                                    <Menu.Item header>\r\n                                        <Breadcrumb size={'large'}>\r\n                                            <Breadcrumb.Section link>\r\n                                                <Link\r\n                                                    as={`/novel/${this.props.novelchapter.idnovels}`} href={`/novel/[id]`}\r\n                                                >{this.props.novelReducer.novelname}\r\n                                                </Link></Breadcrumb.Section>\r\n                                        </Breadcrumb>\r\n                                    </Menu.Item>\r\n                                </Container>\r\n                            </Menu>\r\n                        </Visibility>\r\n                    </Media>\r\n                </MediaContextProvider>\r\n                <Container text style={{ backgroundColor: this.props.novelReducer.nightmode === true ? '#232323' : this.props.novelReducer.background }}>\r\n                    <Grid style={{ marginTop: 20 }}>\r\n                        <Grid.Column className='detail-containers' mobile={16} tablet={16} computer={16}>\r\n                            <Ref innerRef={this.contextRef}>\r\n                                <Segment style={{ backgroundColor: this.props.novelReducer.nightmode === true ? '#232323' : this.props.novelReducer.background }}>\r\n                                    <Item.Group textAlign='left'>\r\n                                        <Item.Description className='content' style={{\r\n                                            fontFamily: this.props.novelReducer.font, lineHeight: this.props.novelReducer.lineheight,\r\n                                            fontSize: this.props.novelReducer.fontsize, color: this.props.novelReducer.nightmode === true ? '#b3b3b3' : 'black'\r\n                                        }} >\r\n                                            {this.props.novelchapter.content !== undefined ?\r\n                                                ReactHtmlParser(this.props.novelchapter.content)\r\n                                                : null\r\n                                            }\r\n                                        </Item.Description>\r\n                                    </Item.Group>\r\n                                    <MediaContextProvider>\r\n                                        <Media greaterThan='mobile'>\r\n                                            <Rail position='right' style={{ marginTop: 100 }}>\r\n                                                <Sticky offset={100} bottomOffset={100} context={this.contextRef}>\r\n                                                    <List>\r\n                                                        <List.Item>\r\n                                                            <Popup position='left center' trigger={<Button size='large' circular icon='bars' />} flowing hoverable>\r\n                                                                <Grid textAlign='left' divided columns={1}>\r\n                                                                    <Grid.Column textAlign='left'>\r\n                                                                        <Header as='h4'>Background</Header>\r\n                                                                        <Grid.Row>\r\n                                                                            <Grid.Column>\r\n                                                                                <Button circular />\r\n                                                                            </Grid.Column>\r\n                                                                            <Grid.Column>\r\n                                                                                <Button circular />\r\n                                                                            </Grid.Column>\r\n                                                                            <Grid.Column>\r\n                                                                                <Button circular />\r\n                                                                            </Grid.Column>\r\n                                                                            <Grid.Column>\r\n                                                                                <Button circular />\r\n                                                                            </Grid.Column>\r\n                                                                        </Grid.Row>\r\n                                                                    </Grid.Column>\r\n\r\n                                                                </Grid>\r\n                                                            </Popup>\r\n\r\n                                                        </List.Item>\r\n                                                        <List.Item>\r\n                                                            <Button size='large' circular icon='font' />\r\n                                                        </List.Item>\r\n                                                        <List.Item>\r\n                                                            <Button onClick={() => this.handleNightMode(this.props.novelReducer.nightmode)} size='large' circular icon={this.props.novelReducer.nightmode ? 'lightbulb outline' : 'moon'} />\r\n                                                        </List.Item>\r\n                                                    </List>\r\n                                                </Sticky>\r\n                                            </Rail>\r\n                                        </Media>\r\n                                    </MediaContextProvider>\r\n                                </Segment>\r\n                            </Ref>\r\n                        </Grid.Column>\r\n                        <MediaContextProvider>\r\n                            <Media greaterThan='mobile'>\r\n                                <Grid.Row verticalAlign='middle'>\r\n                                    <Button.Group widths='3'>\r\n                                        <Link\r\n                                            as={`/doc/${this.props.novelchapter.idnovels}/${this.state.prechap}`}\r\n                                            href={`/doc/[id]/[chapter]`}\r\n                                        >\r\n                                            <Button size='huge' color='black' disabled={this.state.prechap !== \"\" ? false : true} labelPosition='left' icon='left chevron' content='Prev chapter' />\r\n                                        </Link>\r\n\r\n                                        <Button size='huge' color='black' icon='bars' content='Chapter List' />\r\n                                        <Link\r\n                                            as={`/doc/${this.props.novelchapter.idnovels}/${this.state.nextchap}`}\r\n                                            href={`/doc/[id]/[chapter]`}\r\n                                        >\r\n                                            <Button size='huge' color='black' disabled={this.state.nextchap !== \"\" ? false : true} labelPosition='right' icon='right chevron' content='Next chapter' />\r\n                                        </Link>\r\n                                    </Button.Group>\r\n                                </Grid.Row>\r\n                            </Media>\r\n                            <Media at='mobile'>\r\n                                <Grid.Row mobile={16} tablet={16} computer={16} verticalAlign='middle'>\r\n                                    <Button.Group widths='3'>\r\n                                        <Link\r\n                                            as={`/doc/${this.props.novelchapter.idnovels}/${this.state.prechap}`}\r\n                                            href={`/doc/[id]/[chapter]`}\r\n                                        >\r\n                                            <Button size='huge' color='black' disabled={this.state.prechap !== \"\" ? false : true} labelPosition='left' icon='left chevron' />\r\n                                        </Link>\r\n\r\n                                        <Button size='huge' color='black' icon='bars' />\r\n                                        <Link\r\n                                            as={`/doc/${this.props.novelchapter.idnovels}/${this.state.nextchap}`}\r\n                                            href={`/doc/[id]/[chapter]`}\r\n                                        >\r\n                                            <Button size='huge' color='black' disabled={this.state.nextchap !== \"\" ? false : true} labelPosition='right' icon='right chevron' />\r\n                                        </Link>\r\n                                    </Button.Group>\r\n                                </Grid.Row>\r\n                            </Media>\r\n                        </MediaContextProvider>\r\n                    </Grid>\r\n                </Container>\r\n\r\n            </Layout>\r\n        )\r\n    }\r\n}\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        novelReducer: state.novelReducer\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, { saveNovel, settingNovel })(Chapter);"]},"metadata":{},"sourceType":"module"}