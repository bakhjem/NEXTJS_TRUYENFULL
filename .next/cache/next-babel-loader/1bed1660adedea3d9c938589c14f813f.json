{"ast":null,"code":"var __jsx = React.createElement;\nimport Layout from '../../components/MyLayout';\nimport 'isomorphic-unfetch';\nimport Link from 'next/link';\nimport { useRouter } from 'next/router';\nimport React, { useEffect } from 'react';\nimport ReactHtmlParser, { processNodes, convertNodeToElement, htmlparser2 } from 'react-html-parser';\nimport { Helmet } from 'react-helmet';\nimport { Container, Divider, Dropdown, Grid, Header, Image, List, Menu, Icon, Segment, Pagination } from 'semantic-ui-react';\nimport { API_URL } from '../../config/config';\n\nfunction Hot(props) {\n  const router = useRouter();\n\n  const handleChangepage = (e, data) => {\n    console.log(data);\n\n    if (data.activePage !== props.page) {\n      router.push(`/hot/${data.activePage}`);\n    }\n  };\n\n  return __jsx(Layout, null, __jsx(\"style\", null, `\n          html, body {\n            background-color: #242933 !important;\n          }\n          p {\n            align-content: center;\n            background-color: #495285;\n            color: #fff;\n            display: flex;\n            flex-direction: column;\n            justify-content: center;\n            min-height: 6em;\n          }\n          p > span {\n            opacity: 0.4;\n            text-align: center;\n          }\n        }\n        `), __jsx(Helmet, null, __jsx(\"title\", null, \"KitesNovel - Huge Web Novel Community for Reading\"), __jsx(\"meta\", {\n    name: \"description\",\n    content: \"A Huge Web Novel Community incloud Chinese Novels ( Translated ) , Original Novels, Light Novels and more. You can read all of them Online or Offline. Popular Novel Updates Daily With Fast Translation Speed And High Quality. We provide all genres of  web novel. e.g. love story, historical, romance, fantasy, wuxia, xianxia, light novel and another novels\"\n  }), __jsx(\"meta\", {\n    name: \"theme-color\",\n    content: \"#008f68\"\n  }), __jsx(\"meta\", {\n    name: \"keywords\",\n    content: \"Chinese novel,novel updates,web novel,novel online,read novels online,light novel,novel translation,wuxia\"\n  })), __jsx(Container, {\n    style: {\n      marginTop: '7em'\n    }\n  }, __jsx(Grid, null, __jsx(Grid.Column, {\n    mobile: 16,\n    tablet: 16,\n    computer: 16\n  }, __jsx(Header, {\n    className: \"title-name\",\n    as: \"h2\"\n  }, \"Popular Novel\")), props.data.data.length !== 0 ? props.data.data.map(mangalist => __jsx(Grid.Column, {\n    mobile: 8,\n    tablet: 3,\n    computer: 3\n  }, __jsx(Grid, {\n    verticalAlign: \"top\"\n  }, __jsx(Grid.Column, {\n    mobile: 16,\n    tablet: 16,\n    computer: 16\n  }, __jsx(Link, {\n    as: `/novel/${mangalist.idnovel}`,\n    href: `/novel/[id]` // href={'/truyen/' + mangalist.idnovel}\n\n  }, __jsx(Image, {\n    fluid: true,\n    label: {\n      color: 'orange',\n      content: `View: ${mangalist.view}`,\n      ribbon: true\n    },\n    className: \"item-img\",\n    src: mangalist.cover,\n    style: {\n      height: 240\n    }\n  }))), __jsx(Grid.Column, {\n    mobile: 16,\n    tablet: 16,\n    computer: 16\n  }, __jsx(Link, {\n    as: `/novel/${mangalist.idnovel}`,\n    href: `/novel/[id]` // href={'/truyen/' + mangalist.idnovel}\n\n  }, __jsx(Header, {\n    className: \"book-name\",\n    as: \"h4\"\n  }, mangalist.novelsname)), __jsx(Header, {\n    className: \"book-catalog\",\n    size: \"tiny\",\n    as: \"h6\"\n  }, \"Last chapter: \", mangalist.lasterchapter))))) : null, __jsx(Grid.Column, {\n    mobile: 16,\n    tablet: 16,\n    computer: 16\n  }, __jsx(Pagination, {\n    onPageChange: (e, data) => handleChangepage(e, data),\n    defaultActivePage: props.page,\n    totalPages: props.data.totalpage\n  })))));\n}\n\nHot.getInitialProps = async context => {\n  // eslint-disable-next-line no-undef\n  const {\n    page\n  } = context.query;\n  const res = await fetch(`${API_URL}hotnovel?page=${page}`);\n  const json = await res.json(); // console.log(json)\n\n  return {\n    data: json,\n    page: page\n  };\n};\n\nexport default Hot;","map":{"version":3,"sources":["C:/Users/bakhjem/Desktop/nhattin/nextjstruyen/pages/hot/[page].js"],"names":["Layout","Link","useRouter","React","useEffect","ReactHtmlParser","processNodes","convertNodeToElement","htmlparser2","Helmet","Container","Divider","Dropdown","Grid","Header","Image","List","Menu","Icon","Segment","Pagination","API_URL","Hot","props","router","handleChangepage","e","data","console","log","activePage","page","push","marginTop","length","map","mangalist","idnovel","color","content","view","ribbon","cover","height","novelsname","lasterchapter","totalpage","getInitialProps","context","query","res","fetch","json"],"mappings":"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","sourcesContent":["\r\nimport Layout from '../../components/MyLayout'\r\nimport 'isomorphic-unfetch'\r\nimport Link from 'next/link';\r\nimport { useRouter } from 'next/router'\r\nimport React, { useEffect } from 'react'\r\nimport ReactHtmlParser, { processNodes, convertNodeToElement, htmlparser2 } from 'react-html-parser';\r\nimport { Helmet } from 'react-helmet';\r\nimport {\r\n    Container,\r\n    Divider,\r\n    Dropdown,\r\n    Grid,\r\n    Header,\r\n    Image,\r\n    List,\r\n    Menu,\r\n    Icon,\r\n    Segment,\r\n    Pagination\r\n} from 'semantic-ui-react';\r\nimport { API_URL } from '../../config/config'\r\n\r\nfunction Hot(props) {\r\n    const router = useRouter()\r\n    const handleChangepage = (e, data) => {\r\n        console.log(data)\r\n        if (data.activePage !== props.page) {\r\n            router.push(`/hot/${data.activePage}`)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Layout>\r\n            <style>\r\n                {`\r\n          html, body {\r\n            background-color: #242933 !important;\r\n          }\r\n          p {\r\n            align-content: center;\r\n            background-color: #495285;\r\n            color: #fff;\r\n            display: flex;\r\n            flex-direction: column;\r\n            justify-content: center;\r\n            min-height: 6em;\r\n          }\r\n          p > span {\r\n            opacity: 0.4;\r\n            text-align: center;\r\n          }\r\n        }\r\n        `}\r\n            </style>\r\n            <Helmet>\r\n                <title>KitesNovel - Huge Web Novel Community for Reading</title>\r\n                <meta name=\"description\" content=\"A Huge Web Novel Community incloud Chinese Novels ( Translated ) , Original Novels, Light Novels and more. You can read all of them Online or Offline. Popular Novel Updates Daily With Fast Translation Speed And High Quality. We provide all genres of  web novel. e.g. love story, historical, romance, fantasy, wuxia, xianxia, light novel and another novels\" />\r\n                <meta name=\"theme-color\" content=\"#008f68\" />\r\n                <meta name=\"keywords\" content=\"Chinese novel,novel updates,web novel,novel online,read novels online,light novel,novel translation,wuxia\" />\r\n            </Helmet>\r\n            <Container style={{ marginTop: '7em' }}>\r\n                <Grid>\r\n                    <Grid.Column mobile={16} tablet={16} computer={16}>\r\n                        <Header className='title-name' as='h2'>Popular Novel</Header>\r\n                    </Grid.Column>\r\n                    {props.data.data.length !== 0 ?\r\n                        props.data.data.map(mangalist => (\r\n                            <Grid.Column mobile={8} tablet={3} computer={3}>\r\n                                <Grid verticalAlign='top'>\r\n                                    <Grid.Column mobile={16} tablet={16} computer={16}>\r\n                                        <Link\r\n                                            as={`/novel/${mangalist.idnovel}`} href={`/novel/[id]`}\r\n                                        // href={'/truyen/' + mangalist.idnovel}\r\n                                        >\r\n                                            <Image fluid label={{\r\n                                                color: 'orange',\r\n                                                content: `View: ${mangalist.view}`,\r\n                                                ribbon: true,\r\n                                            }} className='item-img' src={mangalist.cover} style={{ height: 240 }} />\r\n                                        </Link>\r\n\r\n                                    </Grid.Column>\r\n                                    <Grid.Column mobile={16} tablet={16} computer={16} >\r\n                                        <Link\r\n                                            as={`/novel/${mangalist.idnovel}`} href={`/novel/[id]`}\r\n                                        // href={'/truyen/' + mangalist.idnovel}\r\n                                        >\r\n                                            <Header className='book-name' as='h4'>{mangalist.novelsname}</Header>\r\n                                        </Link>\r\n\r\n                                        <Header className='book-catalog' size='tiny' as='h6'>Last chapter: {mangalist.lasterchapter}</Header>\r\n                                    </Grid.Column>\r\n                                </Grid>\r\n                            </Grid.Column>\r\n                        )) : null}\r\n                    <Grid.Column mobile={16} tablet={16} computer={16}>\r\n                        <Pagination onPageChange={(e, data) => handleChangepage(e, data)} defaultActivePage={props.page} totalPages={props.data.totalpage} />\r\n                    </Grid.Column>\r\n                </Grid>\r\n\r\n            </Container>\r\n\r\n        </Layout>\r\n    )\r\n\r\n}\r\nHot.getInitialProps = async (context) => {\r\n    // eslint-disable-next-line no-undef\r\n    const { page } = context.query\r\n    const res = await fetch(`${API_URL}hotnovel?page=${page}`)\r\n    const json = await res.json()\r\n    // console.log(json)\r\n    return { data: json, page: page }\r\n}\r\nexport default Hot"]},"metadata":{},"sourceType":"module"}