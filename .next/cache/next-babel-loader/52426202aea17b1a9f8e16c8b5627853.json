{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport Layout from '../../../components/MyLayout';\nimport 'isomorphic-unfetch';\nimport Link from 'next/link';\nimport React, { Component, createRef } from 'react';\nimport { createMedia } from '@artsy/fresnel';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport ReactHtmlParser, { processNodes, convertNodeToElement, htmlparser2 } from 'react-html-parser';\nimport { Helmet } from 'react-helmet';\nimport { saveNovel, settingNovel } from '../../../redux/actions/novelActions';\nimport { API_URL } from '../../../config/config';\nimport { Container, Breadcrumb, Divider, Dropdown, Grid, Header, Select, Icon, Image, List, Menu, Segment, Visibility, Item, Sticky, Rail, Ref, Button, Popup, Modal } from 'semantic-ui-react';\n\nvar _createMedia = createMedia({\n  breakpoints: {\n    mobile: 0,\n    tablet: 768,\n    computer: 1024\n  }\n}),\n    MediaContextProvider = _createMedia.MediaContextProvider,\n    Media = _createMedia.Media;\n\nvar menuStyle = {\n  border: 'none',\n  borderRadius: 0,\n  boxShadow: 'none',\n  marginBottom: '1em',\n  transition: 'box-shadow 0.5s ease, padding 0.5s ease'\n};\nvar fixedMenuStyle = {\n  // backgroundColor: '#fff',\n  // border: '1px solid #ddd',\n  boxShadow: '0px 3px 5px rgba(0, 0, 0, 0.2)'\n};\nvar countryOptions = [{\n  key: 'Merriweather',\n  value: 'Merriweather',\n  text: 'Merriweather'\n}, {\n  key: 'Libre Baskerville',\n  value: 'Libre Baskerville',\n  text: 'Libre Baskerville'\n}, {\n  key: 'Gentium Book Basic',\n  value: 'Gentium Book Basic',\n  text: 'Gentium Book Basic'\n}, {\n  key: 'Roboto',\n  value: 'Roboto',\n  text: 'Roboto'\n}, {\n  key: 'Rubik',\n  value: 'Rubik',\n  text: 'Rubik'\n}, {\n  key: 'Nunito',\n  value: 'Nunito',\n  text: 'Nunito'\n}];\n\nvar Chapter = /*#__PURE__*/function (_React$Component) {\n  _inherits(Chapter, _React$Component);\n\n  var _super = _createSuper(Chapter);\n\n  function Chapter(props) {\n    var _this;\n\n    _classCallCheck(this, Chapter);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"contextRef\", /*#__PURE__*/createRef());\n\n    _defineProperty(_assertThisInitialized(_this), \"handleOverlayRef\", function (c) {\n      var overlayRect = _this.state.overlayRect;\n\n      if (!overlayRect) {\n        _this.setState({\n          overlayRect: _.pick(c.getBoundingClientRect(), 'height', 'width')\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"stickOverlay\", function () {\n      return _this.setState({\n        overlayFixed: true\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"stickTopMenu\", function () {\n      return _this.setState({\n        menuFixed: true\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"unStickOverlay\", function () {\n      return _this.setState({\n        overlayFixed: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"unStickTopMenu\", function () {\n      return _this.setState({\n        menuFixed: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleNightMode\", function (data) {\n      var params = {\n        nightmode: !data,\n        fontsize: _this.state.fontsize,\n        font: _this.state.font,\n        lineheight: _this.state.lineheight,\n        background: _this.state.background\n      };\n\n      _this.props.settingNovel(params);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleChangeBackground\", function (data, bigdata) {\n      if (data === '#232323') {\n        var _params = {\n          nightmode: true,\n          fontsize: _this.state.fontsize,\n          font: _this.state.font,\n          lineheight: _this.state.lineheight,\n          background: _this.state.background,\n          backgroundbig: bigdata\n        };\n        return _this.props.settingNovel(_params);\n      }\n\n      var params = {\n        nightmode: false,\n        fontsize: _this.state.fontsize,\n        font: _this.state.font,\n        lineheight: _this.state.lineheight,\n        background: data,\n        backgroundbig: bigdata\n      };\n\n      _this.props.settingNovel(params);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleChangeFont\", function (e, data) {\n      console.log(data);\n      var params = {\n        nightmode: _this.state.nightmode,\n        fontsize: _this.state.fontsize,\n        font: data.value,\n        lineheight: _this.state.lineheight,\n        background: _this.state.background,\n        backgroundbig: _this.state.backgroundbig\n      };\n      return _this.props.settingNovel(params);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleDegree\", function (type) {\n      if (type === 1) {\n        var params = {\n          nightmode: _this.state.nightmode,\n          fontsize: _this.state.fontsize - 2 < 14 ? _this.state.fontsize : _this.state.fontsize - 2,\n          font: _this.state.value,\n          lineheight: _this.state.lineheight,\n          background: _this.state.background,\n          backgroundbig: _this.state.backgroundbig\n        };\n        return _this.props.settingNovel(params);\n      } else {\n        var _params2 = {\n          nightmode: _this.state.nightmode,\n          fontsize: _this.state.fontsize + 2 > 32 ? _this.state.fontsize : _this.state.fontsize + 2,\n          font: _this.state.value,\n          lineheight: _this.state.lineheight,\n          background: _this.state.background,\n          backgroundbig: _this.state.backgroundbig\n        };\n        return _this.props.settingNovel(_params2);\n      }\n    });\n\n    _this.state = {\n      prechap: '',\n      nextchap: '',\n      menuFixed: false,\n      overlayFixed: false,\n      totalchapter: 1,\n      showmodal: false,\n      listchapter: []\n    };\n    return _this;\n  }\n\n  _createClass(Chapter, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var _this2 = this;\n\n      if (this.props.novelchapter !== prevProps.novelchapter) {\n        fetch(\"\".concat(API_URL, \"novel?id=\").concat(this.props.novelchapter.idnovels)).then(function (r) {\n          return r.json();\n        }).then(function (data) {\n          console.log(data);\n\n          if (data.chapterlist.length === 1) {\n            _this2.state({\n              prechap: '',\n              nextchap: '',\n              totalchapter: data.chapterlist.length,\n              listchapter: data.chapterlist,\n              showmodal: false\n            });\n          } else {\n            for (var i = 0; i < data.chapterlist.length; i++) {\n              if (_this2.props.novelchapter.idchapter === data.chapterlist[i].idchapter) {\n                if (i === 0) {\n                  _this2.setState({\n                    prechap: '',\n                    nextchap: data.chapterlist[i + 1].idchapter,\n                    totalchapter: data.chapterlist.length,\n                    showmodal: false,\n                    listchapter: data.chapterlist\n                  }); // return { novelchapter: json, prechap: '', nextchap: json1.chapterlist[i + 1].idchapter }\n\n                }\n\n                if (i > 0 && i < data.chapterlist.length - 1) {\n                  _this2.setState({\n                    prechap: data.chapterlist[i - 1].idchapter,\n                    nextchap: data.chapterlist[i + 1].idchapter,\n                    showmodal: false,\n                    totalchapter: data.chapterlist.length,\n                    listchapter: data.chapterlist\n                  }); // return { novelchapter: json, prechap: json1.chapterlist[i - 1].idchapter, nextchap: json1.chapterlist[i + 1].idchapter }\n\n                }\n\n                if (i === data.chapterlist.length - 1) {\n                  _this2.setState({\n                    prechap: data.chapterlist[i - 1].idchapter,\n                    nextchap: '',\n                    totalchapter: data.chapterlist.length,\n                    showmodal: false,\n                    listchapter: data.chapterlist\n                  }); // return { novelchapter: json, prechap: json1.chapterlist[i - 1].idchapter, nextchap: '' }\n\n                }\n              }\n            }\n          }\n        });\n      }\n\n      if (this.props.novelReducer !== prevProps.novelReducer) {\n        this.setState({\n          nightmode: this.props.novelReducer.nightmode,\n          fontsize: this.props.novelReducer.fontsize,\n          font: this.props.novelReducer.font,\n          lineheight: this.props.novelReducer.lineheight,\n          background: this.props.novelReducer.background,\n          backgroundbig: this.props.novelReducer.background\n        });\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this3 = this;\n\n      fetch(\"\".concat(API_URL, \"novel?id=\").concat(this.props.novelchapter.idnovels)).then(function (r) {\n        return r.json();\n      }).then(function (data) {\n        _this3.props.saveNovel(data);\n\n        if (data.chapterlist.length === 1) {\n          _this3.state({\n            prechap: '',\n            nextchap: ''\n          });\n        } else {\n          for (var i = 0; i < data.chapterlist.length; i++) {\n            if (_this3.props.novelchapter.idchapter === data.chapterlist[i].idchapter) {\n              if (i === 0) {\n                _this3.setState({\n                  prechap: '',\n                  nextchap: data.chapterlist[i + 1].idchapter,\n                  listchapter: data.chapterlist\n                });\n              }\n\n              if (i > 0 && i < data.chapterlist.length - 1) {\n                _this3.setState({\n                  prechap: data.chapterlist[i - 1].idchapter,\n                  nextchap: data.chapterlist[i + 1].idchapter,\n                  listchapter: data.chapterlist\n                });\n              }\n\n              if (i === data.chapterlist.length - 1) {\n                _this3.setState({\n                  prechap: data.chapterlist[i - 1].idchapter,\n                  nextchap: '',\n                  listchapter: data.chapterlist\n                });\n              }\n            }\n          }\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      console.log(this.props);\n      console.log(this.state);\n      var _this$state = this.state,\n          menuFixed = _this$state.menuFixed,\n          overlayFixed = _this$state.overlayFixed,\n          overlayRect = _this$state.overlayRect;\n      return __jsx(Layout, null, __jsx(\"style\", null, \"\\n          html, body {\\n            background: \".concat(this.props.novelReducer.nightmode === true ? '#1a1a1a' : this.props.novelReducer.backgroundbig, \" ;\\n          }\\n        \")), __jsx(Helmet, null, __jsx(\"title\", null, \"Read \".concat(this.props.novelchapter.chaptername), \" - KitesNovel\"), __jsx(\"meta\", {\n        name: \"description\",\n        content: \"Read \".concat(this.props.novelchapter.chaptername, \" for free, total \").concat(this.state.totalchapter, \" chapter \")\n      }), __jsx(\"meta\", {\n        name: \"theme-color\",\n        content: \"#008f68\"\n      }), __jsx(\"meta\", {\n        name: \"keywords\",\n        content: \"\".concat(this.props.novelchapter.chaptername, \", \").concat(this.props.novelchapter.chaptername, \" free, \").concat(this.props.novelReducer.novelname, \" light novel, \").concat(this.props.novelReducer.novelname, \" full chapters, \").concat(this.props.novelReducer.novelname, \" latest chapters\")\n      })), __jsx(MediaContextProvider, null, __jsx(Media, {\n        greaterThan: \"mobile\"\n      }, __jsx(Visibility, {\n        onBottomPassed: this.stickTopMenu,\n        onBottomVisible: this.unStickTopMenu,\n        once: false\n      }, __jsx(Menu, {\n        borderless: true,\n        inverted: this.props.novelReducer.nightmode,\n        fixed: menuFixed ? 'top' : undefined,\n        style: menuFixed ? fixedMenuStyle : menuStyle\n      }, __jsx(Container, null, __jsx(Menu.Item, {\n        header: true\n      }, __jsx(Breadcrumb, {\n        size: 'large'\n      }, __jsx(Breadcrumb.Section, {\n        link: true\n      }, __jsx(Link, {\n        href: \"/\"\n      }, \"Home\")), __jsx(Breadcrumb.Divider, {\n        icon: \"right chevron\"\n      }), __jsx(Breadcrumb.Section, {\n        link: true\n      }, __jsx(Link, {\n        as: \"/novel/\".concat(this.props.novelchapter.idnovels),\n        href: \"/novel/[id]\"\n      }, this.props.novelReducer.novelname)), __jsx(Breadcrumb.Divider, {\n        icon: \"right chevron\"\n      }), __jsx(Breadcrumb.Section, {\n        active: true\n      }, this.props.novelchapter.chaptername))))))), __jsx(Media, {\n        at: \"mobile\"\n      }, __jsx(Visibility, {\n        onBottomPassed: this.stickTopMenu,\n        onBottomVisible: this.unStickTopMenu,\n        once: false\n      }, __jsx(Menu, {\n        borderless: true,\n        inverted: this.props.novelReducer.nightmode,\n        fixed: menuFixed ? 'top' : undefined,\n        style: menuFixed ? fixedMenuStyle : menuStyle\n      }, __jsx(Menu.Item, {\n        style: {\n          width: '80%',\n          overflow: 'hidden'\n        },\n        header: true,\n        position: \"left\"\n      }, __jsx(Breadcrumb, {\n        size: 'large'\n      }, __jsx(Breadcrumb.Section, {\n        link: true\n      }, __jsx(Link, {\n        as: \"/novel/\".concat(this.props.novelchapter.idnovels),\n        href: \"/novel/[id]\"\n      }, this.props.novelReducer.novelname)))), __jsx(Menu.Item, {\n        position: \"right\"\n      }, __jsx(Button, {\n        onClick: function onClick() {\n          return _this4.handleNightMode(_this4.props.novelReducer.nightmode);\n        },\n        size: \"large\",\n        circular: true,\n        icon: this.props.novelReducer.nightmode ? 'lightbulb outline' : 'moon'\n      })))))), __jsx(Container, {\n        text: true,\n        style: {\n          backgroundColor: this.props.novelReducer.nightmode === true ? '#232323' : this.props.novelReducer.background\n        }\n      }, __jsx(Grid, {\n        style: {\n          marginTop: 20\n        }\n      }, __jsx(Grid.Column, {\n        className: \"detail-containers\",\n        mobile: 16,\n        tablet: 16,\n        computer: 16\n      }, __jsx(Ref, {\n        innerRef: this.contextRef\n      }, __jsx(Segment, {\n        style: {\n          backgroundColor: this.props.novelReducer.nightmode === true ? '#232323' : this.props.novelReducer.background\n        }\n      }, __jsx(Item.Group, {\n        textAlign: \"left\"\n      }, __jsx(Item.Description, {\n        className: \"content\",\n        style: {\n          fontFamily: this.props.novelReducer.font,\n          lineHeight: this.props.novelReducer.lineheight,\n          fontSize: this.props.novelReducer.fontsize,\n          color: this.props.novelReducer.nightmode === true ? '#b3b3b3' : 'black'\n        }\n      }, this.props.novelchapter.content !== undefined ? ReactHtmlParser(this.props.novelchapter.content) : null)), __jsx(MediaContextProvider, null, __jsx(Media, {\n        greaterThan: \"mobile\"\n      }, __jsx(Rail, {\n        position: \"right\",\n        style: {\n          marginTop: 100\n        }\n      }, __jsx(Sticky, {\n        offset: 100,\n        bottomOffset: 100,\n        context: this.contextRef\n      }, __jsx(List, null, __jsx(List.Item, null, __jsx(Popup, {\n        position: \"left center\",\n        trigger: __jsx(Button, {\n          size: \"large\",\n          circular: true,\n          icon: \"font\"\n        }),\n        flowing: true,\n        hoverable: true\n      }, __jsx(Grid, {\n        textAlign: \"left\",\n        divided: true,\n        columns: 1\n      }, __jsx(Grid.Column, {\n        textAlign: \"left\"\n      }, __jsx(Header, {\n        as: \"h4\"\n      }, \"Background\"), __jsx(Grid, {\n        columns: 4\n      }, __jsx(Grid.Row, null, __jsx(Grid.Column, null, __jsx(\"div\", {\n        onClick: function onClick() {\n          return _this4.handleChangeBackground('#fff', '#f5f7fa');\n        },\n        className: \"read-setting_white-color__3ZTE4\"\n      })), __jsx(Grid.Column, null, __jsx(\"div\", {\n        onClick: function onClick() {\n          return _this4.handleChangeBackground('#fff6df', '#fff9eb');\n        },\n        className: \"read-setting_orange-color__3chix\"\n      })), __jsx(Grid.Column, null, __jsx(\"div\", {\n        onClick: function onClick() {\n          return _this4.handleChangeBackground('#ebf9eb', '#f2f9f2');\n        },\n        className: \"read-setting_green-color__WTjD7\"\n      })), __jsx(Grid.Column, null, __jsx(\"div\", {\n        onClick: function onClick() {\n          return _this4.handleChangeBackground('#232323', '#1a1a1a');\n        },\n        className: \"read-setting_black-color__3KmIV\"\n      }))))), __jsx(Grid.Column, {\n        textAlign: \"left\"\n      }, __jsx(Header, {\n        as: \"h4\"\n      }, \"Font Size\"), __jsx(Grid, {\n        columns: 4\n      }, __jsx(Grid.Row, null, __jsx(Button.Group, {\n        size: \"large\"\n      }, __jsx(Button, {\n        onClick: function onClick() {\n          return _this4.handleDegree(1);\n        }\n      }, \"A-\"), __jsx(Button.Or, {\n        text: this.props.novelReducer.fontsize\n      }), __jsx(Button, {\n        onClick: function onClick() {\n          return _this4.handleDegree(2);\n        }\n      }, \"A+\")), __jsx(Select, {\n        onChange: function onChange(e, data) {\n          return _this4.handleChangeFont(e, data);\n        },\n        defaultValue: this.props.novelReducer.font,\n        options: countryOptions\n      })), __jsx(Grid.Row, null)))))), __jsx(List.Item, null, __jsx(Modal, {\n        open: this.state.showmodal,\n        style: {\n          backgroundColor: this.props.novelReducer.nightmode === true ? '#232323' : this.props.novelReducer.background\n        },\n        size: \"tiny\",\n        onClose: function onClose() {\n          return _this4.setState({\n            showmodal: false\n          });\n        },\n        onOpen: function onOpen() {\n          return _this4.setState({\n            showmodal: true\n          });\n        },\n        trigger: __jsx(Button, {\n          size: \"large\",\n          circular: true,\n          icon: \"bars\"\n        })\n      }, __jsx(Modal.Header, {\n        style: {\n          color: this.props.novelReducer.nightmode === true ? '#b3b3b3' : 'black',\n          backgroundColor: this.props.novelReducer.nightmode === true ? '#232323' : this.props.novelReducer.background\n        }\n      }, this.props.novelReducer.novelname), __jsx(Modal.Content, {\n        image: true,\n        scrolling: true,\n        style: {\n          backgroundColor: this.props.novelReducer.nightmode === true ? '#232323' : this.props.novelReducer.background\n        }\n      }, __jsx(Modal.Description, null, __jsx(List, {\n        divided: true,\n        relaxed: true,\n        style: {\n          color: this.props.novelReducer.nightmode === true ? '#b3b3b3' : 'black'\n        }\n      }, this.state.listchapter.map(function (datachapter, key) {\n        return __jsx(List.Item, null, __jsx(List.Content, null, __jsx(Link, {\n          as: \"/doc/\".concat(_this4.props.novelchapter.idnovels, \"/\").concat(datachapter.idchapter),\n          href: \"/doc/[id]/[chapter]\"\n        }, __jsx(List.Header, {\n          style: {\n            color: _this4.props.novelReducer.nightmode === true ? '#b3b3b3' : 'black'\n          },\n          as: \"a\"\n        }, datachapter.chaptername))));\n      })))))), __jsx(List.Item, null, __jsx(Button, {\n        onClick: function onClick() {\n          return _this4.handleNightMode(_this4.props.novelReducer.nightmode);\n        },\n        size: \"large\",\n        circular: true,\n        icon: this.props.novelReducer.nightmode ? 'lightbulb outline' : 'moon'\n      })))))))))), __jsx(MediaContextProvider, null, __jsx(Media, {\n        greaterThan: \"mobile\"\n      }, __jsx(Grid.Row, {\n        verticalAlign: \"middle\"\n      }, __jsx(Button.Group, {\n        widths: \"3\"\n      }, __jsx(Link, {\n        as: \"/doc/\".concat(this.props.novelchapter.idnovels, \"/\").concat(this.props.novelchapter.prechap),\n        href: \"/doc/[id]/[chapter]\"\n      }, __jsx(Button, {\n        size: \"huge\",\n        color: \"black\",\n        disabled: this.state.prechap !== \"\" ? false : true,\n        labelPosition: \"left\",\n        icon: \"left chevron\",\n        content: \"Prev chapter\"\n      })), __jsx(Modal, {\n        open: this.state.showmodal,\n        style: {\n          backgroundColor: this.props.novelReducer.nightmode === true ? '#232323' : this.props.novelReducer.background\n        },\n        size: \"tiny\",\n        onClose: function onClose() {\n          return _this4.setState({\n            showmodal: false\n          });\n        },\n        onOpen: function onOpen() {\n          return _this4.setState({\n            showmodal: true\n          });\n        },\n        trigger: __jsx(Button, {\n          size: \"huge\",\n          color: \"black\",\n          icon: \"bars\",\n          content: \"Chapter List\"\n        })\n      }, __jsx(Modal.Header, {\n        style: {\n          color: this.props.novelReducer.nightmode === true ? '#b3b3b3' : 'black',\n          backgroundColor: this.props.novelReducer.nightmode === true ? '#232323' : this.props.novelReducer.background\n        }\n      }, this.props.novelReducer.novelname), __jsx(Modal.Content, {\n        image: true,\n        scrolling: true,\n        style: {\n          backgroundColor: this.props.novelReducer.nightmode === true ? '#232323' : this.props.novelReducer.background\n        }\n      }, __jsx(Modal.Description, null, __jsx(List, {\n        divided: true,\n        relaxed: true,\n        style: {\n          color: this.props.novelReducer.nightmode === true ? '#b3b3b3' : 'black'\n        }\n      }, this.state.listchapter.map(function (datachapter, key) {\n        return __jsx(List.Item, null, __jsx(List.Content, null, __jsx(Link, {\n          as: \"/doc/\".concat(_this4.props.novelchapter.idnovels, \"/\").concat(datachapter.idchapter),\n          href: \"/doc/[id]/[chapter]\"\n        }, __jsx(List.Header, {\n          style: {\n            color: _this4.props.novelReducer.nightmode === true ? '#b3b3b3' : 'black'\n          },\n          as: \"a\"\n        }, datachapter.chaptername))));\n      }))))), __jsx(Link, {\n        as: \"/doc/\".concat(this.props.novelchapter.idnovels, \"/\").concat(this.props.novelchapter.nextchap),\n        href: \"/doc/[id]/[chapter]\"\n      }, __jsx(Button, {\n        size: \"huge\",\n        color: \"black\",\n        disabled: this.state.nextchap !== \"\" ? false : true,\n        labelPosition: \"right\",\n        icon: \"right chevron\",\n        content: \"Next chapter\"\n      }))))), __jsx(Media, {\n        at: \"mobile\"\n      }, __jsx(Grid.Row, {\n        mobile: 16,\n        tablet: 16,\n        computer: 16,\n        verticalAlign: \"middle\"\n      }, __jsx(Button.Group, {\n        widths: \"3\"\n      }, __jsx(Link, {\n        as: \"/doc/\".concat(this.props.novelchapter.idnovels, \"/\").concat(this.props.novelchapter.prechap),\n        href: \"/doc/[id]/[chapter]\"\n      }, __jsx(Button, {\n        size: \"huge\",\n        color: \"black\",\n        disabled: this.props.novelchapter.prechap !== \"\" ? false : true,\n        labelPosition: \"left\",\n        icon: \"left chevron\"\n      })), __jsx(Modal, {\n        open: this.state.showmodal,\n        style: {\n          backgroundColor: this.props.novelReducer.nightmode === true ? '#232323' : this.props.novelReducer.background\n        },\n        size: \"tiny\",\n        onClose: function onClose() {\n          return _this4.setState({\n            showmodal: false\n          });\n        },\n        onOpen: function onOpen() {\n          return _this4.setState({\n            showmodal: true\n          });\n        },\n        trigger: __jsx(Button, {\n          size: \"huge\",\n          color: \"black\",\n          icon: \"bars\"\n        })\n      }, __jsx(Modal.Header, {\n        style: {\n          color: this.props.novelReducer.nightmode === true ? '#b3b3b3' : 'black',\n          backgroundColor: this.props.novelReducer.nightmode === true ? '#232323' : this.props.novelReducer.background\n        }\n      }, this.props.novelReducer.novelname), __jsx(Modal.Content, {\n        image: true,\n        scrolling: true,\n        style: {\n          backgroundColor: this.props.novelReducer.nightmode === true ? '#232323' : this.props.novelReducer.background\n        }\n      }, __jsx(Modal.Description, null, __jsx(List, {\n        divided: true,\n        relaxed: true,\n        style: {\n          color: this.props.novelReducer.nightmode === true ? '#b3b3b3' : 'black'\n        }\n      }, this.state.listchapter.map(function (datachapter, key) {\n        return __jsx(List.Item, null, __jsx(List.Content, null, __jsx(Link, {\n          as: \"/doc/\".concat(_this4.props.novelchapter.idnovels, \"/\").concat(datachapter.idchapter),\n          href: \"/doc/[id]/[chapter]\"\n        }, __jsx(List.Header, {\n          style: {\n            color: _this4.props.novelReducer.nightmode === true ? '#b3b3b3' : 'black'\n          },\n          as: \"a\"\n        }, datachapter.chaptername))));\n      }))))), __jsx(Link, {\n        as: \"/doc/\".concat(this.props.novelchapter.idnovels, \"/\").concat(this.props.novelchapter.nextchap),\n        href: \"/doc/[id]/[chapter]\"\n      }, __jsx(Button, {\n        size: \"huge\",\n        color: \"black\",\n        disabled: this.props.novelchapter.nextchap !== \"\" ? false : true,\n        labelPosition: \"right\",\n        icon: \"right chevron\"\n      })))))))));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(context) {\n        var _context$query, id, chapter, res, json;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context$query = context.query, id = _context$query.id, chapter = _context$query.chapter;\n                _context.next = 3;\n                return fetch(\"\".concat(API_URL, \"chapter?novelid=\").concat(id, \"&chapterid=/\").concat(chapter, \"/\"));\n\n              case 3:\n                res = _context.sent;\n                _context.next = 6;\n                return res.json();\n\n              case 6:\n                json = _context.sent;\n                return _context.abrupt(\"return\", {\n                  novelchapter: json\n                });\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getInitialProps(_x) {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  return Chapter;\n}(React.Component);\n\nfunction mapStateToProps(state) {\n  return {\n    novelReducer: state.novelReducer\n  };\n}\n\nexport default connect(mapStateToProps, {\n  saveNovel: saveNovel,\n  settingNovel: settingNovel\n})(Chapter);","map":{"version":3,"sources":["C:/Users/bakhjem/Desktop/nhattin/nextjstruyen - Copy/pages/doc/[id]/[chapter].js"],"names":["Layout","Link","React","Component","createRef","createMedia","connect","PropTypes","ReactHtmlParser","processNodes","convertNodeToElement","htmlparser2","Helmet","saveNovel","settingNovel","API_URL","Container","Breadcrumb","Divider","Dropdown","Grid","Header","Select","Icon","Image","List","Menu","Segment","Visibility","Item","Sticky","Rail","Ref","Button","Popup","Modal","breakpoints","mobile","tablet","computer","MediaContextProvider","Media","menuStyle","border","borderRadius","boxShadow","marginBottom","transition","fixedMenuStyle","countryOptions","key","value","text","Chapter","props","c","overlayRect","state","setState","_","pick","getBoundingClientRect","overlayFixed","menuFixed","data","params","nightmode","fontsize","font","lineheight","background","bigdata","backgroundbig","e","console","log","type","prechap","nextchap","totalchapter","showmodal","listchapter","prevProps","prevState","novelchapter","fetch","idnovels","then","r","json","chapterlist","length","i","idchapter","novelReducer","chaptername","novelname","stickTopMenu","unStickTopMenu","undefined","width","overflow","handleNightMode","backgroundColor","marginTop","contextRef","fontFamily","lineHeight","fontSize","color","content","handleChangeBackground","handleDegree","handleChangeFont","map","datachapter","context","query","id","chapter","res","mapStateToProps"],"mappings":"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","sourcesContent":["import Layout from '../../../components/MyLayout'\r\nimport 'isomorphic-unfetch'\r\nimport Link from 'next/link'\r\nimport React, { Component, createRef } from 'react';\r\nimport { createMedia } from '@artsy/fresnel'\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types'\r\nimport ReactHtmlParser, { processNodes, convertNodeToElement, htmlparser2 } from 'react-html-parser';\r\nimport { Helmet } from 'react-helmet';\r\nimport { saveNovel, settingNovel } from '../../../redux/actions/novelActions'\r\nimport { API_URL } from '../../../config/config'\r\nimport {\r\n    Container, Breadcrumb,\r\n    Divider,\r\n    Dropdown,\r\n    Grid,\r\n    Header, Select,\r\n    Icon,\r\n    Image,\r\n    List,\r\n    Menu,\r\n    Segment,\r\n    Visibility,\r\n    Item,\r\n    Sticky, Rail,\r\n    Ref, Button, Popup, Modal\r\n} from 'semantic-ui-react';\r\nconst { MediaContextProvider, Media } = createMedia({\r\n    breakpoints: {\r\n        mobile: 0,\r\n        tablet: 768,\r\n        computer: 1024,\r\n    },\r\n})\r\nconst menuStyle = {\r\n    border: 'none',\r\n    borderRadius: 0,\r\n    boxShadow: 'none',\r\n    marginBottom: '1em',\r\n    transition: 'box-shadow 0.5s ease, padding 0.5s ease',\r\n}\r\n\r\nconst fixedMenuStyle = {\r\n    // backgroundColor: '#fff',\r\n    // border: '1px solid #ddd',\r\n    boxShadow: '0px 3px 5px rgba(0, 0, 0, 0.2)',\r\n}\r\nconst countryOptions = [\r\n    { key: 'Merriweather', value: 'Merriweather', text: 'Merriweather' },\r\n    { key: 'Libre Baskerville', value: 'Libre Baskerville', text: 'Libre Baskerville' },\r\n    { key: 'Gentium Book Basic', value: 'Gentium Book Basic', text: 'Gentium Book Basic' },\r\n    { key: 'Roboto', value: 'Roboto', text: 'Roboto' },\r\n    { key: 'Rubik', value: 'Rubik', text: 'Rubik' },\r\n    { key: 'Nunito', value: 'Nunito', text: 'Nunito' },\r\n]\r\nclass Chapter extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            prechap: '',\r\n            nextchap: '',\r\n            menuFixed: false,\r\n            overlayFixed: false,\r\n            totalchapter: 1,\r\n            showmodal: false,\r\n            listchapter: []\r\n        }\r\n    }\r\n    contextRef = createRef()\r\n    handleOverlayRef = (c) => {\r\n        const { overlayRect } = this.state\r\n\r\n        if (!overlayRect) {\r\n            this.setState({ overlayRect: _.pick(c.getBoundingClientRect(), 'height', 'width') })\r\n        }\r\n    }\r\n\r\n    stickOverlay = () => this.setState({ overlayFixed: true })\r\n\r\n    stickTopMenu = () => this.setState({ menuFixed: true })\r\n\r\n    unStickOverlay = () => this.setState({ overlayFixed: false })\r\n\r\n    unStickTopMenu = () => this.setState({ menuFixed: false })\r\n    static async getInitialProps(context) {\r\n        const { id, chapter } = context.query\r\n        const res = await fetch(`${API_URL}chapter?novelid=${id}&chapterid=/${chapter}/`)\r\n        const json = await res.json()\r\n\r\n        return { novelchapter: json }\r\n    }\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (this.props.novelchapter !== prevProps.novelchapter) {\r\n            fetch(`${API_URL}novel?id=${this.props.novelchapter.idnovels}`)\r\n                .then(r => r.json())\r\n                .then(data => {\r\n                    console.log(data)\r\n                    if (data.chapterlist.length === 1) {\r\n                        this.state({ prechap: '', nextchap: '', totalchapter: data.chapterlist.length, listchapter: data.chapterlist, showmodal: false })\r\n                    } else {\r\n                        for (let i = 0; i < data.chapterlist.length; i++) {\r\n                            if (\r\n                                this.props.novelchapter.idchapter ===\r\n                                data.chapterlist[i].idchapter\r\n                            ) {\r\n                                if (i === 0) {\r\n                                    this.setState({ prechap: '', nextchap: data.chapterlist[i + 1].idchapter, totalchapter: data.chapterlist.length, showmodal: false, listchapter: data.chapterlist })\r\n                                    // return { novelchapter: json, prechap: '', nextchap: json1.chapterlist[i + 1].idchapter }\r\n\r\n                                }\r\n                                if (i > 0 && i < data.chapterlist.length - 1) {\r\n                                    this.setState({ prechap: data.chapterlist[i - 1].idchapter, nextchap: data.chapterlist[i + 1].idchapter, showmodal: false, totalchapter: data.chapterlist.length, listchapter: data.chapterlist })\r\n                                    // return { novelchapter: json, prechap: json1.chapterlist[i - 1].idchapter, nextchap: json1.chapterlist[i + 1].idchapter }\r\n                                }\r\n                                if (i === data.chapterlist.length - 1) {\r\n                                    this.setState({ prechap: data.chapterlist[i - 1].idchapter, nextchap: '', totalchapter: data.chapterlist.length, showmodal: false, listchapter: data.chapterlist })\r\n                                    // return { novelchapter: json, prechap: json1.chapterlist[i - 1].idchapter, nextchap: '' }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                });\r\n        }\r\n        if (this.props.novelReducer !== prevProps.novelReducer) {\r\n            this.setState({\r\n                nightmode: this.props.novelReducer.nightmode,\r\n                fontsize: this.props.novelReducer.fontsize,\r\n                font: this.props.novelReducer.font,\r\n                lineheight: this.props.novelReducer.lineheight,\r\n                background: this.props.novelReducer.background,\r\n                backgroundbig: this.props.novelReducer.background,\r\n            })\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch(`${API_URL}novel?id=${this.props.novelchapter.idnovels}`)\r\n            .then(r => r.json())\r\n            .then(data => {\r\n                this.props.saveNovel(data)\r\n                if (data.chapterlist.length === 1) {\r\n                    this.state({ prechap: '', nextchap: '' })\r\n                } else {\r\n                    for (let i = 0; i < data.chapterlist.length; i++) {\r\n                        if (\r\n                            this.props.novelchapter.idchapter ===\r\n                            data.chapterlist[i].idchapter\r\n                        ) {\r\n                            if (i === 0) {\r\n                                this.setState({ prechap: '', nextchap: data.chapterlist[i + 1].idchapter, listchapter: data.chapterlist })\r\n\r\n                            }\r\n                            if (i > 0 && i < data.chapterlist.length - 1) {\r\n                                this.setState({ prechap: data.chapterlist[i - 1].idchapter, nextchap: data.chapterlist[i + 1].idchapter, listchapter: data.chapterlist })\r\n                            }\r\n                            if (i === data.chapterlist.length - 1) {\r\n                                this.setState({ prechap: data.chapterlist[i - 1].idchapter, nextchap: '', listchapter: data.chapterlist })\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n    }\r\n    handleNightMode = (data) => {\r\n        let params = {\r\n            nightmode: !data,\r\n            fontsize: this.state.fontsize,\r\n            font: this.state.font,\r\n            lineheight: this.state.lineheight,\r\n            background: this.state.background,\r\n        }\r\n        this.props.settingNovel(params)\r\n    }\r\n    handleChangeBackground = (data, bigdata) => {\r\n        if (data === '#232323') {\r\n            let params = {\r\n                nightmode: true,\r\n                fontsize: this.state.fontsize,\r\n                font: this.state.font,\r\n                lineheight: this.state.lineheight,\r\n                background: this.state.background,\r\n                backgroundbig: bigdata\r\n            }\r\n            return this.props.settingNovel(params)\r\n        }\r\n        let params = {\r\n            nightmode: false,\r\n            fontsize: this.state.fontsize,\r\n            font: this.state.font,\r\n            lineheight: this.state.lineheight,\r\n            background: data,\r\n            backgroundbig: bigdata\r\n        }\r\n        this.props.settingNovel(params)\r\n    }\r\n    handleChangeFont = (e, data) => {\r\n        console.log(data)\r\n        let params = {\r\n            nightmode: this.state.nightmode,\r\n            fontsize: this.state.fontsize,\r\n            font: data.value,\r\n            lineheight: this.state.lineheight,\r\n            background: this.state.background,\r\n            backgroundbig: this.state.backgroundbig\r\n        }\r\n        return this.props.settingNovel(params)\r\n    }\r\n    handleDegree = (type) => {\r\n        if (type === 1) {\r\n            let params = {\r\n                nightmode: this.state.nightmode,\r\n                fontsize: this.state.fontsize - 2 < 14 ? this.state.fontsize : this.state.fontsize - 2,\r\n                font: this.state.value,\r\n                lineheight: this.state.lineheight,\r\n                background: this.state.background,\r\n                backgroundbig: this.state.backgroundbig\r\n            }\r\n            return this.props.settingNovel(params)\r\n        } else {\r\n            let params = {\r\n                nightmode: this.state.nightmode,\r\n                fontsize: this.state.fontsize + 2 > 32 ? this.state.fontsize : this.state.fontsize + 2,\r\n                font: this.state.value,\r\n                lineheight: this.state.lineheight,\r\n                background: this.state.background,\r\n                backgroundbig: this.state.backgroundbig\r\n            }\r\n            return this.props.settingNovel(params)\r\n        }\r\n\r\n    }\r\n    render() {\r\n        console.log(this.props)\r\n        console.log(this.state)\r\n        const { menuFixed, overlayFixed, overlayRect } = this.state;\r\n        return (\r\n            <Layout>\r\n                <style>\r\n                    {`\r\n          html, body {\r\n            background: ${this.props.novelReducer.nightmode === true ? '#1a1a1a' : this.props.novelReducer.backgroundbig} ;\r\n          }\r\n        `}\r\n                </style>\r\n                <Helmet>\r\n                    <title>{`Read ${this.props.novelchapter.chaptername}`} - KitesNovel</title>\r\n                    <meta name=\"description\" content={`Read ${this.props.novelchapter.chaptername} for free, total ${this.state.totalchapter} chapter `} />\r\n                    <meta name=\"theme-color\" content=\"#008f68\" />\r\n                    <meta name=\"keywords\" content={`${this.props.novelchapter.chaptername}, ${this.props.novelchapter.chaptername} free, ${this.props.novelReducer.novelname} light novel, ${this.props.novelReducer.novelname} full chapters, ${this.props.novelReducer.novelname} latest chapters`} />\r\n                </Helmet>\r\n                <MediaContextProvider>\r\n                    <Media greaterThan='mobile'>\r\n                        <Visibility\r\n                            onBottomPassed={this.stickTopMenu}\r\n                            onBottomVisible={this.unStickTopMenu}\r\n                            once={false}\r\n                        >\r\n                            <Menu\r\n                                borderless inverted={this.props.novelReducer.nightmode}\r\n                                fixed={menuFixed ? 'top' : undefined}\r\n                                style={menuFixed ? fixedMenuStyle : menuStyle}\r\n                            >\r\n                                <Container>\r\n                                    <Menu.Item header>\r\n                                        <Breadcrumb size={'large'}>\r\n                                            <Breadcrumb.Section link><Link href='/'>Home</Link></Breadcrumb.Section>\r\n                                            <Breadcrumb.Divider icon='right chevron' />\r\n                                            <Breadcrumb.Section link>\r\n                                                <Link\r\n                                                    as={`/novel/${this.props.novelchapter.idnovels}`} href={`/novel/[id]`}\r\n                                                >{this.props.novelReducer.novelname}\r\n                                                </Link></Breadcrumb.Section>\r\n                                            <Breadcrumb.Divider icon='right chevron' />\r\n                                            <Breadcrumb.Section active>{this.props.novelchapter.chaptername}</Breadcrumb.Section>\r\n                                        </Breadcrumb>\r\n                                    </Menu.Item>\r\n                                </Container>\r\n                            </Menu>\r\n                        </Visibility>\r\n                    </Media>\r\n                    <Media at='mobile'>\r\n                        <Visibility\r\n                            onBottomPassed={this.stickTopMenu}\r\n                            onBottomVisible={this.unStickTopMenu}\r\n                            once={false}\r\n                        >\r\n                            <Menu\r\n                                borderless inverted={this.props.novelReducer.nightmode}\r\n                                fixed={menuFixed ? 'top' : undefined}\r\n                                style={menuFixed ? fixedMenuStyle : menuStyle}\r\n                            >\r\n                                <Menu.Item style={{ width: '80%', overflow: 'hidden' }} header position='left'>\r\n                                    <Breadcrumb size={'large'}>\r\n                                        <Breadcrumb.Section link>\r\n                                            <Link\r\n                                                as={`/novel/${this.props.novelchapter.idnovels}`} href={`/novel/[id]`}\r\n                                            >{this.props.novelReducer.novelname}\r\n                                            </Link></Breadcrumb.Section>\r\n                                    </Breadcrumb>\r\n                                </Menu.Item>\r\n                                <Menu.Item position='right'>\r\n                                    <Button onClick={() => this.handleNightMode(this.props.novelReducer.nightmode)} size='large' circular icon={this.props.novelReducer.nightmode ? 'lightbulb outline' : 'moon'} />\r\n                                </Menu.Item>\r\n\r\n\r\n                            </Menu>\r\n                        </Visibility>\r\n                    </Media>\r\n                </MediaContextProvider>\r\n                <Container text style={{ backgroundColor: this.props.novelReducer.nightmode === true ? '#232323' : this.props.novelReducer.background }}>\r\n                    <Grid style={{ marginTop: 20 }}>\r\n                        <Grid.Column className='detail-containers' mobile={16} tablet={16} computer={16}>\r\n                            <Ref innerRef={this.contextRef}>\r\n                                <Segment style={{ backgroundColor: this.props.novelReducer.nightmode === true ? '#232323' : this.props.novelReducer.background }}>\r\n                                    <Item.Group textAlign='left'>\r\n                                        <Item.Description className='content' style={{\r\n                                            fontFamily: this.props.novelReducer.font, lineHeight: this.props.novelReducer.lineheight,\r\n                                            fontSize: this.props.novelReducer.fontsize, color: this.props.novelReducer.nightmode === true ? '#b3b3b3' : 'black'\r\n                                        }} >\r\n                                            {this.props.novelchapter.content !== undefined ?\r\n                                                ReactHtmlParser(this.props.novelchapter.content)\r\n                                                : null\r\n                                            }\r\n                                        </Item.Description>\r\n                                    </Item.Group>\r\n                                    <MediaContextProvider>\r\n                                        <Media greaterThan='mobile'>\r\n                                            <Rail position='right' style={{ marginTop: 100 }}>\r\n                                                <Sticky offset={100} bottomOffset={100} context={this.contextRef}>\r\n                                                    <List>\r\n                                                        <List.Item>\r\n                                                            <Popup position='left center' trigger={<Button size='large' circular icon='font' />} flowing hoverable>\r\n                                                                <Grid textAlign='left' divided columns={1}>\r\n                                                                    <Grid.Column textAlign='left'>\r\n                                                                        <Header as='h4'>Background</Header>\r\n                                                                        <Grid columns={4}>\r\n                                                                            <Grid.Row>\r\n                                                                                <Grid.Column>\r\n                                                                                    <div onClick={() => this.handleChangeBackground('#fff', '#f5f7fa')} className='read-setting_white-color__3ZTE4' />\r\n                                                                                </Grid.Column>\r\n                                                                                <Grid.Column>\r\n                                                                                    <div onClick={() => this.handleChangeBackground('#fff6df', '#fff9eb')} className='read-setting_orange-color__3chix' />\r\n                                                                                </Grid.Column>\r\n                                                                                <Grid.Column>\r\n                                                                                    <div onClick={() => this.handleChangeBackground('#ebf9eb', '#f2f9f2')} className='read-setting_green-color__WTjD7' />\r\n                                                                                </Grid.Column>\r\n                                                                                <Grid.Column>\r\n                                                                                    <div onClick={() => this.handleChangeBackground('#232323', '#1a1a1a')} className='read-setting_black-color__3KmIV' />\r\n                                                                                </Grid.Column>\r\n                                                                            </Grid.Row>\r\n                                                                        </Grid>\r\n                                                                    </Grid.Column>\r\n                                                                    <Grid.Column textAlign='left'>\r\n                                                                        <Header as='h4'>Font Size</Header>\r\n                                                                        <Grid columns={4}>\r\n                                                                            <Grid.Row>\r\n                                                                                <Button.Group size='large'>\r\n                                                                                    <Button onClick={() => this.handleDegree(1)}>A-</Button>\r\n                                                                                    <Button.Or text={this.props.novelReducer.fontsize} />\r\n                                                                                    <Button onClick={() => this.handleDegree(2)}>A+</Button>\r\n                                                                                </Button.Group>\r\n                                                                                <Select onChange={(e, data) => this.handleChangeFont(e, data)} defaultValue={this.props.novelReducer.font} options={countryOptions} />\r\n                                                                            </Grid.Row>\r\n                                                                            <Grid.Row>\r\n\r\n                                                                            </Grid.Row>\r\n                                                                        </Grid>\r\n                                                                    </Grid.Column>\r\n                                                                </Grid>\r\n                                                            </Popup>\r\n\r\n                                                        </List.Item>\r\n                                                        <List.Item>\r\n\r\n                                                            <Modal\r\n                                                                open={this.state.showmodal}\r\n                                                                style={{ backgroundColor: this.props.novelReducer.nightmode === true ? '#232323' : this.props.novelReducer.background }}\r\n                                                                size='tiny'\r\n                                                                onClose={() => this.setState({ showmodal: false })}\r\n                                                                onOpen={() => this.setState({ showmodal: true })}\r\n                                                                trigger={<Button size='large' circular icon='bars' />}\r\n                                                            >\r\n                                                                <Modal.Header style={{\r\n                                                                    color: this.props.novelReducer.nightmode === true ? '#b3b3b3' : 'black',\r\n                                                                    backgroundColor: this.props.novelReducer.nightmode === true ? '#232323' : this.props.novelReducer.background\r\n                                                                }}>{this.props.novelReducer.novelname}</Modal.Header>\r\n                                                                <Modal.Content image scrolling style={{ backgroundColor: this.props.novelReducer.nightmode === true ? '#232323' : this.props.novelReducer.background }}>\r\n                                                                    <Modal.Description>\r\n                                                                        <List divided relaxed style={{ color: this.props.novelReducer.nightmode === true ? '#b3b3b3' : 'black' }}>\r\n                                                                            {this.state.listchapter.map((datachapter, key) => (\r\n                                                                                <List.Item>\r\n                                                                                    <List.Content >\r\n                                                                                        <Link\r\n                                                                                            as={`/doc/${this.props.novelchapter.idnovels}/${datachapter.idchapter}`}\r\n                                                                                            href={`/doc/[id]/[chapter]`}>\r\n                                                                                            <List.Header style={{ color: this.props.novelReducer.nightmode === true ? '#b3b3b3' : 'black' }} as='a'>{datachapter.chaptername}</List.Header>\r\n                                                                                        </Link>\r\n\r\n                                                                                    </List.Content>\r\n                                                                                </List.Item>\r\n                                                                            ))}\r\n                                                                        </List>\r\n\r\n                                                                    </Modal.Description>\r\n                                                                </Modal.Content>\r\n                                                            </Modal>\r\n                                                        </List.Item>\r\n                                                        <List.Item>\r\n                                                            <Button onClick={() => this.handleNightMode(this.props.novelReducer.nightmode)} size='large' circular icon={this.props.novelReducer.nightmode ? 'lightbulb outline' : 'moon'} />\r\n                                                        </List.Item>\r\n                                                    </List>\r\n                                                </Sticky>\r\n                                            </Rail>\r\n                                        </Media>\r\n                                    </MediaContextProvider>\r\n                                </Segment>\r\n                            </Ref>\r\n                        </Grid.Column>\r\n                        <MediaContextProvider>\r\n                            <Media greaterThan='mobile'>\r\n                                <Grid.Row verticalAlign='middle'>\r\n                                    <Button.Group widths='3'>\r\n                                        <Link\r\n                                              as={`/doc/${this.props.novelchapter.idnovels}/${this.props.novelchapter.prechap}`}\r\n                                              href={`/doc/[id]/[chapter]`}\r\n                                        >\r\n                                            <Button size='huge' color='black' disabled={this.state.prechap !== \"\" ? false : true} labelPosition='left' icon='left chevron' content='Prev chapter' />\r\n                                        </Link>\r\n\r\n                                        <Modal\r\n                                            open={this.state.showmodal}\r\n                                            style={{ backgroundColor: this.props.novelReducer.nightmode === true ? '#232323' : this.props.novelReducer.background }}\r\n                                            size='tiny'\r\n                                            onClose={() => this.setState({ showmodal: false })}\r\n                                            onOpen={() => this.setState({ showmodal: true })}\r\n                                            trigger={<Button size='huge' color='black' icon='bars' content='Chapter List' />}\r\n                                        >\r\n                                            <Modal.Header style={{\r\n                                                color: this.props.novelReducer.nightmode === true ? '#b3b3b3' : 'black',\r\n                                                backgroundColor: this.props.novelReducer.nightmode === true ? '#232323' : this.props.novelReducer.background\r\n                                            }}>{this.props.novelReducer.novelname}</Modal.Header>\r\n                                            <Modal.Content image scrolling style={{ backgroundColor: this.props.novelReducer.nightmode === true ? '#232323' : this.props.novelReducer.background }}>\r\n                                                <Modal.Description>\r\n                                                    <List divided relaxed style={{ color: this.props.novelReducer.nightmode === true ? '#b3b3b3' : 'black' }}>\r\n                                                        {this.state.listchapter.map((datachapter, key) => (\r\n                                                            <List.Item>\r\n                                                                <List.Content >\r\n                                                                    <Link\r\n                                                                        as={`/doc/${this.props.novelchapter.idnovels}/${datachapter.idchapter}`}\r\n                                                                        href={`/doc/[id]/[chapter]`}>\r\n                                                                        <List.Header style={{ color: this.props.novelReducer.nightmode === true ? '#b3b3b3' : 'black' }} as='a'>{datachapter.chaptername}</List.Header>\r\n                                                                    </Link>\r\n\r\n                                                                </List.Content>\r\n                                                            </List.Item>\r\n                                                        ))}\r\n                                                    </List>\r\n\r\n                                                </Modal.Description>\r\n                                            </Modal.Content>\r\n                                        </Modal>\r\n\r\n                                        <Link\r\n                                            as={`/doc/${this.props.novelchapter.idnovels}/${this.props.novelchapter.nextchap}`}\r\n                                            href={`/doc/[id]/[chapter]`}\r\n                                        >\r\n                                            <Button size='huge' color='black' disabled={this.state.nextchap !== \"\" ? false : true} labelPosition='right' icon='right chevron' content='Next chapter' />\r\n                                        </Link>\r\n                                    </Button.Group>\r\n                                </Grid.Row>\r\n                            </Media>\r\n                            <Media at='mobile'>\r\n                                <Grid.Row mobile={16} tablet={16} computer={16} verticalAlign='middle'>\r\n                                    <Button.Group widths='3'>\r\n                                        <Link\r\n                                            as={`/doc/${this.props.novelchapter.idnovels}/${this.props.novelchapter.prechap}`}\r\n                                            href={`/doc/[id]/[chapter]`}\r\n                                        >\r\n                                            <Button size='huge' color='black' disabled={this.props.novelchapter.prechap !== \"\" ? false : true} labelPosition='left' icon='left chevron' />\r\n                                        </Link>\r\n                                        <Modal\r\n                                            open={this.state.showmodal}\r\n                                            style={{ backgroundColor: this.props.novelReducer.nightmode === true ? '#232323' : this.props.novelReducer.background }}\r\n                                            size='tiny'\r\n                                            onClose={() => this.setState({ showmodal: false })}\r\n                                            onOpen={() => this.setState({ showmodal: true })}\r\n                                            trigger={<Button size='huge' color='black' icon='bars' />}\r\n                                        >\r\n                                            <Modal.Header style={{\r\n                                                color: this.props.novelReducer.nightmode === true ? '#b3b3b3' : 'black',\r\n                                                backgroundColor: this.props.novelReducer.nightmode === true ? '#232323' : this.props.novelReducer.background\r\n                                            }}>{this.props.novelReducer.novelname}</Modal.Header>\r\n                                            <Modal.Content image scrolling style={{ backgroundColor: this.props.novelReducer.nightmode === true ? '#232323' : this.props.novelReducer.background }}>\r\n                                                <Modal.Description>\r\n                                                    <List divided relaxed style={{ color: this.props.novelReducer.nightmode === true ? '#b3b3b3' : 'black' }}>\r\n                                                        {this.state.listchapter.map((datachapter, key) => (\r\n                                                            <List.Item>\r\n                                                                <List.Content >\r\n                                                                    <Link\r\n                                                                        as={`/doc/${this.props.novelchapter.idnovels}/${datachapter.idchapter}`}\r\n                                                                        href={`/doc/[id]/[chapter]`}>\r\n                                                                        <List.Header style={{ color: this.props.novelReducer.nightmode === true ? '#b3b3b3' : 'black' }} as='a'>{datachapter.chaptername}</List.Header>\r\n                                                                    </Link>\r\n\r\n                                                                </List.Content>\r\n                                                            </List.Item>\r\n                                                        ))}\r\n                                                    </List>\r\n\r\n                                                </Modal.Description>\r\n                                            </Modal.Content>\r\n                                        </Modal>\r\n\r\n                                        <Link\r\n                                            as={`/doc/${this.props.novelchapter.idnovels}/${this.props.novelchapter.nextchap}`}\r\n                                            href={`/doc/[id]/[chapter]`}\r\n                                        >\r\n                                            <Button size='huge' color='black' disabled={this.props.novelchapter.nextchap !== \"\" ? false : true} labelPosition='right' icon='right chevron' />\r\n                                        </Link>\r\n                                    </Button.Group>\r\n                                </Grid.Row>\r\n                            </Media>\r\n                        </MediaContextProvider>\r\n                    </Grid>\r\n                </Container>\r\n\r\n            </Layout>\r\n        )\r\n    }\r\n}\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        novelReducer: state.novelReducer\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, { saveNovel, settingNovel })(Chapter);"]},"metadata":{},"sourceType":"module"}