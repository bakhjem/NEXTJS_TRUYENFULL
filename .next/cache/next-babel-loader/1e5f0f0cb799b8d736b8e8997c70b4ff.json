{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nconst initialState = {\n  isLoading: false,\n  error: false,\n  data: [],\n  novelname: '',\n  author: ''\n};\n\nconst novelReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'SAVE_NOVEL_DATA':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoading: false,\n        error: false,\n        novelname: action.novelname,\n        author: action.author\n      });\n\n    case 'FETCH_ERROR':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoading: false,\n        error: true,\n        data: []\n      });\n\n    default:\n      return _objectSpread({}, state);\n  }\n};\n\nexport default novelReducer;","map":{"version":3,"sources":["C:/Users/bakhjem/Desktop/nhattin/nextjstruyen/redux/reducers/novelReducer.js"],"names":["initialState","isLoading","error","data","novelname","author","novelReducer","state","action","type"],"mappings":";;;;;;AAAA,MAAMA,YAAY,GAAG;AACjBC,EAAAA,SAAS,EAAE,KADM;AAEjBC,EAAAA,KAAK,EAAE,KAFU;AAGjBC,EAAAA,IAAI,EAAE,EAHW;AAIjBC,EAAAA,SAAS,EAAE,EAJM;AAKjBC,EAAAA,MAAM,EAAE;AALS,CAArB;;AAOA,MAAMC,YAAY,GAAG,CAACC,KAAK,GAAGP,YAAT,EAAuBQ,MAAvB,KAAkC;AACnD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,iBAAL;AACI,6CACOF,KADP;AAEIN,QAAAA,SAAS,EAAE,KAFf;AAGIC,QAAAA,KAAK,EAAE,KAHX;AAIIE,QAAAA,SAAS,EAAEI,MAAM,CAACJ,SAJtB;AAKIC,QAAAA,MAAM,EAAEG,MAAM,CAACH;AALnB;;AAQJ,SAAK,aAAL;AACI,6CAAYE,KAAZ;AAAmBN,QAAAA,SAAS,EAAE,KAA9B;AAAqCC,QAAAA,KAAK,EAAE,IAA5C;AAAkDC,QAAAA,IAAI,EAAE;AAAxD;;AACJ;AACI,+BAAYI,KAAZ;AAbR;AAeH,CAhBD;;AAkBA,eAAeD,YAAf","sourcesContent":["const initialState = {\r\n    isLoading: false,\r\n    error: false,\r\n    data: [],\r\n    novelname: '',\r\n    author: ''\r\n};\r\nconst novelReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'SAVE_NOVEL_DATA':\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                error: false,\r\n                novelname: action.novelname,\r\n                author: action.author\r\n            };\r\n\r\n        case 'FETCH_ERROR':\r\n            return { ...state, isLoading: false, error: true, data: [] };\r\n        default:\r\n            return { ...state };\r\n    }\r\n};\r\n\r\nexport default novelReducer;\r\n"]},"metadata":{},"sourceType":"module"}