{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Layout from '../../../components/MyLayout';\nimport 'isomorphic-unfetch';\nimport Link from 'next/link';\nimport React, { Component, createRef } from 'react';\nimport { createMedia } from '@artsy/fresnel';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport ReactHtmlParser, { processNodes, convertNodeToElement, htmlparser2 } from 'react-html-parser';\nimport { Helmet } from 'react-helmet';\nimport { saveNovel, settingNovel } from '../../../redux/actions/novelActions';\nimport { API_URL } from '../../../config/config';\nimport { Container, Breadcrumb, Divider, Dropdown, Grid, Header, Select, Icon, Image, List, Menu, Segment, Visibility, Item, Sticky, Rail, Ref, Button, Popup, Modal } from 'semantic-ui-react';\nconst {\n  MediaContextProvider,\n  Media\n} = createMedia({\n  breakpoints: {\n    mobile: 0,\n    tablet: 768,\n    computer: 1024\n  }\n});\nconst menuStyle = {\n  border: 'none',\n  borderRadius: 0,\n  boxShadow: 'none',\n  marginBottom: '1em',\n  transition: 'box-shadow 0.5s ease, padding 0.5s ease'\n};\nconst fixedMenuStyle = {\n  // backgroundColor: '#fff',\n  // border: '1px solid #ddd',\n  boxShadow: '0px 3px 5px rgba(0, 0, 0, 0.2)'\n};\nconst countryOptions = [{\n  key: 'Merriweather',\n  value: 'Merriweather',\n  text: 'Merriweather'\n}, {\n  key: 'Libre Baskerville',\n  value: 'Libre Baskerville',\n  text: 'Libre Baskerville'\n}, {\n  key: 'Gentium Book Basic',\n  value: 'Gentium Book Basic',\n  text: 'Gentium Book Basic'\n}, {\n  key: 'Roboto',\n  value: 'Roboto',\n  text: 'Roboto'\n}, {\n  key: 'Rubik',\n  value: 'Rubik',\n  text: 'Rubik'\n}, {\n  key: 'Nunito',\n  value: 'Nunito',\n  text: 'Nunito'\n}];\n\nclass Chapter extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"contextRef\", /*#__PURE__*/createRef());\n\n    _defineProperty(this, \"handleOverlayRef\", c => {\n      const {\n        overlayRect\n      } = this.state;\n\n      if (!overlayRect) {\n        this.setState({\n          overlayRect: _.pick(c.getBoundingClientRect(), 'height', 'width')\n        });\n      }\n    });\n\n    _defineProperty(this, \"stickOverlay\", () => this.setState({\n      overlayFixed: true\n    }));\n\n    _defineProperty(this, \"stickTopMenu\", () => this.setState({\n      menuFixed: true\n    }));\n\n    _defineProperty(this, \"unStickOverlay\", () => this.setState({\n      overlayFixed: false\n    }));\n\n    _defineProperty(this, \"unStickTopMenu\", () => this.setState({\n      menuFixed: false\n    }));\n\n    _defineProperty(this, \"handleNightMode\", data => {\n      let params = {\n        nightmode: !data,\n        fontsize: this.state.fontsize,\n        font: this.state.font,\n        lineheight: this.state.lineheight,\n        background: this.state.background\n      };\n      this.props.settingNovel(params);\n    });\n\n    _defineProperty(this, \"handleChangeBackground\", (data, bigdata) => {\n      if (data === '#232323') {\n        let params = {\n          nightmode: true,\n          fontsize: this.state.fontsize,\n          font: this.state.font,\n          lineheight: this.state.lineheight,\n          background: this.state.background,\n          backgroundbig: bigdata\n        };\n        return this.props.settingNovel(params);\n      }\n\n      let params = {\n        nightmode: false,\n        fontsize: this.state.fontsize,\n        font: this.state.font,\n        lineheight: this.state.lineheight,\n        background: data,\n        backgroundbig: bigdata\n      };\n      this.props.settingNovel(params);\n    });\n\n    _defineProperty(this, \"handleChangeFont\", (e, data) => {\n      console.log(data);\n      let params = {\n        nightmode: this.state.nightmode,\n        fontsize: this.state.fontsize,\n        font: data.value,\n        lineheight: this.state.lineheight,\n        background: this.state.background,\n        backgroundbig: this.state.backgroundbig\n      };\n      return this.props.settingNovel(params);\n    });\n\n    _defineProperty(this, \"handleDegree\", type => {\n      if (type === 1) {\n        let params = {\n          nightmode: this.state.nightmode,\n          fontsize: this.state.fontsize - 2 < 14 ? this.state.fontsize : this.state.fontsize - 2,\n          font: this.state.value,\n          lineheight: this.state.lineheight,\n          background: this.state.background,\n          backgroundbig: this.state.backgroundbig\n        };\n        return this.props.settingNovel(params);\n      } else {\n        let params = {\n          nightmode: this.state.nightmode,\n          fontsize: this.state.fontsize + 2 > 32 ? this.state.fontsize : this.state.fontsize + 2,\n          font: this.state.value,\n          lineheight: this.state.lineheight,\n          background: this.state.background,\n          backgroundbig: this.state.backgroundbig\n        };\n        return this.props.settingNovel(params);\n      }\n    });\n\n    this.state = {\n      prechap: props.novelchapter.prechap.length < 4 ? '' : props.novelchapter.prechap,\n      nextchap: props.novelchapter.nextchap.length < 4 ? '' : props.novelchapter.nextchap,\n      menuFixed: false,\n      overlayFixed: false,\n      totalchapter: 1,\n      showmodal: false,\n      listchapter: [],\n      nightmode: this.props.novelReducer.nightmode,\n      fontsize: this.props.novelReducer.fontsize,\n      font: this.props.novelReducer.font,\n      lineheight: this.props.novelReducer.lineheight,\n      background: this.props.novelReducer.background,\n      backgroundbig: this.props.novelReducer.background\n    };\n  }\n\n  static async getInitialProps(context) {\n    const {\n      id,\n      chapter\n    } = context.query;\n    const res = await fetch(`${API_URL}chapter?novelid=${id}&chapterid=/${chapter}/`);\n    const json = await res.json();\n    return {\n      novelchapter: json\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    // if (this.props.novelchapter !== prevProps.novelchapter) {\n    //     this.setState({\n    //         prechap: this.props.novelchapter.prechap,\n    //         nextchap: this.props.novelchapter.nextchap\n    //     })\n    // }\n    if (this.props.novelReducer !== prevProps.novelReducer) {\n      this.setState({\n        nightmode: this.props.novelReducer.nightmode,\n        fontsize: this.props.novelReducer.fontsize,\n        font: this.props.novelReducer.font,\n        lineheight: this.props.novelReducer.lineheight,\n        background: this.props.novelReducer.background,\n        backgroundbig: this.props.novelReducer.background\n      });\n    }\n  }\n\n  render() {\n    console.log(this.props);\n    console.log(this.state);\n    const {\n      menuFixed,\n      overlayFixed,\n      overlayRect\n    } = this.state;\n    return __jsx(Layout, null, __jsx(\"style\", null, `\n          html, body {\n            background: ${this.props.novelReducer.nightmode === true ? '#1a1a1a' : this.props.novelReducer.backgroundbig} ;\n          }\n        `), __jsx(Helmet, null, __jsx(\"title\", null, `${this.props.novelchapter.chaptername}`, \" - TruyenNT\"), __jsx(\"meta\", {\n      name: \"description\",\n      content: `Đọc truyện ${this.props.novelchapter.chaptername}, hỗ trợ đọc trên điện thoại và máy tính bảng`\n    }), __jsx(\"meta\", {\n      name: \"theme-color\",\n      content: \"#008f68\"\n    }), __jsx(\"meta\", {\n      name: \"keywords\",\n      content: `${this.props.novelchapter.chaptername}, ${this.props.novelchapter.chaptername} free, ${this.props.novelReducer.novelname} hoàn, ${this.props.novelReducer.novelname} full chương, ${this.props.novelReducer.novelname} chương cuối`\n    }), __jsx(\"link\", {\n      rel: \"canonical\",\n      href: `/doc/${this.props.novelchapter.idnovels}${this.props.novelchapter.idchapter}`\n    })), __jsx(MediaContextProvider, null, __jsx(Media, {\n      greaterThan: \"mobile\"\n    }, __jsx(Visibility, {\n      onBottomPassed: this.stickTopMenu,\n      onBottomVisible: this.unStickTopMenu,\n      once: false\n    }, __jsx(Menu, {\n      borderless: true,\n      inverted: this.props.novelReducer.nightmode,\n      fixed: menuFixed ? 'top' : undefined,\n      style: menuFixed ? fixedMenuStyle : menuStyle\n    }, __jsx(Container, null, __jsx(Menu.Item, {\n      header: true\n    }, __jsx(Breadcrumb, {\n      size: 'large'\n    }, __jsx(Breadcrumb.Section, {\n      link: true\n    }, __jsx(Link, {\n      as: `/novel/${this.props.novelchapter.idnovels}/1`,\n      href: `/novel/[id]/1`\n    }, __jsx(Icon, {\n      color: \"white\",\n      name: \"home\"\n    }))), __jsx(Breadcrumb.Divider, {\n      icon: \"right chevron\"\n    }), __jsx(Breadcrumb.Section, {\n      active: true\n    }, this.props.novelchapter.chaptername))))))), __jsx(Media, {\n      at: \"mobile\"\n    }, __jsx(Visibility, {\n      onBottomPassed: this.stickTopMenu,\n      onBottomVisible: this.unStickTopMenu,\n      once: false\n    }, __jsx(Menu, {\n      borderless: true,\n      inverted: this.props.novelReducer.nightmode,\n      fixed: menuFixed ? 'top' : undefined,\n      style: menuFixed ? fixedMenuStyle : menuStyle\n    }, __jsx(Menu.Item, {\n      style: {\n        width: '80%',\n        overflow: 'hidden'\n      },\n      header: true,\n      position: \"left\"\n    }, __jsx(Breadcrumb, {\n      size: 'large'\n    }, __jsx(Breadcrumb.Section, {\n      link: true\n    }, __jsx(Link, {\n      as: `/novel/${this.props.novelchapter.idnovels}/1`,\n      href: `/novel/[id]/1`\n    }, __jsx(Icon, {\n      color: \"white\",\n      name: \"home\"\n    })))), __jsx(Breadcrumb.Divider, {\n      icon: \"right chevron\"\n    }), __jsx(Breadcrumb.Section, {\n      active: true\n    }, this.props.novelchapter.chaptername)), __jsx(Menu.Item, {\n      position: \"right\"\n    }, __jsx(Button, {\n      onClick: () => this.handleNightMode(this.props.novelReducer.nightmode),\n      size: \"large\",\n      circular: true,\n      icon: this.props.novelReducer.nightmode ? 'lightbulb outline' : 'moon'\n    })))))), __jsx(Container, {\n      text: true,\n      style: {\n        backgroundColor: this.props.novelReducer.nightmode === true ? '#232323' : this.props.novelReducer.background\n      }\n    }, __jsx(Grid, {\n      style: {\n        marginTop: 20\n      }\n    }, __jsx(Grid.Column, {\n      className: \"detail-containers\",\n      mobile: 16,\n      tablet: 16,\n      computer: 16\n    }, __jsx(Ref, {\n      innerRef: this.contextRef\n    }, __jsx(Segment, {\n      style: {\n        backgroundColor: this.props.novelReducer.nightmode === true ? '#232323' : this.props.novelReducer.background\n      }\n    }, __jsx(Item.Group, {\n      textAlign: \"left\"\n    }, __jsx(Item.Description, {\n      className: \"content\",\n      style: {\n        fontFamily: this.props.novelReducer.font,\n        lineHeight: this.props.novelReducer.lineheight,\n        fontSize: this.props.novelReducer.fontsize,\n        color: this.props.novelReducer.nightmode === true ? '#b3b3b3' : 'black'\n      }\n    }, this.props.novelchapter.content !== undefined ? ReactHtmlParser(this.props.novelchapter.content) : null)), __jsx(MediaContextProvider, null, __jsx(Media, {\n      greaterThan: \"mobile\"\n    }, __jsx(Rail, {\n      position: \"right\",\n      style: {\n        marginTop: 100\n      }\n    }, __jsx(Sticky, {\n      offset: 100,\n      bottomOffset: 100,\n      context: this.contextRef\n    }, __jsx(List, null, __jsx(List.Item, null, __jsx(Popup, {\n      position: \"left center\",\n      trigger: __jsx(Button, {\n        size: \"large\",\n        circular: true,\n        icon: \"font\"\n      }),\n      flowing: true,\n      hoverable: true\n    }, __jsx(Grid, {\n      textAlign: \"left\",\n      divided: true,\n      columns: 1\n    }, __jsx(Grid.Column, {\n      textAlign: \"left\"\n    }, __jsx(Header, {\n      as: \"h4\"\n    }, \"Background\"), __jsx(Grid, {\n      columns: 4\n    }, __jsx(Grid.Row, null, __jsx(Grid.Column, null, __jsx(\"div\", {\n      onClick: () => this.handleChangeBackground('#fff', '#f5f7fa'),\n      className: \"read-setting_white-color__3ZTE4\"\n    })), __jsx(Grid.Column, null, __jsx(\"div\", {\n      onClick: () => this.handleChangeBackground('#fff6df', '#fff9eb'),\n      className: \"read-setting_orange-color__3chix\"\n    })), __jsx(Grid.Column, null, __jsx(\"div\", {\n      onClick: () => this.handleChangeBackground('#ebf9eb', '#f2f9f2'),\n      className: \"read-setting_green-color__WTjD7\"\n    })), __jsx(Grid.Column, null, __jsx(\"div\", {\n      onClick: () => this.handleChangeBackground('#232323', '#1a1a1a'),\n      className: \"read-setting_black-color__3KmIV\"\n    }))))), __jsx(Grid.Column, {\n      textAlign: \"left\"\n    }, __jsx(Header, {\n      as: \"h4\"\n    }, \"Font Size\"), __jsx(Grid, {\n      columns: 4\n    }, __jsx(Grid.Row, null, __jsx(Button.Group, {\n      size: \"large\"\n    }, __jsx(Button, {\n      onClick: () => this.handleDegree(1)\n    }, \"A-\"), __jsx(Button.Or, {\n      text: this.props.novelReducer.fontsize\n    }), __jsx(Button, {\n      onClick: () => this.handleDegree(2)\n    }, \"A+\")), __jsx(Select, {\n      onChange: (e, data) => this.handleChangeFont(e, data),\n      defaultValue: this.props.novelReducer.font,\n      options: countryOptions\n    })), __jsx(Grid.Row, null)))))), __jsx(List.Item, null, __jsx(Button, {\n      onClick: () => this.handleNightMode(this.props.novelReducer.nightmode),\n      size: \"large\",\n      circular: true,\n      icon: this.props.novelReducer.nightmode ? 'lightbulb outline' : 'moon'\n    })))))))))), __jsx(MediaContextProvider, null, __jsx(Media, {\n      greaterThan: \"mobile\"\n    }, __jsx(Grid.Row, {\n      verticalAlign: \"middle\"\n    }, __jsx(Button.Group, {\n      widths: \"3\"\n    }, __jsx(Link, {\n      as: `/doc/${this.props.novelchapter.idnovels}${this.state.prechap}`,\n      href: `/doc/[id]/[chapter]`\n    }, __jsx(Button, {\n      size: \"huge\",\n      color: \"black\",\n      disabled: this.state.prechap !== \"\" ? false : true,\n      labelPosition: \"left\",\n      icon: \"left chevron\",\n      content: \"Prev chapter\"\n    })), __jsx(Link, {\n      as: `/novel/${this.props.novelchapter.idnovels}/1`,\n      href: `/novel/[id]/1`\n    }, __jsx(Button, {\n      size: \"huge\",\n      color: \"black\",\n      icon: \"bars\",\n      content: \"Chapter List\"\n    })), __jsx(Link, {\n      as: `/doc/${this.props.novelchapter.idnovels}${this.state.nextchap}`,\n      href: `/doc/[id]/[chapter]`\n    }, __jsx(Button, {\n      size: \"huge\",\n      color: \"black\",\n      disabled: this.state.nextchap !== \"\" ? false : true,\n      labelPosition: \"right\",\n      icon: \"right chevron\",\n      content: \"Next chapter\"\n    }))))), __jsx(Media, {\n      at: \"mobile\"\n    }, __jsx(Grid.Row, {\n      mobile: 16,\n      tablet: 16,\n      computer: 16,\n      verticalAlign: \"middle\"\n    }, __jsx(Button.Group, {\n      widths: \"3\"\n    }, __jsx(Link, {\n      as: `/doc/${this.props.novelchapter.idnovels}${this.state.prechap}`,\n      href: `/doc/[id]/[chapter]`\n    }, __jsx(Button, {\n      size: \"huge\",\n      color: \"black\",\n      disabled: this.state.prechap !== \"\" ? false : true,\n      labelPosition: \"left\",\n      icon: \"left chevron\"\n    })), __jsx(Link, {\n      as: `/novel/${this.props.novelchapter.idnovels}/1`,\n      href: `/novel/[id]/1`\n    }, __jsx(Button, {\n      size: \"huge\",\n      color: \"black\",\n      icon: \"bars\"\n    })), __jsx(Link, {\n      as: `/doc/${this.props.novelchapter.idnovels}${this.state.nextchap}`,\n      href: `/doc/[id]/[chapter]`\n    }, __jsx(Button, {\n      size: \"huge\",\n      color: \"black\",\n      disabled: this.state.nextchap !== \"\" ? false : true,\n      labelPosition: \"right\",\n      icon: \"right chevron\"\n    })))))))));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    novelReducer: state.novelReducer\n  };\n}\n\nexport default connect(mapStateToProps, {\n  saveNovel,\n  settingNovel\n})(Chapter);","map":{"version":3,"sources":["C:/Users/bakhjem/Desktop/nhattin/nextjstruyen - Copy/pages/doc/[id]/[chapter].js"],"names":["Layout","Link","React","Component","createRef","createMedia","connect","PropTypes","ReactHtmlParser","processNodes","convertNodeToElement","htmlparser2","Helmet","saveNovel","settingNovel","API_URL","Container","Breadcrumb","Divider","Dropdown","Grid","Header","Select","Icon","Image","List","Menu","Segment","Visibility","Item","Sticky","Rail","Ref","Button","Popup","Modal","MediaContextProvider","Media","breakpoints","mobile","tablet","computer","menuStyle","border","borderRadius","boxShadow","marginBottom","transition","fixedMenuStyle","countryOptions","key","value","text","Chapter","constructor","props","c","overlayRect","state","setState","_","pick","getBoundingClientRect","overlayFixed","menuFixed","data","params","nightmode","fontsize","font","lineheight","background","bigdata","backgroundbig","e","console","log","type","prechap","novelchapter","length","nextchap","totalchapter","showmodal","listchapter","novelReducer","getInitialProps","context","id","chapter","query","res","fetch","json","componentDidUpdate","prevProps","prevState","render","chaptername","novelname","idnovels","idchapter","stickTopMenu","unStickTopMenu","undefined","width","overflow","handleNightMode","backgroundColor","marginTop","contextRef","fontFamily","lineHeight","fontSize","color","content","handleChangeBackground","handleDegree","handleChangeFont","mapStateToProps"],"mappings":";;;;AAAA,OAAOA,MAAP,MAAmB,8BAAnB;AACA,OAAO,oBAAP;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,SAA3B,QAA4C,OAA5C;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,eAAP,IAA0BC,YAA1B,EAAwCC,oBAAxC,EAA8DC,WAA9D,QAAiF,mBAAjF;AACA,SAASC,MAAT,QAAuB,cAAvB;AACA,SAASC,SAAT,EAAoBC,YAApB,QAAwC,qCAAxC;AACA,SAASC,OAAT,QAAwB,wBAAxB;AACA,SACIC,SADJ,EACeC,UADf,EAEIC,OAFJ,EAGIC,QAHJ,EAIIC,IAJJ,EAKIC,MALJ,EAKYC,MALZ,EAMIC,IANJ,EAOIC,KAPJ,EAQIC,IARJ,EASIC,IATJ,EAUIC,OAVJ,EAWIC,UAXJ,EAYIC,IAZJ,EAaIC,MAbJ,EAaYC,IAbZ,EAcIC,GAdJ,EAcSC,MAdT,EAciBC,KAdjB,EAcwBC,KAdxB,QAeO,mBAfP;AAgBA,MAAM;AAAEC,EAAAA,oBAAF;AAAwBC,EAAAA;AAAxB,IAAkChC,WAAW,CAAC;AAChDiC,EAAAA,WAAW,EAAE;AACTC,IAAAA,MAAM,EAAE,CADC;AAETC,IAAAA,MAAM,EAAE,GAFC;AAGTC,IAAAA,QAAQ,EAAE;AAHD;AADmC,CAAD,CAAnD;AAOA,MAAMC,SAAS,GAAG;AACdC,EAAAA,MAAM,EAAE,MADM;AAEdC,EAAAA,YAAY,EAAE,CAFA;AAGdC,EAAAA,SAAS,EAAE,MAHG;AAIdC,EAAAA,YAAY,EAAE,KAJA;AAKdC,EAAAA,UAAU,EAAE;AALE,CAAlB;AAQA,MAAMC,cAAc,GAAG;AACnB;AACA;AACAH,EAAAA,SAAS,EAAE;AAHQ,CAAvB;AAKA,MAAMI,cAAc,GAAG,CACnB;AAAEC,EAAAA,GAAG,EAAE,cAAP;AAAuBC,EAAAA,KAAK,EAAE,cAA9B;AAA8CC,EAAAA,IAAI,EAAE;AAApD,CADmB,EAEnB;AAAEF,EAAAA,GAAG,EAAE,mBAAP;AAA4BC,EAAAA,KAAK,EAAE,mBAAnC;AAAwDC,EAAAA,IAAI,EAAE;AAA9D,CAFmB,EAGnB;AAAEF,EAAAA,GAAG,EAAE,oBAAP;AAA6BC,EAAAA,KAAK,EAAE,oBAApC;AAA0DC,EAAAA,IAAI,EAAE;AAAhE,CAHmB,EAInB;AAAEF,EAAAA,GAAG,EAAE,QAAP;AAAiBC,EAAAA,KAAK,EAAE,QAAxB;AAAkCC,EAAAA,IAAI,EAAE;AAAxC,CAJmB,EAKnB;AAAEF,EAAAA,GAAG,EAAE,OAAP;AAAgBC,EAAAA,KAAK,EAAE,OAAvB;AAAgCC,EAAAA,IAAI,EAAE;AAAtC,CALmB,EAMnB;AAAEF,EAAAA,GAAG,EAAE,QAAP;AAAiBC,EAAAA,KAAK,EAAE,QAAxB;AAAkCC,EAAAA,IAAI,EAAE;AAAxC,CANmB,CAAvB;;AAQA,MAAMC,OAAN,SAAsBnD,KAAK,CAACC,SAA5B,CAAsC;AAClCmD,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,qDAkBNnD,SAAS,EAlBH;;AAAA,8CAmBCoD,CAAD,IAAO;AACtB,YAAM;AAAEC,QAAAA;AAAF,UAAkB,KAAKC,KAA7B;;AAEA,UAAI,CAACD,WAAL,EAAkB;AACd,aAAKE,QAAL,CAAc;AAAEF,UAAAA,WAAW,EAAEG,CAAC,CAACC,IAAF,CAAOL,CAAC,CAACM,qBAAF,EAAP,EAAkC,QAAlC,EAA4C,OAA5C;AAAf,SAAd;AACH;AACJ,KAzBkB;;AAAA,0CA2BJ,MAAM,KAAKH,QAAL,CAAc;AAAEI,MAAAA,YAAY,EAAE;AAAhB,KAAd,CA3BF;;AAAA,0CA6BJ,MAAM,KAAKJ,QAAL,CAAc;AAAEK,MAAAA,SAAS,EAAE;AAAb,KAAd,CA7BF;;AAAA,4CA+BF,MAAM,KAAKL,QAAL,CAAc;AAAEI,MAAAA,YAAY,EAAE;AAAhB,KAAd,CA/BJ;;AAAA,4CAiCF,MAAM,KAAKJ,QAAL,CAAc;AAAEK,MAAAA,SAAS,EAAE;AAAb,KAAd,CAjCJ;;AAAA,6CA6DAC,IAAD,IAAU;AACxB,UAAIC,MAAM,GAAG;AACTC,QAAAA,SAAS,EAAE,CAACF,IADH;AAETG,QAAAA,QAAQ,EAAE,KAAKV,KAAL,CAAWU,QAFZ;AAGTC,QAAAA,IAAI,EAAE,KAAKX,KAAL,CAAWW,IAHR;AAITC,QAAAA,UAAU,EAAE,KAAKZ,KAAL,CAAWY,UAJd;AAKTC,QAAAA,UAAU,EAAE,KAAKb,KAAL,CAAWa;AALd,OAAb;AAOA,WAAKhB,KAAL,CAAWzC,YAAX,CAAwBoD,MAAxB;AACH,KAtEkB;;AAAA,oDAuEM,CAACD,IAAD,EAAOO,OAAP,KAAmB;AACxC,UAAIP,IAAI,KAAK,SAAb,EAAwB;AACpB,YAAIC,MAAM,GAAG;AACTC,UAAAA,SAAS,EAAE,IADF;AAETC,UAAAA,QAAQ,EAAE,KAAKV,KAAL,CAAWU,QAFZ;AAGTC,UAAAA,IAAI,EAAE,KAAKX,KAAL,CAAWW,IAHR;AAITC,UAAAA,UAAU,EAAE,KAAKZ,KAAL,CAAWY,UAJd;AAKTC,UAAAA,UAAU,EAAE,KAAKb,KAAL,CAAWa,UALd;AAMTE,UAAAA,aAAa,EAAED;AANN,SAAb;AAQA,eAAO,KAAKjB,KAAL,CAAWzC,YAAX,CAAwBoD,MAAxB,CAAP;AACH;;AACD,UAAIA,MAAM,GAAG;AACTC,QAAAA,SAAS,EAAE,KADF;AAETC,QAAAA,QAAQ,EAAE,KAAKV,KAAL,CAAWU,QAFZ;AAGTC,QAAAA,IAAI,EAAE,KAAKX,KAAL,CAAWW,IAHR;AAITC,QAAAA,UAAU,EAAE,KAAKZ,KAAL,CAAWY,UAJd;AAKTC,QAAAA,UAAU,EAAEN,IALH;AAMTQ,QAAAA,aAAa,EAAED;AANN,OAAb;AAQA,WAAKjB,KAAL,CAAWzC,YAAX,CAAwBoD,MAAxB;AACH,KA5FkB;;AAAA,8CA6FA,CAACQ,CAAD,EAAIT,IAAJ,KAAa;AAC5BU,MAAAA,OAAO,CAACC,GAAR,CAAYX,IAAZ;AACA,UAAIC,MAAM,GAAG;AACTC,QAAAA,SAAS,EAAE,KAAKT,KAAL,CAAWS,SADb;AAETC,QAAAA,QAAQ,EAAE,KAAKV,KAAL,CAAWU,QAFZ;AAGTC,QAAAA,IAAI,EAAEJ,IAAI,CAACd,KAHF;AAITmB,QAAAA,UAAU,EAAE,KAAKZ,KAAL,CAAWY,UAJd;AAKTC,QAAAA,UAAU,EAAE,KAAKb,KAAL,CAAWa,UALd;AAMTE,QAAAA,aAAa,EAAE,KAAKf,KAAL,CAAWe;AANjB,OAAb;AAQA,aAAO,KAAKlB,KAAL,CAAWzC,YAAX,CAAwBoD,MAAxB,CAAP;AACH,KAxGkB;;AAAA,0CAyGHW,IAAD,IAAU;AACrB,UAAIA,IAAI,KAAK,CAAb,EAAgB;AACZ,YAAIX,MAAM,GAAG;AACTC,UAAAA,SAAS,EAAE,KAAKT,KAAL,CAAWS,SADb;AAETC,UAAAA,QAAQ,EAAE,KAAKV,KAAL,CAAWU,QAAX,GAAsB,CAAtB,GAA0B,EAA1B,GAA+B,KAAKV,KAAL,CAAWU,QAA1C,GAAqD,KAAKV,KAAL,CAAWU,QAAX,GAAsB,CAF5E;AAGTC,UAAAA,IAAI,EAAE,KAAKX,KAAL,CAAWP,KAHR;AAITmB,UAAAA,UAAU,EAAE,KAAKZ,KAAL,CAAWY,UAJd;AAKTC,UAAAA,UAAU,EAAE,KAAKb,KAAL,CAAWa,UALd;AAMTE,UAAAA,aAAa,EAAE,KAAKf,KAAL,CAAWe;AANjB,SAAb;AAQA,eAAO,KAAKlB,KAAL,CAAWzC,YAAX,CAAwBoD,MAAxB,CAAP;AACH,OAVD,MAUO;AACH,YAAIA,MAAM,GAAG;AACTC,UAAAA,SAAS,EAAE,KAAKT,KAAL,CAAWS,SADb;AAETC,UAAAA,QAAQ,EAAE,KAAKV,KAAL,CAAWU,QAAX,GAAsB,CAAtB,GAA0B,EAA1B,GAA+B,KAAKV,KAAL,CAAWU,QAA1C,GAAqD,KAAKV,KAAL,CAAWU,QAAX,GAAsB,CAF5E;AAGTC,UAAAA,IAAI,EAAE,KAAKX,KAAL,CAAWP,KAHR;AAITmB,UAAAA,UAAU,EAAE,KAAKZ,KAAL,CAAWY,UAJd;AAKTC,UAAAA,UAAU,EAAE,KAAKb,KAAL,CAAWa,UALd;AAMTE,UAAAA,aAAa,EAAE,KAAKf,KAAL,CAAWe;AANjB,SAAb;AAQA,eAAO,KAAKlB,KAAL,CAAWzC,YAAX,CAAwBoD,MAAxB,CAAP;AACH;AAEJ,KAhIkB;;AAEf,SAAKR,KAAL,GAAa;AACToB,MAAAA,OAAO,EAAEvB,KAAK,CAACwB,YAAN,CAAmBD,OAAnB,CAA2BE,MAA3B,GAAoC,CAApC,GAAwC,EAAxC,GAA6CzB,KAAK,CAACwB,YAAN,CAAmBD,OADhE;AAETG,MAAAA,QAAQ,EAAE1B,KAAK,CAACwB,YAAN,CAAmBE,QAAnB,CAA4BD,MAA5B,GAAqC,CAArC,GAAyC,EAAzC,GAA8CzB,KAAK,CAACwB,YAAN,CAAmBE,QAFlE;AAGTjB,MAAAA,SAAS,EAAE,KAHF;AAITD,MAAAA,YAAY,EAAE,KAJL;AAKTmB,MAAAA,YAAY,EAAE,CALL;AAMTC,MAAAA,SAAS,EAAE,KANF;AAOTC,MAAAA,WAAW,EAAE,EAPJ;AAQTjB,MAAAA,SAAS,EAAE,KAAKZ,KAAL,CAAW8B,YAAX,CAAwBlB,SAR1B;AASTC,MAAAA,QAAQ,EAAE,KAAKb,KAAL,CAAW8B,YAAX,CAAwBjB,QATzB;AAUTC,MAAAA,IAAI,EAAE,KAAKd,KAAL,CAAW8B,YAAX,CAAwBhB,IAVrB;AAWTC,MAAAA,UAAU,EAAE,KAAKf,KAAL,CAAW8B,YAAX,CAAwBf,UAX3B;AAYTC,MAAAA,UAAU,EAAE,KAAKhB,KAAL,CAAW8B,YAAX,CAAwBd,UAZ3B;AAaTE,MAAAA,aAAa,EAAE,KAAKlB,KAAL,CAAW8B,YAAX,CAAwBd;AAb9B,KAAb;AAeH;;AAiBD,eAAae,eAAb,CAA6BC,OAA7B,EAAsC;AAClC,UAAM;AAAEC,MAAAA,EAAF;AAAMC,MAAAA;AAAN,QAAkBF,OAAO,CAACG,KAAhC;AACA,UAAMC,GAAG,GAAG,MAAMC,KAAK,CAAE,GAAE7E,OAAQ,mBAAkByE,EAAG,eAAcC,OAAQ,GAAvD,CAAvB;AACA,UAAMI,IAAI,GAAG,MAAMF,GAAG,CAACE,IAAJ,EAAnB;AAEA,WAAO;AAAEd,MAAAA,YAAY,EAAEc;AAAhB,KAAP;AACH;;AACDC,EAAAA,kBAAkB,CAACC,SAAD,EAAYC,SAAZ,EAAuB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,QAAI,KAAKzC,KAAL,CAAW8B,YAAX,KAA4BU,SAAS,CAACV,YAA1C,EAAwD;AACpD,WAAK1B,QAAL,CAAc;AACVQ,QAAAA,SAAS,EAAE,KAAKZ,KAAL,CAAW8B,YAAX,CAAwBlB,SADzB;AAEVC,QAAAA,QAAQ,EAAE,KAAKb,KAAL,CAAW8B,YAAX,CAAwBjB,QAFxB;AAGVC,QAAAA,IAAI,EAAE,KAAKd,KAAL,CAAW8B,YAAX,CAAwBhB,IAHpB;AAIVC,QAAAA,UAAU,EAAE,KAAKf,KAAL,CAAW8B,YAAX,CAAwBf,UAJ1B;AAKVC,QAAAA,UAAU,EAAE,KAAKhB,KAAL,CAAW8B,YAAX,CAAwBd,UAL1B;AAMVE,QAAAA,aAAa,EAAE,KAAKlB,KAAL,CAAW8B,YAAX,CAAwBd;AAN7B,OAAd;AAQH;AACJ;;AAuED0B,EAAAA,MAAM,GAAG;AACLtB,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKrB,KAAjB;AACAoB,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKlB,KAAjB;AACA,UAAM;AAAEM,MAAAA,SAAF;AAAaD,MAAAA,YAAb;AAA2BN,MAAAA;AAA3B,QAA2C,KAAKC,KAAtD;AACA,WACI,MAAC,MAAD,QACI,qBACM;AACtB;AACA,0BAA0B,KAAKH,KAAL,CAAW8B,YAAX,CAAwBlB,SAAxB,KAAsC,IAAtC,GAA6C,SAA7C,GAAyD,KAAKZ,KAAL,CAAW8B,YAAX,CAAwBZ,aAAc;AACzH;AACA,SALgB,CADJ,EAQI,MAAC,MAAD,QACI,qBAAS,GAAE,KAAKlB,KAAL,CAAWwB,YAAX,CAAwBmB,WAAY,EAA/C,gBADJ,EAEI;AAAM,MAAA,IAAI,EAAC,aAAX;AAAyB,MAAA,OAAO,EAAG,cAAa,KAAK3C,KAAL,CAAWwB,YAAX,CAAwBmB,WAAY;AAApF,MAFJ,EAGI;AAAM,MAAA,IAAI,EAAC,aAAX;AAAyB,MAAA,OAAO,EAAC;AAAjC,MAHJ,EAII;AAAM,MAAA,IAAI,EAAC,UAAX;AAAsB,MAAA,OAAO,EAAG,GAAE,KAAK3C,KAAL,CAAWwB,YAAX,CAAwBmB,WAAY,KAAI,KAAK3C,KAAL,CAAWwB,YAAX,CAAwBmB,WAAY,UAAS,KAAK3C,KAAL,CAAW8B,YAAX,CAAwBc,SAAU,UAAS,KAAK5C,KAAL,CAAW8B,YAAX,CAAwBc,SAAU,iBAAgB,KAAK5C,KAAL,CAAW8B,YAAX,CAAwBc,SAAU;AAAtP,MAJJ,EAKI;AAAM,MAAA,GAAG,EAAC,WAAV;AAAsB,MAAA,IAAI,EAAG,QAAO,KAAK5C,KAAL,CAAWwB,YAAX,CAAwBqB,QAAS,GAAE,KAAK7C,KAAL,CAAWwB,YAAX,CAAwBsB,SAAU;AAAzG,MALJ,CARJ,EAgBI,MAAC,oBAAD,QACI,MAAC,KAAD;AAAO,MAAA,WAAW,EAAC;AAAnB,OACI,MAAC,UAAD;AACI,MAAA,cAAc,EAAE,KAAKC,YADzB;AAEI,MAAA,eAAe,EAAE,KAAKC,cAF1B;AAGI,MAAA,IAAI,EAAE;AAHV,OAKI,MAAC,IAAD;AACI,MAAA,UAAU,MADd;AACe,MAAA,QAAQ,EAAE,KAAKhD,KAAL,CAAW8B,YAAX,CAAwBlB,SADjD;AAEI,MAAA,KAAK,EAAEH,SAAS,GAAG,KAAH,GAAWwC,SAF/B;AAGI,MAAA,KAAK,EAAExC,SAAS,GAAGhB,cAAH,GAAoBN;AAHxC,OAKI,MAAC,SAAD,QACI,MAAC,IAAD,CAAM,IAAN;AAAW,MAAA,MAAM;AAAjB,OACI,MAAC,UAAD;AAAY,MAAA,IAAI,EAAE;AAAlB,OACI,MAAC,UAAD,CAAY,OAAZ;AAAoB,MAAA,IAAI;AAAxB,OAAyB,MAAC,IAAD;AACrB,MAAA,EAAE,EAAG,UAAS,KAAKa,KAAL,CAAWwB,YAAX,CAAwBqB,QAAS,IAD1B;AAC+B,MAAA,IAAI,EAAG;AADtC,OAExB,MAAC,IAAD;AAAM,MAAA,KAAK,EAAC,OAAZ;AAAoB,MAAA,IAAI,EAAC;AAAzB,MAFwB,CAAzB,CADJ,EAII,MAAC,UAAD,CAAY,OAAZ;AAAoB,MAAA,IAAI,EAAC;AAAzB,MAJJ,EAKI,MAAC,UAAD,CAAY,OAAZ;AAAoB,MAAA,MAAM;AAA1B,OAA4B,KAAK7C,KAAL,CAAWwB,YAAX,CAAwBmB,WAApD,CALJ,CADJ,CADJ,CALJ,CALJ,CADJ,CADJ,EA0BI,MAAC,KAAD;AAAO,MAAA,EAAE,EAAC;AAAV,OACI,MAAC,UAAD;AACI,MAAA,cAAc,EAAE,KAAKI,YADzB;AAEI,MAAA,eAAe,EAAE,KAAKC,cAF1B;AAGI,MAAA,IAAI,EAAE;AAHV,OAKI,MAAC,IAAD;AACI,MAAA,UAAU,MADd;AACe,MAAA,QAAQ,EAAE,KAAKhD,KAAL,CAAW8B,YAAX,CAAwBlB,SADjD;AAEI,MAAA,KAAK,EAAEH,SAAS,GAAG,KAAH,GAAWwC,SAF/B;AAGI,MAAA,KAAK,EAAExC,SAAS,GAAGhB,cAAH,GAAoBN;AAHxC,OAKI,MAAC,IAAD,CAAM,IAAN;AAAW,MAAA,KAAK,EAAE;AAAE+D,QAAAA,KAAK,EAAE,KAAT;AAAgBC,QAAAA,QAAQ,EAAE;AAA1B,OAAlB;AAAwD,MAAA,MAAM,MAA9D;AAA+D,MAAA,QAAQ,EAAC;AAAxE,OACI,MAAC,UAAD;AAAY,MAAA,IAAI,EAAE;AAAlB,OACI,MAAC,UAAD,CAAY,OAAZ;AAAoB,MAAA,IAAI;AAAxB,OAAyB,MAAC,IAAD;AACrB,MAAA,EAAE,EAAG,UAAS,KAAKnD,KAAL,CAAWwB,YAAX,CAAwBqB,QAAS,IAD1B;AAC+B,MAAA,IAAI,EAAG;AADtC,OAExB,MAAC,IAAD;AAAM,MAAA,KAAK,EAAC,OAAZ;AAAoB,MAAA,IAAI,EAAC;AAAzB,MAFwB,CAAzB,CADJ,CADJ,EAMI,MAAC,UAAD,CAAY,OAAZ;AAAoB,MAAA,IAAI,EAAC;AAAzB,MANJ,EAOI,MAAC,UAAD,CAAY,OAAZ;AAAoB,MAAA,MAAM;AAA1B,OAA4B,KAAK7C,KAAL,CAAWwB,YAAX,CAAwBmB,WAApD,CAPJ,CALJ,EAcI,MAAC,IAAD,CAAM,IAAN;AAAW,MAAA,QAAQ,EAAC;AAApB,OACI,MAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,MAAM,KAAKS,eAAL,CAAqB,KAAKpD,KAAL,CAAW8B,YAAX,CAAwBlB,SAA7C,CAAvB;AAAgF,MAAA,IAAI,EAAC,OAArF;AAA6F,MAAA,QAAQ,MAArG;AAAsG,MAAA,IAAI,EAAE,KAAKZ,KAAL,CAAW8B,YAAX,CAAwBlB,SAAxB,GAAoC,mBAApC,GAA0D;AAAtK,MADJ,CAdJ,CALJ,CADJ,CA1BJ,CAhBJ,EAuEI,MAAC,SAAD;AAAW,MAAA,IAAI,MAAf;AAAgB,MAAA,KAAK,EAAE;AAAEyC,QAAAA,eAAe,EAAE,KAAKrD,KAAL,CAAW8B,YAAX,CAAwBlB,SAAxB,KAAsC,IAAtC,GAA6C,SAA7C,GAAyD,KAAKZ,KAAL,CAAW8B,YAAX,CAAwBd;AAApG;AAAvB,OACI,MAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAAEsC,QAAAA,SAAS,EAAE;AAAb;AAAb,OACI,MAAC,IAAD,CAAM,MAAN;AAAa,MAAA,SAAS,EAAC,mBAAvB;AAA2C,MAAA,MAAM,EAAE,EAAnD;AAAuD,MAAA,MAAM,EAAE,EAA/D;AAAmE,MAAA,QAAQ,EAAE;AAA7E,OACI,MAAC,GAAD;AAAK,MAAA,QAAQ,EAAE,KAAKC;AAApB,OACI,MAAC,OAAD;AAAS,MAAA,KAAK,EAAE;AAAEF,QAAAA,eAAe,EAAE,KAAKrD,KAAL,CAAW8B,YAAX,CAAwBlB,SAAxB,KAAsC,IAAtC,GAA6C,SAA7C,GAAyD,KAAKZ,KAAL,CAAW8B,YAAX,CAAwBd;AAApG;AAAhB,OACI,MAAC,IAAD,CAAM,KAAN;AAAY,MAAA,SAAS,EAAC;AAAtB,OACI,MAAC,IAAD,CAAM,WAAN;AAAkB,MAAA,SAAS,EAAC,SAA5B;AAAsC,MAAA,KAAK,EAAE;AACzCwC,QAAAA,UAAU,EAAE,KAAKxD,KAAL,CAAW8B,YAAX,CAAwBhB,IADK;AACC2C,QAAAA,UAAU,EAAE,KAAKzD,KAAL,CAAW8B,YAAX,CAAwBf,UADrC;AAEzC2C,QAAAA,QAAQ,EAAE,KAAK1D,KAAL,CAAW8B,YAAX,CAAwBjB,QAFO;AAEG8C,QAAAA,KAAK,EAAE,KAAK3D,KAAL,CAAW8B,YAAX,CAAwBlB,SAAxB,KAAsC,IAAtC,GAA6C,SAA7C,GAAyD;AAFnE;AAA7C,OAIK,KAAKZ,KAAL,CAAWwB,YAAX,CAAwBoC,OAAxB,KAAoCX,SAApC,GACGhG,eAAe,CAAC,KAAK+C,KAAL,CAAWwB,YAAX,CAAwBoC,OAAzB,CADlB,GAEK,IANV,CADJ,CADJ,EAYI,MAAC,oBAAD,QACI,MAAC,KAAD;AAAO,MAAA,WAAW,EAAC;AAAnB,OACI,MAAC,IAAD;AAAM,MAAA,QAAQ,EAAC,OAAf;AAAuB,MAAA,KAAK,EAAE;AAAEN,QAAAA,SAAS,EAAE;AAAb;AAA9B,OACI,MAAC,MAAD;AAAQ,MAAA,MAAM,EAAE,GAAhB;AAAqB,MAAA,YAAY,EAAE,GAAnC;AAAwC,MAAA,OAAO,EAAE,KAAKC;AAAtD,OACI,MAAC,IAAD,QACI,MAAC,IAAD,CAAM,IAAN,QACI,MAAC,KAAD;AAAO,MAAA,QAAQ,EAAC,aAAhB;AAA8B,MAAA,OAAO,EAAE,MAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,OAAb;AAAqB,QAAA,QAAQ,MAA7B;AAA8B,QAAA,IAAI,EAAC;AAAnC,QAAvC;AAAqF,MAAA,OAAO,MAA5F;AAA6F,MAAA,SAAS;AAAtG,OACI,MAAC,IAAD;AAAM,MAAA,SAAS,EAAC,MAAhB;AAAuB,MAAA,OAAO,MAA9B;AAA+B,MAAA,OAAO,EAAE;AAAxC,OACI,MAAC,IAAD,CAAM,MAAN;AAAa,MAAA,SAAS,EAAC;AAAvB,OACI,MAAC,MAAD;AAAQ,MAAA,EAAE,EAAC;AAAX,oBADJ,EAEI,MAAC,IAAD;AAAM,MAAA,OAAO,EAAE;AAAf,OACI,MAAC,IAAD,CAAM,GAAN,QACI,MAAC,IAAD,CAAM,MAAN,QACI;AAAK,MAAA,OAAO,EAAE,MAAM,KAAKM,sBAAL,CAA4B,MAA5B,EAAoC,SAApC,CAApB;AAAoE,MAAA,SAAS,EAAC;AAA9E,MADJ,CADJ,EAII,MAAC,IAAD,CAAM,MAAN,QACI;AAAK,MAAA,OAAO,EAAE,MAAM,KAAKA,sBAAL,CAA4B,SAA5B,EAAuC,SAAvC,CAApB;AAAuE,MAAA,SAAS,EAAC;AAAjF,MADJ,CAJJ,EAOI,MAAC,IAAD,CAAM,MAAN,QACI;AAAK,MAAA,OAAO,EAAE,MAAM,KAAKA,sBAAL,CAA4B,SAA5B,EAAuC,SAAvC,CAApB;AAAuE,MAAA,SAAS,EAAC;AAAjF,MADJ,CAPJ,EAUI,MAAC,IAAD,CAAM,MAAN,QACI;AAAK,MAAA,OAAO,EAAE,MAAM,KAAKA,sBAAL,CAA4B,SAA5B,EAAuC,SAAvC,CAApB;AAAuE,MAAA,SAAS,EAAC;AAAjF,MADJ,CAVJ,CADJ,CAFJ,CADJ,EAoBI,MAAC,IAAD,CAAM,MAAN;AAAa,MAAA,SAAS,EAAC;AAAvB,OACI,MAAC,MAAD;AAAQ,MAAA,EAAE,EAAC;AAAX,mBADJ,EAEI,MAAC,IAAD;AAAM,MAAA,OAAO,EAAE;AAAf,OACI,MAAC,IAAD,CAAM,GAAN,QACI,MAAC,MAAD,CAAQ,KAAR;AAAc,MAAA,IAAI,EAAC;AAAnB,OACI,MAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,MAAM,KAAKC,YAAL,CAAkB,CAAlB;AAAvB,YADJ,EAEI,MAAC,MAAD,CAAQ,EAAR;AAAW,MAAA,IAAI,EAAE,KAAK9D,KAAL,CAAW8B,YAAX,CAAwBjB;AAAzC,MAFJ,EAGI,MAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,MAAM,KAAKiD,YAAL,CAAkB,CAAlB;AAAvB,YAHJ,CADJ,EAMI,MAAC,MAAD;AAAQ,MAAA,QAAQ,EAAE,CAAC3C,CAAD,EAAIT,IAAJ,KAAa,KAAKqD,gBAAL,CAAsB5C,CAAtB,EAAyBT,IAAzB,CAA/B;AAA+D,MAAA,YAAY,EAAE,KAAKV,KAAL,CAAW8B,YAAX,CAAwBhB,IAArG;AAA2G,MAAA,OAAO,EAAEpB;AAApH,MANJ,CADJ,EASI,MAAC,IAAD,CAAM,GAAN,OATJ,CAFJ,CApBJ,CADJ,CADJ,CADJ,EA4CI,MAAC,IAAD,CAAM,IAAN,QACI,MAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,MAAM,KAAK0D,eAAL,CAAqB,KAAKpD,KAAL,CAAW8B,YAAX,CAAwBlB,SAA7C,CAAvB;AAAgF,MAAA,IAAI,EAAC,OAArF;AAA6F,MAAA,QAAQ,MAArG;AAAsG,MAAA,IAAI,EAAE,KAAKZ,KAAL,CAAW8B,YAAX,CAAwBlB,SAAxB,GAAoC,mBAApC,GAA0D;AAAtK,MADJ,CA5CJ,CADJ,CADJ,CADJ,CADJ,CAZJ,CADJ,CADJ,CADJ,EA0EI,MAAC,oBAAD,QACI,MAAC,KAAD;AAAO,MAAA,WAAW,EAAC;AAAnB,OACI,MAAC,IAAD,CAAM,GAAN;AAAU,MAAA,aAAa,EAAC;AAAxB,OACI,MAAC,MAAD,CAAQ,KAAR;AAAc,MAAA,MAAM,EAAC;AAArB,OACI,MAAC,IAAD;AACI,MAAA,EAAE,EAAG,QAAO,KAAKZ,KAAL,CAAWwB,YAAX,CAAwBqB,QAAS,GAAE,KAAK1C,KAAL,CAAWoB,OAAQ,EADtE;AAEI,MAAA,IAAI,EAAG;AAFX,OAII,MAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,MAAb;AAAoB,MAAA,KAAK,EAAC,OAA1B;AAAkC,MAAA,QAAQ,EAAE,KAAKpB,KAAL,CAAWoB,OAAX,KAAuB,EAAvB,GAA4B,KAA5B,GAAoC,IAAhF;AAAsF,MAAA,aAAa,EAAC,MAApG;AAA2G,MAAA,IAAI,EAAC,cAAhH;AAA+H,MAAA,OAAO,EAAC;AAAvI,MAJJ,CADJ,EAOI,MAAC,IAAD;AACI,MAAA,EAAE,EAAG,UAAS,KAAKvB,KAAL,CAAWwB,YAAX,CAAwBqB,QAAS,IADnD;AAEI,MAAA,IAAI,EAAG;AAFX,OAII,MAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,MAAb;AAAoB,MAAA,KAAK,EAAC,OAA1B;AAAkC,MAAA,IAAI,EAAC,MAAvC;AAA8C,MAAA,OAAO,EAAC;AAAtD,MAJJ,CAPJ,EAaI,MAAC,IAAD;AACI,MAAA,EAAE,EAAG,QAAO,KAAK7C,KAAL,CAAWwB,YAAX,CAAwBqB,QAAS,GAAE,KAAK1C,KAAL,CAAWuB,QAAS,EADvE;AAEI,MAAA,IAAI,EAAG;AAFX,OAII,MAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,MAAb;AAAoB,MAAA,KAAK,EAAC,OAA1B;AAAkC,MAAA,QAAQ,EAAE,KAAKvB,KAAL,CAAWuB,QAAX,KAAwB,EAAxB,GAA6B,KAA7B,GAAqC,IAAjF;AAAuF,MAAA,aAAa,EAAC,OAArG;AAA6G,MAAA,IAAI,EAAC,eAAlH;AAAkI,MAAA,OAAO,EAAC;AAA1I,MAJJ,CAbJ,CADJ,CADJ,CADJ,EAyBI,MAAC,KAAD;AAAO,MAAA,EAAE,EAAC;AAAV,OACI,MAAC,IAAD,CAAM,GAAN;AAAU,MAAA,MAAM,EAAE,EAAlB;AAAsB,MAAA,MAAM,EAAE,EAA9B;AAAkC,MAAA,QAAQ,EAAE,EAA5C;AAAgD,MAAA,aAAa,EAAC;AAA9D,OACI,MAAC,MAAD,CAAQ,KAAR;AAAc,MAAA,MAAM,EAAC;AAArB,OACI,MAAC,IAAD;AACI,MAAA,EAAE,EAAG,QAAO,KAAK1B,KAAL,CAAWwB,YAAX,CAAwBqB,QAAS,GAAE,KAAK1C,KAAL,CAAWoB,OAAQ,EADtE;AAEI,MAAA,IAAI,EAAG;AAFX,OAII,MAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,MAAb;AAAoB,MAAA,KAAK,EAAC,OAA1B;AAAkC,MAAA,QAAQ,EAAE,KAAKpB,KAAL,CAAWoB,OAAX,KAAuB,EAAvB,GAA4B,KAA5B,GAAoC,IAAhF;AAAsF,MAAA,aAAa,EAAC,MAApG;AAA2G,MAAA,IAAI,EAAC;AAAhH,MAJJ,CADJ,EAOI,MAAC,IAAD;AACI,MAAA,EAAE,EAAG,UAAS,KAAKvB,KAAL,CAAWwB,YAAX,CAAwBqB,QAAS,IADnD;AAEI,MAAA,IAAI,EAAG;AAFX,OAII,MAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,MAAb;AAAoB,MAAA,KAAK,EAAC,OAA1B;AAAkC,MAAA,IAAI,EAAC;AAAvC,MAJJ,CAPJ,EAcI,MAAC,IAAD;AACI,MAAA,EAAE,EAAG,QAAO,KAAK7C,KAAL,CAAWwB,YAAX,CAAwBqB,QAAS,GAAE,KAAK1C,KAAL,CAAWuB,QAAS,EADvE;AAEI,MAAA,IAAI,EAAG;AAFX,OAII,MAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,MAAb;AAAoB,MAAA,KAAK,EAAC,OAA1B;AAAkC,MAAA,QAAQ,EAAE,KAAKvB,KAAL,CAAWuB,QAAX,KAAwB,EAAxB,GAA6B,KAA7B,GAAqC,IAAjF;AAAuF,MAAA,aAAa,EAAC,OAArG;AAA6G,MAAA,IAAI,EAAC;AAAlH,MAJJ,CAdJ,CADJ,CADJ,CAzBJ,CA1EJ,CADJ,CAvEJ,CADJ;AA2MH;;AAjViC;;AAmVtC,SAASsC,eAAT,CAAyB7D,KAAzB,EAAgC;AAC5B,SAAO;AACH2B,IAAAA,YAAY,EAAE3B,KAAK,CAAC2B;AADjB,GAAP;AAGH;;AAED,eAAe/E,OAAO,CAACiH,eAAD,EAAkB;AAAE1G,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAlB,CAAP,CAAsDuC,OAAtD,CAAf","sourcesContent":["import Layout from '../../../components/MyLayout'\r\nimport 'isomorphic-unfetch'\r\nimport Link from 'next/link'\r\nimport React, { Component, createRef } from 'react';\r\nimport { createMedia } from '@artsy/fresnel'\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types'\r\nimport ReactHtmlParser, { processNodes, convertNodeToElement, htmlparser2 } from 'react-html-parser';\r\nimport { Helmet } from 'react-helmet';\r\nimport { saveNovel, settingNovel } from '../../../redux/actions/novelActions'\r\nimport { API_URL } from '../../../config/config'\r\nimport {\r\n    Container, Breadcrumb,\r\n    Divider,\r\n    Dropdown,\r\n    Grid,\r\n    Header, Select,\r\n    Icon,\r\n    Image,\r\n    List,\r\n    Menu,\r\n    Segment,\r\n    Visibility,\r\n    Item,\r\n    Sticky, Rail,\r\n    Ref, Button, Popup, Modal\r\n} from 'semantic-ui-react';\r\nconst { MediaContextProvider, Media } = createMedia({\r\n    breakpoints: {\r\n        mobile: 0,\r\n        tablet: 768,\r\n        computer: 1024,\r\n    },\r\n})\r\nconst menuStyle = {\r\n    border: 'none',\r\n    borderRadius: 0,\r\n    boxShadow: 'none',\r\n    marginBottom: '1em',\r\n    transition: 'box-shadow 0.5s ease, padding 0.5s ease',\r\n}\r\n\r\nconst fixedMenuStyle = {\r\n    // backgroundColor: '#fff',\r\n    // border: '1px solid #ddd',\r\n    boxShadow: '0px 3px 5px rgba(0, 0, 0, 0.2)',\r\n}\r\nconst countryOptions = [\r\n    { key: 'Merriweather', value: 'Merriweather', text: 'Merriweather' },\r\n    { key: 'Libre Baskerville', value: 'Libre Baskerville', text: 'Libre Baskerville' },\r\n    { key: 'Gentium Book Basic', value: 'Gentium Book Basic', text: 'Gentium Book Basic' },\r\n    { key: 'Roboto', value: 'Roboto', text: 'Roboto' },\r\n    { key: 'Rubik', value: 'Rubik', text: 'Rubik' },\r\n    { key: 'Nunito', value: 'Nunito', text: 'Nunito' },\r\n]\r\nclass Chapter extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            prechap: props.novelchapter.prechap.length < 4 ? '' : props.novelchapter.prechap,\r\n            nextchap: props.novelchapter.nextchap.length < 4 ? '' : props.novelchapter.nextchap,\r\n            menuFixed: false,\r\n            overlayFixed: false,\r\n            totalchapter: 1,\r\n            showmodal: false,\r\n            listchapter: [],\r\n            nightmode: this.props.novelReducer.nightmode,\r\n            fontsize: this.props.novelReducer.fontsize,\r\n            font: this.props.novelReducer.font,\r\n            lineheight: this.props.novelReducer.lineheight,\r\n            background: this.props.novelReducer.background,\r\n            backgroundbig: this.props.novelReducer.background,\r\n        }\r\n    }\r\n    contextRef = createRef()\r\n    handleOverlayRef = (c) => {\r\n        const { overlayRect } = this.state\r\n\r\n        if (!overlayRect) {\r\n            this.setState({ overlayRect: _.pick(c.getBoundingClientRect(), 'height', 'width') })\r\n        }\r\n    }\r\n\r\n    stickOverlay = () => this.setState({ overlayFixed: true })\r\n\r\n    stickTopMenu = () => this.setState({ menuFixed: true })\r\n\r\n    unStickOverlay = () => this.setState({ overlayFixed: false })\r\n\r\n    unStickTopMenu = () => this.setState({ menuFixed: false })\r\n    static async getInitialProps(context) {\r\n        const { id, chapter } = context.query\r\n        const res = await fetch(`${API_URL}chapter?novelid=${id}&chapterid=/${chapter}/`)\r\n        const json = await res.json()\r\n\r\n        return { novelchapter: json }\r\n    }\r\n    componentDidUpdate(prevProps, prevState) {\r\n        // if (this.props.novelchapter !== prevProps.novelchapter) {\r\n        //     this.setState({\r\n        //         prechap: this.props.novelchapter.prechap,\r\n        //         nextchap: this.props.novelchapter.nextchap\r\n        //     })\r\n        // }\r\n        if (this.props.novelReducer !== prevProps.novelReducer) {\r\n            this.setState({\r\n                nightmode: this.props.novelReducer.nightmode,\r\n                fontsize: this.props.novelReducer.fontsize,\r\n                font: this.props.novelReducer.font,\r\n                lineheight: this.props.novelReducer.lineheight,\r\n                background: this.props.novelReducer.background,\r\n                backgroundbig: this.props.novelReducer.background,\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    handleNightMode = (data) => {\r\n        let params = {\r\n            nightmode: !data,\r\n            fontsize: this.state.fontsize,\r\n            font: this.state.font,\r\n            lineheight: this.state.lineheight,\r\n            background: this.state.background,\r\n        }\r\n        this.props.settingNovel(params)\r\n    }\r\n    handleChangeBackground = (data, bigdata) => {\r\n        if (data === '#232323') {\r\n            let params = {\r\n                nightmode: true,\r\n                fontsize: this.state.fontsize,\r\n                font: this.state.font,\r\n                lineheight: this.state.lineheight,\r\n                background: this.state.background,\r\n                backgroundbig: bigdata\r\n            }\r\n            return this.props.settingNovel(params)\r\n        }\r\n        let params = {\r\n            nightmode: false,\r\n            fontsize: this.state.fontsize,\r\n            font: this.state.font,\r\n            lineheight: this.state.lineheight,\r\n            background: data,\r\n            backgroundbig: bigdata\r\n        }\r\n        this.props.settingNovel(params)\r\n    }\r\n    handleChangeFont = (e, data) => {\r\n        console.log(data)\r\n        let params = {\r\n            nightmode: this.state.nightmode,\r\n            fontsize: this.state.fontsize,\r\n            font: data.value,\r\n            lineheight: this.state.lineheight,\r\n            background: this.state.background,\r\n            backgroundbig: this.state.backgroundbig\r\n        }\r\n        return this.props.settingNovel(params)\r\n    }\r\n    handleDegree = (type) => {\r\n        if (type === 1) {\r\n            let params = {\r\n                nightmode: this.state.nightmode,\r\n                fontsize: this.state.fontsize - 2 < 14 ? this.state.fontsize : this.state.fontsize - 2,\r\n                font: this.state.value,\r\n                lineheight: this.state.lineheight,\r\n                background: this.state.background,\r\n                backgroundbig: this.state.backgroundbig\r\n            }\r\n            return this.props.settingNovel(params)\r\n        } else {\r\n            let params = {\r\n                nightmode: this.state.nightmode,\r\n                fontsize: this.state.fontsize + 2 > 32 ? this.state.fontsize : this.state.fontsize + 2,\r\n                font: this.state.value,\r\n                lineheight: this.state.lineheight,\r\n                background: this.state.background,\r\n                backgroundbig: this.state.backgroundbig\r\n            }\r\n            return this.props.settingNovel(params)\r\n        }\r\n\r\n    }\r\n    render() {\r\n        console.log(this.props)\r\n        console.log(this.state)\r\n        const { menuFixed, overlayFixed, overlayRect } = this.state;\r\n        return (\r\n            <Layout>\r\n                <style>\r\n                    {`\r\n          html, body {\r\n            background: ${this.props.novelReducer.nightmode === true ? '#1a1a1a' : this.props.novelReducer.backgroundbig} ;\r\n          }\r\n        `}\r\n                </style>\r\n                <Helmet>\r\n                    <title>{`${this.props.novelchapter.chaptername}`} - TruyenNT</title>\r\n                    <meta name=\"description\" content={`Đọc truyện ${this.props.novelchapter.chaptername}, hỗ trợ đọc trên điện thoại và máy tính bảng`} />\r\n                    <meta name=\"theme-color\" content=\"#008f68\" />\r\n                    <meta name=\"keywords\" content={`${this.props.novelchapter.chaptername}, ${this.props.novelchapter.chaptername} free, ${this.props.novelReducer.novelname} hoàn, ${this.props.novelReducer.novelname} full chương, ${this.props.novelReducer.novelname} chương cuối`} />\r\n                    <link rel=\"canonical\" href={`/doc/${this.props.novelchapter.idnovels}${this.props.novelchapter.idchapter}`}></link>\r\n\r\n                </Helmet>\r\n                <MediaContextProvider>\r\n                    <Media greaterThan='mobile'>\r\n                        <Visibility\r\n                            onBottomPassed={this.stickTopMenu}\r\n                            onBottomVisible={this.unStickTopMenu}\r\n                            once={false}\r\n                        >\r\n                            <Menu\r\n                                borderless inverted={this.props.novelReducer.nightmode}\r\n                                fixed={menuFixed ? 'top' : undefined}\r\n                                style={menuFixed ? fixedMenuStyle : menuStyle}\r\n                            >\r\n                                <Container>\r\n                                    <Menu.Item header>\r\n                                        <Breadcrumb size={'large'}>\r\n                                            <Breadcrumb.Section link><Link\r\n                                                as={`/novel/${this.props.novelchapter.idnovels}/1`} href={`/novel/[id]/1`}\r\n                                            ><Icon color='white' name='home' /></Link></Breadcrumb.Section>\r\n                                            <Breadcrumb.Divider icon='right chevron' />\r\n                                            <Breadcrumb.Section active>{this.props.novelchapter.chaptername}</Breadcrumb.Section>\r\n                                        </Breadcrumb>\r\n                                    </Menu.Item>\r\n                                </Container>\r\n                            </Menu>\r\n                        </Visibility>\r\n                    </Media>\r\n                    <Media at='mobile'>\r\n                        <Visibility\r\n                            onBottomPassed={this.stickTopMenu}\r\n                            onBottomVisible={this.unStickTopMenu}\r\n                            once={false}\r\n                        >\r\n                            <Menu\r\n                                borderless inverted={this.props.novelReducer.nightmode}\r\n                                fixed={menuFixed ? 'top' : undefined}\r\n                                style={menuFixed ? fixedMenuStyle : menuStyle}\r\n                            >\r\n                                <Menu.Item style={{ width: '80%', overflow: 'hidden' }} header position='left'>\r\n                                    <Breadcrumb size={'large'}>\r\n                                        <Breadcrumb.Section link><Link\r\n                                            as={`/novel/${this.props.novelchapter.idnovels}/1`} href={`/novel/[id]/1`}\r\n                                        ><Icon color='white' name='home' /></Link></Breadcrumb.Section>\r\n                                    </Breadcrumb>\r\n                                    <Breadcrumb.Divider icon='right chevron' />\r\n                                    <Breadcrumb.Section active>{this.props.novelchapter.chaptername}</Breadcrumb.Section>\r\n                                </Menu.Item>\r\n                                <Menu.Item position='right'>\r\n                                    <Button onClick={() => this.handleNightMode(this.props.novelReducer.nightmode)} size='large' circular icon={this.props.novelReducer.nightmode ? 'lightbulb outline' : 'moon'} />\r\n                                </Menu.Item>\r\n\r\n\r\n                            </Menu>\r\n                        </Visibility>\r\n                    </Media>\r\n                </MediaContextProvider>\r\n                <Container text style={{ backgroundColor: this.props.novelReducer.nightmode === true ? '#232323' : this.props.novelReducer.background }}>\r\n                    <Grid style={{ marginTop: 20 }}>\r\n                        <Grid.Column className='detail-containers' mobile={16} tablet={16} computer={16}>\r\n                            <Ref innerRef={this.contextRef}>\r\n                                <Segment style={{ backgroundColor: this.props.novelReducer.nightmode === true ? '#232323' : this.props.novelReducer.background }}>\r\n                                    <Item.Group textAlign='left'>\r\n                                        <Item.Description className='content' style={{\r\n                                            fontFamily: this.props.novelReducer.font, lineHeight: this.props.novelReducer.lineheight,\r\n                                            fontSize: this.props.novelReducer.fontsize, color: this.props.novelReducer.nightmode === true ? '#b3b3b3' : 'black'\r\n                                        }} >\r\n                                            {this.props.novelchapter.content !== undefined ?\r\n                                                ReactHtmlParser(this.props.novelchapter.content)\r\n                                                : null\r\n                                            }\r\n                                        </Item.Description>\r\n                                    </Item.Group>\r\n                                    <MediaContextProvider>\r\n                                        <Media greaterThan='mobile'>\r\n                                            <Rail position='right' style={{ marginTop: 100 }}>\r\n                                                <Sticky offset={100} bottomOffset={100} context={this.contextRef}>\r\n                                                    <List>\r\n                                                        <List.Item>\r\n                                                            <Popup position='left center' trigger={<Button size='large' circular icon='font' />} flowing hoverable>\r\n                                                                <Grid textAlign='left' divided columns={1}>\r\n                                                                    <Grid.Column textAlign='left'>\r\n                                                                        <Header as='h4'>Background</Header>\r\n                                                                        <Grid columns={4}>\r\n                                                                            <Grid.Row>\r\n                                                                                <Grid.Column>\r\n                                                                                    <div onClick={() => this.handleChangeBackground('#fff', '#f5f7fa')} className='read-setting_white-color__3ZTE4' />\r\n                                                                                </Grid.Column>\r\n                                                                                <Grid.Column>\r\n                                                                                    <div onClick={() => this.handleChangeBackground('#fff6df', '#fff9eb')} className='read-setting_orange-color__3chix' />\r\n                                                                                </Grid.Column>\r\n                                                                                <Grid.Column>\r\n                                                                                    <div onClick={() => this.handleChangeBackground('#ebf9eb', '#f2f9f2')} className='read-setting_green-color__WTjD7' />\r\n                                                                                </Grid.Column>\r\n                                                                                <Grid.Column>\r\n                                                                                    <div onClick={() => this.handleChangeBackground('#232323', '#1a1a1a')} className='read-setting_black-color__3KmIV' />\r\n                                                                                </Grid.Column>\r\n                                                                            </Grid.Row>\r\n                                                                        </Grid>\r\n                                                                    </Grid.Column>\r\n                                                                    <Grid.Column textAlign='left'>\r\n                                                                        <Header as='h4'>Font Size</Header>\r\n                                                                        <Grid columns={4}>\r\n                                                                            <Grid.Row>\r\n                                                                                <Button.Group size='large'>\r\n                                                                                    <Button onClick={() => this.handleDegree(1)}>A-</Button>\r\n                                                                                    <Button.Or text={this.props.novelReducer.fontsize} />\r\n                                                                                    <Button onClick={() => this.handleDegree(2)}>A+</Button>\r\n                                                                                </Button.Group>\r\n                                                                                <Select onChange={(e, data) => this.handleChangeFont(e, data)} defaultValue={this.props.novelReducer.font} options={countryOptions} />\r\n                                                                            </Grid.Row>\r\n                                                                            <Grid.Row>\r\n\r\n                                                                            </Grid.Row>\r\n                                                                        </Grid>\r\n                                                                    </Grid.Column>\r\n                                                                </Grid>\r\n                                                            </Popup>\r\n\r\n                                                        </List.Item>\r\n\r\n                                                        <List.Item>\r\n                                                            <Button onClick={() => this.handleNightMode(this.props.novelReducer.nightmode)} size='large' circular icon={this.props.novelReducer.nightmode ? 'lightbulb outline' : 'moon'} />\r\n                                                        </List.Item>\r\n                                                    </List>\r\n                                                </Sticky>\r\n                                            </Rail>\r\n                                        </Media>\r\n                                    </MediaContextProvider>\r\n                                </Segment>\r\n                            </Ref>\r\n                        </Grid.Column>\r\n                        <MediaContextProvider>\r\n                            <Media greaterThan='mobile'>\r\n                                <Grid.Row verticalAlign='middle'>\r\n                                    <Button.Group widths='3'>\r\n                                        <Link\r\n                                            as={`/doc/${this.props.novelchapter.idnovels}${this.state.prechap}`}\r\n                                            href={`/doc/[id]/[chapter]`}\r\n                                        >\r\n                                            <Button size='huge' color='black' disabled={this.state.prechap !== \"\" ? false : true} labelPosition='left' icon='left chevron' content='Prev chapter' />\r\n                                        </Link>\r\n                                        <Link\r\n                                            as={`/novel/${this.props.novelchapter.idnovels}/1`}\r\n                                            href={`/novel/[id]/1`}\r\n                                        >\r\n                                            <Button size='huge' color='black' icon='bars' content='Chapter List' />\r\n                                        </Link>\r\n                                        <Link\r\n                                            as={`/doc/${this.props.novelchapter.idnovels}${this.state.nextchap}`}\r\n                                            href={`/doc/[id]/[chapter]`}\r\n                                        >\r\n                                            <Button size='huge' color='black' disabled={this.state.nextchap !== \"\" ? false : true} labelPosition='right' icon='right chevron' content='Next chapter' />\r\n                                        </Link>\r\n                                    </Button.Group>\r\n                                </Grid.Row>\r\n                            </Media>\r\n                            <Media at='mobile'>\r\n                                <Grid.Row mobile={16} tablet={16} computer={16} verticalAlign='middle'>\r\n                                    <Button.Group widths='3'>\r\n                                        <Link\r\n                                            as={`/doc/${this.props.novelchapter.idnovels}${this.state.prechap}`}\r\n                                            href={`/doc/[id]/[chapter]`}\r\n                                        >\r\n                                            <Button size='huge' color='black' disabled={this.state.prechap !== \"\" ? false : true} labelPosition='left' icon='left chevron' />\r\n                                        </Link>\r\n                                        <Link\r\n                                            as={`/novel/${this.props.novelchapter.idnovels}/1`}\r\n                                            href={`/novel/[id]/1`}\r\n                                        >\r\n                                            <Button size='huge' color='black' icon='bars' />\r\n                                        </Link>\r\n\r\n                                        <Link\r\n                                            as={`/doc/${this.props.novelchapter.idnovels}${this.state.nextchap}`}\r\n                                            href={`/doc/[id]/[chapter]`}\r\n                                        >\r\n                                            <Button size='huge' color='black' disabled={this.state.nextchap !== \"\" ? false : true} labelPosition='right' icon='right chevron' />\r\n                                        </Link>\r\n                                    </Button.Group>\r\n                                </Grid.Row>\r\n                            </Media>\r\n                        </MediaContextProvider>\r\n                    </Grid>\r\n                </Container>\r\n\r\n            </Layout>\r\n        )\r\n    }\r\n}\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        novelReducer: state.novelReducer\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, { saveNovel, settingNovel })(Chapter);"]},"metadata":{},"sourceType":"module"}