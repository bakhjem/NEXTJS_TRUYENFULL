{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport 'isomorphic-unfetch';\nimport Link from 'next/link';\nimport React from 'react';\nimport ReactHtmlParser, { processNodes, convertNodeToElement, htmlparser2 } from 'react-html-parser';\nimport { Helmet } from 'react-helmet';\nimport Layout from '../../components/MyLayout';\nimport { useRouter } from 'next/router';\nimport { Button, Container, Divider, Grid, Header, Icon, Image, List, Menu, Segment, Sidebar, Visibility, Item } from 'semantic-ui-react';\n\nvar Truyen = /*#__PURE__*/function (_React$Component) {\n  _inherits(Truyen, _React$Component);\n\n  var _super = _createSuper(Truyen);\n\n  function Truyen() {\n    _classCallCheck(this, Truyen);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Truyen, [{\n    key: \"render\",\n    value: function render() {\n      return __jsx(Layout, null, __jsx(Helmet, null, __jsx(\"title\", null, \"\".concat(this.props.data.novelsname), \" - YYtruyen\"), __jsx(\"meta\", {\n        name: \"description\",\n        content: \"Truy\\u1EC7n \".concat(this.props.data.novelsname, \" l\\xE0 t\\xE1c ph\\u1EA9m c\\u1EE7a t\\xE1c gi\\u1EA3 \").concat(this.props.data.author, \", ti\\u1EBFn tr\\xECnh: \").concat(this.props.data.status, \". V\\xE0o yytruyen.com \\u0111\\u1EC3 \\u0111\\u1ECDc nh\\u1EEFng ch\\u01B0\\u01A1ng m\\u1EDBi nh\\u1EA5t c\\u1EE7a t\\xE1c ph\\u1EA9m n\\xE0y nh\\xE9  \")\n      }), __jsx(\"meta\", {\n        name: \"theme-color\",\n        content: \"#008f68\"\n      }), __jsx(\"meta\", {\n        name: \"keywords\",\n        content: \"\\u0111\\u1ECDc truy\\u1EC7n online, truy\\u1EC7n online, truy\\u1EC7n ng\\xF4n t\\xECnh, truy\\u1EC7n ki\\u1EBFm hi\\u1EC7p, truy\\u1EC7n ng\\u01B0\\u1EE3c, s\\u1EE7ng\"\n      }), __jsx(\"meta\", {\n        property: \"og:title\",\n        content: \"\".concat(this.props.data.novelsname)\n      }), __jsx(\"meta\", {\n        property: \"og:type\",\n        content: \"book\"\n      }), __jsx(\"meta\", {\n        property: \"og:image\",\n        content: \"\".concat(this.props.data.cover)\n      }), __jsx(\"meta\", {\n        property: \"og:description\",\n        content: \"\".concat(this.props.data.des)\n      }), __jsx(\"meta\", {\n        property: \"og:site_name\",\n        content: \"Yytruyen.com\"\n      }), __jsx(\"meta\", {\n        property: \"og:url\",\n        content: \"http://yytruyen.com/truyen/\".concat(this.props.data.idnovels)\n      }), __jsx(\"meta\", {\n        property: \"book:author\",\n        content: \"\".concat(this.props.data.author)\n      }), __jsx(\"meta\", {\n        property: \"og:image:width\",\n        content: \"200\"\n      }), __jsx(\"meta\", {\n        property: \"og:image:height\",\n        content: \"300\"\n      }), __jsx(\"script\", {\n        type: \"application/ld+json\"\n      }, \"\\n                    {\\n                    \\\"@context\\\": \\\"http://schema.org\\\",\\n                    \\\"url\\\": \\\"http://yytruyen.com/truyen/\".concat(this.props.data.idnovels, \"\\\",\\n                    \\\"image\\\": \\\"\").concat(this.props.data.cover, \"\\\",\\n                    \\\"@type\\\": \\\"Book\\\",\\n                    \\\"name\\\": \\\"\").concat(this.props.data.novelsname, \"\\\",\\n                    \\\"author\\\": \\\"\").concat(this.props.data.author, \"\\\",\\n                    \\\"description\\\": \\\"\").concat(this.props.data.des, \"\\\"\\n                    }\\n                    \"))), __jsx(Segment, {\n        inverted: true,\n        textAlign: \"center\",\n        style: {\n          minHeight: '32.625rem',\n          padding: '1em 0em'\n        },\n        vertical: true\n      }, __jsx(\"div\", {\n        className: \"book-info\"\n      }, __jsx(\"img\", {\n        className: \"glass_background-img\",\n        src: this.props.data.cover\n      }), __jsx(Container, {\n        style: {}\n      }, __jsx(Grid, null, __jsx(Grid.Column, {\n        mobile: 16,\n        tablet: 4,\n        computer: 4\n      }, __jsx(Image, {\n        fluid: true,\n        className: \"item-img\",\n        src: this.props.data.cover,\n        style: {\n          height: '25.75rem'\n        }\n      })), __jsx(Grid.Column, {\n        mobile: 16,\n        tablet: 12,\n        computer: 12\n      }, __jsx(Item.Group, null, __jsx(Item.Content, null, __jsx(Item.Header, {\n        className: \"book-title\",\n        as: \"h2\"\n      }, this.props.data.novelsname)), __jsx(Item.Extra, null, __jsx(\"span\", {\n        className: \"label\"\n      }, \"Author:\"), \" \", this.props.data.author))))))));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref) {\n        var id, res, json;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                id = _ref.query.id;\n                _context.next = 3;\n                return fetch(\"http://localhost:8001/novel?id=\".concat(id));\n\n              case 3:\n                res = _context.sent;\n                _context.next = 6;\n                return res.json();\n\n              case 6:\n                json = _context.sent;\n                return _context.abrupt(\"return\", {\n                  data: json\n                });\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getInitialProps(_x) {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  return Truyen;\n}(React.Component);\n\nexport { Truyen as default };","map":{"version":3,"sources":["C:/Users/bakhjem/Desktop/nhattin/nextjstruyen/pages/truyen/[id].js"],"names":["Link","React","ReactHtmlParser","processNodes","convertNodeToElement","htmlparser2","Helmet","Layout","useRouter","Button","Container","Divider","Grid","Header","Icon","Image","List","Menu","Segment","Sidebar","Visibility","Item","Truyen","props","data","novelsname","author","status","cover","des","idnovels","minHeight","padding","height","id","query","fetch","res","json","Component"],"mappings":"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","sourcesContent":["import 'isomorphic-unfetch'\r\nimport Link from 'next/link'\r\nimport React from 'react'\r\nimport ReactHtmlParser, { processNodes, convertNodeToElement, htmlparser2 } from 'react-html-parser';\r\nimport { Helmet } from 'react-helmet';\r\nimport Layout from '../../components/MyLayout'\r\nimport { useRouter } from 'next/router'\r\nimport {\r\n    Button,\r\n    Container,\r\n    Divider,\r\n    Grid,\r\n    Header,\r\n    Icon,\r\n    Image,\r\n    List,\r\n    Menu,\r\n    Segment,\r\n    Sidebar,\r\n    Visibility,\r\n    Item\r\n} from 'semantic-ui-react';\r\nexport default class Truyen extends React.Component {\r\n    static async getInitialProps({ query: { id } }) {\r\n        // eslint-disable-next-line no-undef\r\n        // const { id } = context.query\r\n        // const router = useRouter()\r\n        // const { id } = router.query\r\n        const res = await fetch(`http://localhost:8001/novel?id=${id}`)\r\n        const json = await res.json()\r\n        // console.log(json)\r\n        return { data: json }\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <Layout>\r\n                <Helmet>\r\n                    <title>{`${this.props.data.novelsname}`} - YYtruyen</title>\r\n                    <meta name=\"description\" content={`Truyện ${this.props.data.novelsname} là tác phẩm của tác giả ${this.props.data.author}, tiến trình: ${this.props.data.status}. Vào yytruyen.com để đọc những chương mới nhất của tác phẩm này nhé  `} />\r\n                    <meta name=\"theme-color\" content=\"#008f68\" />\r\n                    <meta name=\"keywords\" content=\"đọc truyện online, truyện online, truyện ngôn tình, truyện kiếm hiệp, truyện ngược, sủng\" />\r\n                    <meta property=\"og:title\" content={`${this.props.data.novelsname}`} />\r\n                    <meta property=\"og:type\" content=\"book\" />\r\n                    <meta property=\"og:image\" content={`${this.props.data.cover}`} />\r\n                    <meta property=\"og:description\" content={`${this.props.data.des}`} />\r\n                    <meta property=\"og:site_name\" content=\"Yytruyen.com\" />\r\n                    <meta property=\"og:url\" content={`http://yytruyen.com/truyen/${this.props.data.idnovels}`} />\r\n                    <meta property=\"book:author\" content={`${this.props.data.author}`} />\r\n                    <meta property=\"og:image:width\" content=\"200\" />\r\n                    <meta property=\"og:image:height\" content=\"300\" />\r\n\r\n                    <script type=\"application/ld+json\">{`\r\n                    {\r\n                    \"@context\": \"http://schema.org\",\r\n                    \"url\": \"http://yytruyen.com/truyen/${this.props.data.idnovels}\",\r\n                    \"image\": \"${this.props.data.cover}\",\r\n                    \"@type\": \"Book\",\r\n                    \"name\": \"${this.props.data.novelsname}\",\r\n                    \"author\": \"${this.props.data.author}\",\r\n                    \"description\": \"${this.props.data.des}\"\r\n                    }\r\n                    `}</script>\r\n                </Helmet>\r\n                <Segment\r\n                    inverted\r\n                    textAlign='center'\r\n                    style={{ minHeight: '32.625rem', padding: '1em 0em' }}\r\n                    vertical\r\n                >\r\n                    <div className='book-info'>\r\n                        <img className='glass_background-img' src={this.props.data.cover} />\r\n                        <Container style={{}}>\r\n                            <Grid>\r\n                                <Grid.Column mobile={16} tablet={4} computer={4}>\r\n                                    <Image fluid className='item-img' src={this.props.data.cover} style={{ height: '25.75rem' }} />\r\n                                </Grid.Column>\r\n                                <Grid.Column mobile={16} tablet={12} computer={12}>\r\n                                    <Item.Group>\r\n                                        <Item.Content>\r\n                                            <Item.Header className='book-title' as='h2'>{this.props.data.novelsname}</Item.Header>\r\n                                        </Item.Content>\r\n                                        <Item.Extra>\r\n                                            <span className='label'>Author:</span> {this.props.data.author}\r\n                                        </Item.Extra>\r\n                                    </Item.Group>\r\n                                </Grid.Column>\r\n                            </Grid>\r\n                        </Container>\r\n                    </div>\r\n\r\n                </Segment>\r\n\r\n                {/* <div id=\"main_body\">\r\n                    <div className=\"cotgiua\">\r\n                        <div className=\"hfeed truyen_info_wrapper\">\r\n                            <div className=\"breadcrumb breadcrumbs\">\r\n                                <div className=\"rdfa-breadcrumb\">\r\n                                    <div>\r\n                                        <p>\r\n                                            <span className=\"breadcrumbs-title\" />\r\n                                            <span\r\n                                                itemScope\r\n                                                itemType=\"http://data-vocabulary.org/Breadcrumb\"\r\n                                            >\r\n                                                <Link\r\n                                                    href=\"/\"\r\n                                                >\r\n                                                    <a itemProp=\"url\" className=\"home\"\r\n                                                        title=\"Đọc truyện online\">\r\n                                                        <span itemProp=\"title\">Đọc truyện online</span>\r\n                                                    </a>\r\n                                                </Link>\r\n                                            </span>\r\n                                            <span className=\"separator\">»</span>\r\n                                            <span\r\n                                                itemScope\r\n                                                itemType=\"http://data-vocabulary.org/Breadcrumb\"\r\n                                            >\r\n                                                <Link\r\n                                                    as={`/truyen/${this.props.data.idnovels}`}\r\n                                                    href={`/truyen?id=${this.props.data.idnovels}`}\r\n\r\n                                                >\r\n                                                    <a itemProp=\"url\" title={this.props.data.novelsname}>\r\n                                                        <span itemProp=\"title\">\r\n                                                            {this.props.data.novelsname}\r\n                                                        </span>\r\n                                                    </a>\r\n                                                </Link>\r\n                                            </span>\r\n                                        </p>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            {this.props.data.chapterlist.length !== 0 ?\r\n                                <div className=\"hentry truyen_info\">\r\n                                    <div className=\"entry-header\">\r\n                                        <div className=\"truyen_if_wrap\">\r\n                                            <div className=\"truyen_info_left\">\r\n                                                <span\r\n                                                    className=\"info_image\"\r\n                                                    style={{\r\n                                                        background: `url(${\r\n                                                            this.props.data.cover\r\n                                                            })  center center no-repeat`,\r\n                                                        backgroundSize: \"contain\"\r\n                                                    }}\r\n                                                    title={this.props.data.novelsname}\r\n                                                >\r\n                                                    <img\r\n                                                        width={173}\r\n                                                        height={250}\r\n                                                        src={this.props.data.cover}\r\n                                                        className=\"attachment-large size-large wp-post-image\"\r\n                                                        alt={this.props.data.novelsname}\r\n                                                        title={this.props.data.novelsname}\r\n                                                        style={{ opacity: 0 }}\r\n                                                    />\r\n                                                </span>\r\n                                            </div>\r\n                                            <ul className=\"truyen_info_right\">\r\n                                                <h1 className=\"entry-title\">\r\n                                                    <span>{this.props.data.novelsname}</span>\r\n                                                </h1>\r\n                                                <li></li>\r\n                                                <li>\r\n                                                    <span>Tác giả: </span>\r\n                                                    {this.props.data.author}\r\n                                                </li>\r\n                                                <li>\r\n                                                    <span>Thể loại: </span>\r\n                                                    {this.props.data.genresdata.map(genresdata => (\r\n                                                        <Link as={`/theloai/${genresdata.idgenres}/1`} href={`/theloai/[id]/[page]`}>\r\n                                                            <a style={{ color: 'white',background:'#f95a35',padding:3,borderRadius:10 }} rel=\"nofollow\">\r\n                                                                {genresdata.genrename}\r\n                                                            </a>\r\n                                                        </Link>\r\n                                                    ))}\r\n                                                </li>\r\n                                                <li>\r\n                                                    <span>Tình trạng : </span>\r\n                                                    {this.props.data.status}\r\n                                                </li>\r\n                                                <li>\r\n                                                    <span>view : </span>\r\n                                                    <em\r\n                                                        className=\"entry-meta\"\r\n                                                        style={{ padding: 0, fontStyle: \"initial\" }}\r\n                                                    >\r\n                                                        <em className=\"date updated\">\r\n                                                            {this.props.data.view}\r\n                                                        </em>\r\n                                                    </em>\r\n                                                </li>\r\n                                            </ul>\r\n                                        </div>\r\n                                        <div\r\n                                            id=\"noidungm\"\r\n                                            style={{\r\n                                                font: \"400 14px Open Sans, Tahoma, Geneva, sans-serif\",\r\n                                                color: \"#3e3e3e\",\r\n                                                width: \"100%\",\r\n                                                background: \"#FFF\",\r\n                                                textAlign: \"justify\",\r\n                                                borderTop: \"1px dashed #ff530d\",\r\n                                                float: \"left\",\r\n                                                height: \"100%\",\r\n                                                position: \"relative\",\r\n                                                overflowY: \"auto\",\r\n                                                maxHeight: \"100%\",\r\n                                                overflowX: \"hidden\"\r\n                                            }}\r\n                                        >\r\n                                            <div style={{margin:15}}>{ReactHtmlParser(this.props.data.description)}</div>\r\n                                        </div>\r\n                                        <div style={{ width: \"100%\", textAlign: \"center\" }} />\r\n                                        <div id=\"list_chapter\" className=\"list_chapter\">\r\n                                            <div className=\"row title-list-chapter\">\r\n                                                <h2 className=\"h2-manga\">\r\n                                                    Danh sách chương\r\n                  </h2>\r\n                                            </div>\r\n                                            <div className=\"chapter-list\">\r\n                                                {this.props.data.chapterlist.map(datachapter => (\r\n                                                    <div className=\"row\" key={datachapter.idchapter}>\r\n                                                        <span><Link\r\n                                                            as={`/doc/${this.props.data.idnovels}/${datachapter.idchapter}`}\r\n                                                            href={`/doc/[id]/[chapter]`}>\r\n                                                            <a title={datachapter.chaptername}>{datachapter.chaptername}</a>\r\n                                                        </Link></span>\r\n                                                    </div>\r\n                                                ))}\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div> : null\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                \r\n                </div> */}\r\n            </Layout>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}