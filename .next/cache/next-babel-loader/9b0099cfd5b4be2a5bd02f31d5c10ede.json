{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Layout from '../../components/MyLayout';\nimport 'isomorphic-unfetch';\nimport Link from 'next/link';\nimport { useRouter } from 'next/router';\nimport React from 'react';\nimport ReactHtmlParser, { processNodes, convertNodeToElement, htmlparser2 } from 'react-html-parser';\nimport { Helmet } from 'react-helmet';\nimport { Container, Divider, Dropdown, Grid, Header, Image, List, Menu, Icon, Segment, Pagination } from 'semantic-ui-react';\nimport { API_URL } from '../../config/config';\nconst router = useRouter();\nexport default class Update extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"handleChangepage\", (e, data) => {\n      console.log(data);\n\n      if (data.activePage !== this.props.page) {\n        router.push(`/update/${data.activePage}`);\n      }\n    });\n  }\n\n  static async getInitialProps(context) {\n    // eslint-disable-next-line no-undef\n    const {\n      page\n    } = context.query;\n    const res = await fetch(`${API_URL}update?page=${page}`);\n    const json = await res.json(); // console.log(json)\n\n    return {\n      data: json,\n      page: page\n    };\n  }\n\n  render() {\n    console.log(this.props);\n    return __jsx(Layout, null, __jsx(\"style\", null, `\n      html, body {\n        background-color: #242933 !important;\n      }\n      p {\n        align-content: center;\n        background-color: #495285;\n        color: #fff;\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n        min-height: 6em;\n      }\n      p > span {\n        opacity: 0.4;\n        text-align: center;\n      }\n    }\n    `), __jsx(Helmet, null, __jsx(\"title\", null, \"\\u0110\\u1ECDc truy\\u1EC7n online - YYtruyen.com\"), __jsx(\"meta\", {\n      name: \"description\",\n      content: \"\\u0110\\u1ECDc truy\\u1EC7n mi\\u1EC5n ph\\xED, c\\u1EADp nh\\u1EADt nhanh nh\\u1EA5t c\\xE1c truy\\u1EC7n ng\\xF4n t\\xECnh, truy\\u1EC7n ki\\u1EBFm hi\\u1EC7p, xuy\\xEAn kh\\xF4ng, s\\u1EE7ng, ng\\u01B0\\u1EE3c v\\xE0 nhi\\u1EC1u th\\u1EC3 lo\\u1EA1i kh\\xE1c\"\n    }), __jsx(\"meta\", {\n      name: \"theme-color\",\n      content: \"#008f68\"\n    }), __jsx(\"meta\", {\n      name: \"keywords\",\n      content: \"\\u0111\\u1ECDc truy\\u1EC7n, \\u0111\\u1ECDc truy\\u1EC7n online, truy\\u1EC7n ng\\xF4n t\\xECnh, truy\\u1EC7n ki\\u1EBFm hi\\u1EC7p, xuy\\xEAn kh\\xF4ng\"\n    })), __jsx(Container, {\n      style: {\n        marginTop: '7em'\n      }\n    }, __jsx(Grid, null, __jsx(Grid.Column, {\n      mobile: 16,\n      tablet: 16,\n      computer: 16\n    }, __jsx(Header, {\n      className: \"title-name\",\n      as: \"h2\"\n    }, \"Lastest Updates\")), this.props.data.data.length !== 0 ? this.props.data.data.map(mangalist => __jsx(Grid.Column, {\n      mobile: 8,\n      tablet: 3,\n      computer: 3\n    }, __jsx(Grid, {\n      verticalAlign: \"top\"\n    }, __jsx(Grid.Column, {\n      mobile: 16,\n      tablet: 16,\n      computer: 16\n    }, __jsx(Link, {\n      as: `/truyen/${mangalist.idnovel}`,\n      href: `/truyen/[id]` // href={'/truyen/' + mangalist.idnovel}\n\n    }, __jsx(Image, {\n      fluid: true,\n      label: {\n        color: 'orange',\n        content: `View: ${mangalist.view}`,\n        ribbon: true\n      },\n      className: \"item-img\",\n      src: mangalist.cover,\n      style: {\n        height: 240\n      }\n    }))), __jsx(Grid.Column, {\n      mobile: 16,\n      tablet: 16,\n      computer: 16\n    }, __jsx(Header, {\n      className: \"book-name\",\n      as: \"h4\"\n    }, mangalist.novelsname), __jsx(Header, {\n      className: \"book-catalog\",\n      size: \"tiny\",\n      as: \"h6\"\n    }, \"Last chapter: \", mangalist.lasterchapter))))) : null, __jsx(Grid.Column, {\n      mobile: 16,\n      tablet: 16,\n      computer: 16\n    }, __jsx(Pagination, {\n      onPageChange: (e, data) => this.handleChangepage(e, data),\n      defaultActivePage: this.props.page,\n      totalPages: this.props.data.totalpage\n    })))));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/bakhjem/Desktop/nhattin/nextjstruyen/pages/update/[page].js"],"names":["Layout","Link","useRouter","React","ReactHtmlParser","processNodes","convertNodeToElement","htmlparser2","Helmet","Container","Divider","Dropdown","Grid","Header","Image","List","Menu","Icon","Segment","Pagination","API_URL","router","Update","Component","e","data","console","log","activePage","props","page","push","getInitialProps","context","query","res","fetch","json","render","marginTop","length","map","mangalist","idnovel","color","content","view","ribbon","cover","height","novelsname","lasterchapter","handleChangepage","totalpage"],"mappings":"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","sourcesContent":["import Layout from '../../components/MyLayout'\r\nimport 'isomorphic-unfetch'\r\nimport Link from 'next/link';\r\nimport { useRouter } from 'next/router'\r\nimport React from 'react'\r\nimport ReactHtmlParser, { processNodes, convertNodeToElement, htmlparser2 } from 'react-html-parser';\r\nimport { Helmet } from 'react-helmet';\r\nimport {\r\n    Container,\r\n    Divider,\r\n    Dropdown,\r\n    Grid,\r\n    Header,\r\n    Image,\r\n    List,\r\n    Menu,\r\n    Icon,\r\n    Segment,\r\n    Pagination\r\n} from 'semantic-ui-react';\r\nimport { API_URL } from '../../config/config'\r\nconst router = useRouter()\r\nexport default class Update extends React.Component {\r\n\r\n    static async getInitialProps(context) {\r\n        // eslint-disable-next-line no-undef\r\n        const { page } = context.query\r\n        const res = await fetch(`${API_URL}update?page=${page}`)\r\n        const json = await res.json()\r\n        // console.log(json)\r\n        return { data: json, page: page }\r\n    }\r\n    handleChangepage = (e, data) => {\r\n\r\n        console.log(data)\r\n        if (data.activePage !== this.props.page) {\r\n            router.push(`/update/${data.activePage}`)\r\n        }\r\n    }\r\n    render() {\r\n        console.log(this.props)\r\n        return (\r\n            <Layout>\r\n                <style>\r\n                    {`\r\n      html, body {\r\n        background-color: #242933 !important;\r\n      }\r\n      p {\r\n        align-content: center;\r\n        background-color: #495285;\r\n        color: #fff;\r\n        display: flex;\r\n        flex-direction: column;\r\n        justify-content: center;\r\n        min-height: 6em;\r\n      }\r\n      p > span {\r\n        opacity: 0.4;\r\n        text-align: center;\r\n      }\r\n    }\r\n    `}\r\n                </style>\r\n                <Helmet>\r\n                    <title>Đọc truyện online - YYtruyen.com</title>\r\n                    <meta name=\"description\" content=\"Đọc truyện miễn phí, cập nhật nhanh nhất các truyện ngôn tình, truyện kiếm hiệp, xuyên không, sủng, ngược và nhiều thể loại khác\" />\r\n                    <meta name=\"theme-color\" content=\"#008f68\" />\r\n                    <meta name=\"keywords\" content=\"đọc truyện, đọc truyện online, truyện ngôn tình, truyện kiếm hiệp, xuyên không\" />\r\n                </Helmet>\r\n                <Container style={{ marginTop: '7em' }}>\r\n                    <Grid>\r\n                        <Grid.Column mobile={16} tablet={16} computer={16}>\r\n                            <Header className='title-name' as='h2'>Lastest Updates</Header>\r\n                        </Grid.Column>\r\n                        {this.props.data.data.length !== 0 ?\r\n                            this.props.data.data.map(mangalist => (\r\n                                <Grid.Column mobile={8} tablet={3} computer={3}>\r\n                                    <Grid verticalAlign='top'>\r\n                                        <Grid.Column mobile={16} tablet={16} computer={16}>\r\n                                            <Link\r\n                                                as={`/truyen/${mangalist.idnovel}`} href={`/truyen/[id]`}\r\n                                            // href={'/truyen/' + mangalist.idnovel}\r\n                                            >\r\n                                                <Image fluid label={{\r\n                                                    color: 'orange',\r\n                                                    content: `View: ${mangalist.view}`,\r\n                                                    ribbon: true,\r\n                                                }} className='item-img' src={mangalist.cover} style={{ height: 240 }} />\r\n                                            </Link>\r\n\r\n                                        </Grid.Column>\r\n                                        <Grid.Column mobile={16} tablet={16} computer={16} >\r\n                                            <Header className='book-name' as='h4'>{mangalist.novelsname}</Header>\r\n                                            <Header className='book-catalog' size='tiny' as='h6'>Last chapter: {mangalist.lasterchapter}</Header>\r\n                                        </Grid.Column>\r\n                                    </Grid>\r\n                                </Grid.Column>\r\n                            )) : null}\r\n                        <Grid.Column mobile={16} tablet={16} computer={16}>\r\n                            <Pagination onPageChange={(e, data) => this.handleChangepage(e, data)} defaultActivePage={this.props.page} totalPages={this.props.data.totalpage} />\r\n                        </Grid.Column>\r\n                    </Grid>\r\n\r\n                </Container>\r\n\r\n            </Layout>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}