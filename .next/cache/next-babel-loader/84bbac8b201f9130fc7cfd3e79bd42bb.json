{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport App from 'next/app';\nimport Router from 'next/router';\nimport { Provider } from 'react-redux';\nimport NProgress from 'nprogress';\nimport 'semantic-ui-css/semantic.min.css';\nimport * as gtag from '../lib/gtag';\nimport { store } from '../redux/store';\nimport { Placeholder } from 'semantic-ui-react';\nRouter.events.on('routeChangeStart', url => {\n  console.log(`Loading: ${url}`);\n  NProgress.start();\n});\nRouter.events.on('routeChangeComplete', () => NProgress.done());\nRouter.events.on('routeChangeError', () => NProgress.done());\nRouter.events.on('routeChangeComplete', url => gtag.pageview(url));\n\nclass MyApp extends App {\n  static async getInitialProps({\n    Component,\n    ctx\n  }) {\n    const pageProps = Component.getInitialProps ? await Component.getInitialProps(ctx) : {}; //Anything returned here can be accessed by the client\n\n    return {\n      pageProps: pageProps\n    };\n  }\n\n  render() {\n    //pageProps that were returned  from 'getInitialProps' are stored in the props i.e. pageprops\n    const {\n      Component,\n      pageProps\n    } = this.props;\n    return __jsx(Provider, {\n      store: store\n    }, __jsx(Component, pageProps));\n  }\n\n} //withRedux wrapper that passes the store to the App Component\n\n\nexport default MyApp; // export default App","map":{"version":3,"sources":["C:/Users/bakhjem/Desktop/nhattin/nextjstruyen/pages/_app.js"],"names":["App","Router","Provider","NProgress","gtag","store","Placeholder","events","on","url","console","log","start","done","pageview","MyApp","getInitialProps","Component","ctx","pageProps","render","props"],"mappings":";;AAAA,OAAOA,GAAP,MAAgB,UAAhB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,SAAP,MAAsB,WAAtB;AACA,OAAO,kCAAP;AACA,OAAO,KAAKC,IAAZ,MAAsB,aAAtB;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,SAASC,WAAT,QAA4B,mBAA5B;AAEAL,MAAM,CAACM,MAAP,CAAcC,EAAd,CAAiB,kBAAjB,EAAqCC,GAAG,IAAI;AACxCC,EAAAA,OAAO,CAACC,GAAR,CAAa,YAAWF,GAAI,EAA5B;AACAN,EAAAA,SAAS,CAACS,KAAV;AACH,CAHD;AAIAX,MAAM,CAACM,MAAP,CAAcC,EAAd,CAAiB,qBAAjB,EAAwC,MAAML,SAAS,CAACU,IAAV,EAA9C;AACAZ,MAAM,CAACM,MAAP,CAAcC,EAAd,CAAiB,kBAAjB,EAAqC,MAAML,SAAS,CAACU,IAAV,EAA3C;AACAZ,MAAM,CAACM,MAAP,CAAcC,EAAd,CAAiB,qBAAjB,EAAwCC,GAAG,IAAIL,IAAI,CAACU,QAAL,CAAcL,GAAd,CAA/C;;AAEA,MAAMM,KAAN,SAAoBf,GAApB,CAAwB;AACpB,eAAagB,eAAb,CAA6B;AAAEC,IAAAA,SAAF;AAAaC,IAAAA;AAAb,GAA7B,EAAiD;AAC7C,UAAMC,SAAS,GAAGF,SAAS,CAACD,eAAV,GAA4B,MAAMC,SAAS,CAACD,eAAV,CAA0BE,GAA1B,CAAlC,GAAmE,EAArF,CAD6C,CAG7C;;AACA,WAAO;AAAEC,MAAAA,SAAS,EAAEA;AAAb,KAAP;AACH;;AACDC,EAAAA,MAAM,GAAG;AACL;AACA,UAAM;AAAEH,MAAAA,SAAF;AAAaE,MAAAA;AAAb,QAA4B,KAAKE,KAAvC;AAEA,WACI,MAAC,QAAD;AAAU,MAAA,KAAK,EAAEhB;AAAjB,OACI,MAAC,SAAD,EAAec,SAAf,CADJ,CADJ;AAKH;;AAhBmB,C,CAoBxB;;;AACA,eAAgBJ,KAAhB,C,CACA","sourcesContent":["import App from 'next/app'\r\nimport Router from 'next/router'\r\nimport { Provider } from 'react-redux';\r\nimport NProgress from 'nprogress'\r\nimport 'semantic-ui-css/semantic.min.css'\r\nimport * as gtag from '../lib/gtag'\r\nimport { store } from '../redux/store';\r\nimport { Placeholder } from 'semantic-ui-react'\r\n\r\nRouter.events.on('routeChangeStart', url => {\r\n    console.log(`Loading: ${url}`)\r\n    NProgress.start()\r\n})\r\nRouter.events.on('routeChangeComplete', () => NProgress.done())\r\nRouter.events.on('routeChangeError', () => NProgress.done())\r\nRouter.events.on('routeChangeComplete', url => gtag.pageview(url))\r\n\r\nclass MyApp extends App {\r\n    static async getInitialProps({ Component, ctx }) {\r\n        const pageProps = Component.getInitialProps ? await Component.getInitialProps(ctx) : {};\r\n\r\n        //Anything returned here can be accessed by the client\r\n        return { pageProps: pageProps };\r\n    }\r\n    render() {\r\n        //pageProps that were returned  from 'getInitialProps' are stored in the props i.e. pageprops\r\n        const { Component, pageProps, } = this.props;\r\n\r\n        return (\r\n            <Provider store={store}>\r\n                <Component {...pageProps} />\r\n            </Provider>\r\n        );\r\n    }\r\n\r\n}\r\n\r\n//withRedux wrapper that passes the store to the App Component\r\nexport default (MyApp);\r\n// export default App"]},"metadata":{},"sourceType":"module"}