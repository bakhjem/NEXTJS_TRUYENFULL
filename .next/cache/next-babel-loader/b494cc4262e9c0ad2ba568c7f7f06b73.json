{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport Layout from '../../components/MyLayout';\nimport 'isomorphic-unfetch';\nimport Link from 'next/link';\nimport React from 'react';\nimport ReactHtmlParser, { processNodes, convertNodeToElement, htmlparser2 } from 'react-html-parser';\nimport { Helmet } from 'react-helmet';\nimport { Container, Divider, Dropdown, Grid, Header, Image, List, Menu, Icon, Segment } from 'semantic-ui-react';\nimport { API_URL } from '../../config/config';\n\nvar Update = /*#__PURE__*/function (_React$Component) {\n  _inherits(Update, _React$Component);\n\n  var _super = _createSuper(Update);\n\n  function Update() {\n    _classCallCheck(this, Update);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Update, [{\n    key: \"render\",\n    value: function render() {\n      console.log(this.props);\n      return __jsx(Layout, null, __jsx(Helmet, null, __jsx(\"title\", null, \"\\u0110\\u1ECDc truy\\u1EC7n online - YYtruyen.com\"), __jsx(\"meta\", {\n        name: \"description\",\n        content: \"\\u0110\\u1ECDc truy\\u1EC7n mi\\u1EC5n ph\\xED, c\\u1EADp nh\\u1EADt nhanh nh\\u1EA5t c\\xE1c truy\\u1EC7n ng\\xF4n t\\xECnh, truy\\u1EC7n ki\\u1EBFm hi\\u1EC7p, xuy\\xEAn kh\\xF4ng, s\\u1EE7ng, ng\\u01B0\\u1EE3c v\\xE0 nhi\\u1EC1u th\\u1EC3 lo\\u1EA1i kh\\xE1c\"\n      }), __jsx(\"meta\", {\n        name: \"theme-color\",\n        content: \"#008f68\"\n      }), __jsx(\"meta\", {\n        name: \"keywords\",\n        content: \"\\u0111\\u1ECDc truy\\u1EC7n, \\u0111\\u1ECDc truy\\u1EC7n online, truy\\u1EC7n ng\\xF4n t\\xECnh, truy\\u1EC7n ki\\u1EBFm hi\\u1EC7p, xuy\\xEAn kh\\xF4ng\"\n      })), __jsx(Container, {\n        style: {\n          marginTop: '7em'\n        }\n      }, __jsx(Grid, null, __jsx(Grid.Column, {\n        mobile: 16,\n        tablet: 16,\n        computer: 16\n      }, __jsx(Header, {\n        className: \"title-name\",\n        as: \"h2\"\n      }, \"Lastest Updates\")), this.props.data.data.length !== 0 ? this.props.data.data.map(function (mangalist) {\n        return __jsx(Grid.Column, {\n          mobile: 8,\n          tablet: 3,\n          computer: 3\n        }, __jsx(Grid, {\n          verticalAlign: \"top\"\n        }, __jsx(Grid.Column, {\n          mobile: 16,\n          tablet: 16,\n          computer: 16\n        }, __jsx(Link, {\n          as: \"/truyen/\".concat(mangalist.idnovel),\n          href: \"/truyen/[id]\" // href={'/truyen/' + mangalist.idnovel}\n\n        }, __jsx(Image, {\n          fluid: true,\n          label: {\n            color: 'orange',\n            content: \"View: \".concat(mangalist.view),\n            ribbon: true\n          },\n          className: \"item-img\",\n          src: mangalist.cover,\n          style: {\n            height: 240\n          }\n        }))), __jsx(Grid.Column, {\n          mobile: 16,\n          tablet: 16,\n          computer: 16\n        }, __jsx(Header, {\n          className: \"book-name\",\n          as: \"h4\"\n        }, mangalist.novelsname), __jsx(Header, {\n          className: \"book-catalog\",\n          size: \"tiny\",\n          as: \"h6\"\n        }, \"Last chapter: \", mangalist.lasterchapter))));\n      }) : null)));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(context) {\n        var page, res, json;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                // eslint-disable-next-line no-undef\n                page = context.query.page;\n                _context.next = 3;\n                return fetch(\"\".concat(API_URL, \"update?page=\").concat(page));\n\n              case 3:\n                res = _context.sent;\n                _context.next = 6;\n                return res.json();\n\n              case 6:\n                json = _context.sent;\n                return _context.abrupt(\"return\", {\n                  data: json,\n                  page: page\n                });\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getInitialProps(_x) {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  return Update;\n}(React.Component);\n\nexport { Update as default };","map":{"version":3,"sources":["C:/Users/bakhjem/Desktop/nhattin/nextjstruyen/pages/update/[page].js"],"names":["Layout","Link","React","ReactHtmlParser","processNodes","convertNodeToElement","htmlparser2","Helmet","Container","Divider","Dropdown","Grid","Header","Image","List","Menu","Icon","Segment","API_URL","Update","console","log","props","marginTop","data","length","map","mangalist","idnovel","color","content","view","ribbon","cover","height","novelsname","lasterchapter","context","page","query","fetch","res","json","Component"],"mappings":"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","sourcesContent":["import Layout from '../../components/MyLayout'\r\nimport 'isomorphic-unfetch'\r\nimport Link from 'next/link'\r\nimport React from 'react'\r\nimport ReactHtmlParser, { processNodes, convertNodeToElement, htmlparser2 } from 'react-html-parser';\r\nimport { Helmet } from 'react-helmet';\r\nimport {\r\n    Container,\r\n    Divider,\r\n    Dropdown,\r\n    Grid,\r\n    Header,\r\n    Image,\r\n    List,\r\n    Menu,\r\n    Icon,\r\n    Segment,\r\n} from 'semantic-ui-react';\r\nimport {API_URL} from '../../config/config'\r\n\r\nexport default class Update extends React.Component {\r\n    static async getInitialProps(context) {\r\n        // eslint-disable-next-line no-undef\r\n        const { page } = context.query\r\n        const res = await fetch(`${API_URL}update?page=${page}`)\r\n        const json = await res.json()\r\n        // console.log(json)\r\n        return { data: json, page: page }\r\n    }\r\n\r\n    render() {\r\n        console.log(this.props)\r\n        return (\r\n            <Layout>\r\n                <Helmet>\r\n                    <title>Đọc truyện online - YYtruyen.com</title>\r\n                    <meta name=\"description\" content=\"Đọc truyện miễn phí, cập nhật nhanh nhất các truyện ngôn tình, truyện kiếm hiệp, xuyên không, sủng, ngược và nhiều thể loại khác\" />\r\n                    <meta name=\"theme-color\" content=\"#008f68\" />\r\n                    <meta name=\"keywords\" content=\"đọc truyện, đọc truyện online, truyện ngôn tình, truyện kiếm hiệp, xuyên không\" />\r\n                </Helmet>\r\n                <Container style={{ marginTop: '7em' }}>\r\n                    <Grid>\r\n                        <Grid.Column mobile={16} tablet={16} computer={16}>\r\n                            <Header className='title-name' as='h2'>Lastest Updates</Header>\r\n                        </Grid.Column>\r\n                        {this.props.data.data.length !== 0 ?\r\n                            this.props.data.data.map(mangalist => (\r\n                                <Grid.Column mobile={8} tablet={3} computer={3}>\r\n                                    <Grid verticalAlign='top'>\r\n                                        <Grid.Column mobile={16} tablet={16} computer={16}>\r\n                                            <Link\r\n                                                as={`/truyen/${mangalist.idnovel}`} href={`/truyen/[id]`}\r\n                                            // href={'/truyen/' + mangalist.idnovel}\r\n                                            >\r\n                                                <Image fluid label={{\r\n                                                    color: 'orange',\r\n                                                    content: `View: ${mangalist.view}`,\r\n                                                    ribbon: true,\r\n                                                }} className='item-img' src={mangalist.cover} style={{ height: 240 }} />\r\n                                            </Link>\r\n\r\n                                        </Grid.Column>\r\n                                        <Grid.Column mobile={16} tablet={16} computer={16} >\r\n                                            <Header className='book-name' as='h4'>{mangalist.novelsname}</Header>\r\n                                            <Header className='book-catalog' size='tiny' as='h6'>Last chapter: {mangalist.lasterchapter}</Header>\r\n                                        </Grid.Column>\r\n                                    </Grid>\r\n                                </Grid.Column>\r\n                            )) : null}\r\n                    </Grid>\r\n                    {/* <div className=\"cotgiua\">\r\n            <div className=\"cotgiua_menu\">\r\n              <Link\r\n                as={`/update/1`}\r\n                href={'/update/[page]'}\r\n              >\r\n                <a title=\"Truyện mới cập nhật\"\r\n                rel=\"nofollow\"\r\n                className=\"head_title actived muc_truyen_moi_cap_nhat\">\r\n                Truyện mới\r\n                </a>\r\n            </Link>\r\n              <Link\r\n                as={`/hot/1`}\r\n                href={'/hot/[page]'}\r\n                \r\n              >\r\n                <a title=\"TOP VIEW NOVEL\"\r\n                rel=\"nofollow\"\r\n                className=\"head_title\">\r\n                Truyện hot\r\n                </a>\r\n            </Link>\r\n            </div>\r\n            <div className=\"wrap_update home\">\r\n              <div className=\"daily-update\">\r\n                <h2 className=\"title update-title\" title=\"Recently Updated MANGA\">\r\n                  Mới cập nhật\r\n              </h2>\r\n              </div>\r\n              {this.props.mangalist.length !== 0 ?\r\n                this.props.mangalist.map(mangalist => (\r\n                  <div className=\"update_item\">\r\n                    <div className=\"update_image\">\r\n                      <Link\r\n                        as={`/truyen/${mangalist.idnovel}`} href={`/truyen/[id]`}\r\n                        // href={'/truyen/' + mangalist.idnovel}\r\n                      ><a className=\"tooltip\">\r\n                        <img\r\n                          src={mangalist.cover}\r\n                          alt={mangalist.novelsname}\r\n                        />\r\n                        </a>\r\n                      </Link>\r\n                    </div>\r\n                    <div className=\"nowrap\">\r\n                      <Link\r\n                        as={`/truyen/${mangalist.idnovel}`} href={`/truyen/[id]`}\r\n                        \r\n                      >\r\n                        <a className=\"tooltip\" title={mangalist.novelsname}>\r\n                        {mangalist.novelsname}\r\n                        </a>\r\n                      </Link>\r\n                    </div>\r\n                    <Link\r\n                      as={`/doc/${mangalist.idnovel}/${mangalist.idchapter}`} href={`/doc/[id]/[chapter]`}\r\n                      \r\n                    >\r\n                      <a title={mangalist.lasterchapter}\r\n                      className=\"chapter\">\r\n                      {mangalist.lasterchapter}\r\n                      </a>\r\n                    </Link>\r\n                    <br />\r\n                    <span style={{ color: '#6f6f6f', fontSize: 13,paddingLeft: 10 }}>View: {mangalist.view}\r\n                    </span>\r\n                    <p>{mangalist.des}</p>\r\n                  </div>\r\n                )) : null}\r\n              <Link as={'/update/1'} href={`/update/[page]`} ><a title=\"More\" className=\"xemthem\" rel=\"nofollow\">Xem thêm</a></Link>\r\n            </div>\r\n          </div>\r\n         */}\r\n                </Container>\r\n\r\n            </Layout>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}