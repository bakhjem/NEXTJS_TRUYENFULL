{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport Layout from '../../components/MyLayout';\nimport 'isomorphic-unfetch';\nimport Link from 'next/link';\nimport { useRouter } from 'next/router';\nimport React, { useEffect } from 'react';\nimport ReactHtmlParser, { processNodes, convertNodeToElement, htmlparser2 } from 'react-html-parser';\nimport { Helmet } from 'react-helmet';\nimport { Container, Divider, Dropdown, Grid, Header, Image, List, Menu, Icon, Segment, Pagination } from 'semantic-ui-react';\nimport { API_URL } from '../../config/config';\n\nfunction Update(props) {\n  _s();\n\n  var router = useRouter();\n\n  var handleChangepage = function handleChangepage(e, data) {\n    console.log(data);\n\n    if (data.activePage !== props.page) {\n      router.push(\"/update/\".concat(data.activePage));\n    }\n  };\n\n  return __jsx(Layout, null, __jsx(\"style\", null, \"\\n      html, body {\\n        background-color: #242933 !important;\\n      }\\n      p {\\n        align-content: center;\\n        background-color: #495285;\\n        color: #fff;\\n        display: flex;\\n        flex-direction: column;\\n        justify-content: center;\\n        min-height: 6em;\\n      }\\n      p > span {\\n        opacity: 0.4;\\n        text-align: center;\\n      }\\n    }\\n    \"), __jsx(Helmet, null, __jsx(\"title\", null, \"KitesNovel - Huge Web Novel Community for Reading\"), __jsx(\"meta\", {\n    name: \"description\",\n    content: \"A Huge Web Novel Community incloud Chinese Novels ( Translated ) , Original Novels, Light Novels and more. You can read all of them Online or Offline. Popular Novel Updates Daily With Fast Translation Speed And High Quality. We provide all genres of  web novel. e.g. love story, historical, romance, fantasy, wuxia, xianxia, light novel and another novels\"\n  }), __jsx(\"meta\", {\n    name: \"theme-color\",\n    content: \"#008f68\"\n  }), __jsx(\"meta\", {\n    name: \"keywords\",\n    content: \"Chinese novel,novel updates,web novel,novel online,read novels online,light novel,novel translation,wuxia\"\n  })), __jsx(Container, {\n    style: {\n      marginTop: '7em'\n    }\n  }, __jsx(Grid, null, __jsx(Grid.Column, {\n    mobile: 16,\n    tablet: 16,\n    computer: 16\n  }, __jsx(Header, {\n    className: \"title-name\",\n    as: \"h2\"\n  }, \"M\\u1EDBi c\\u1EADp nh\\u1EADt\")), props.data.data.length !== 0 ? props.data.data.map(function (mangalist) {\n    return __jsx(Grid.Column, {\n      mobile: 16,\n      tablet: 116,\n      computer: 16\n    }, __jsx(Grid, null, __jsx(Grid.Column, {\n      width: 4\n    }, __jsx(Image, {\n      fluid: true,\n      className: \"item-img\",\n      src: mangalist.cover,\n      style: {\n        height: 82\n      }\n    })), __jsx(Grid.Column, {\n      width: 9\n    }, __jsx(Grid.Row, null, __jsx(Grid.Column, {\n      width: 8\n    }, __jsx(Link, {\n      as: \"/novel/\".concat(mangalist.idnovel),\n      href: \"/novel/[id]\"\n    }, __jsx(Header, {\n      className: \"book-name\",\n      as: \"h4\"\n    }, __jsx(Icon, {\n      color: \"white\",\n      name: \"book\"\n    }), \" \", mangalist.novelsname))), __jsx(Grid.Column, {\n      width: 16,\n      style: {\n        marginTop: 15\n      }\n    }, __jsx(Header, {\n      className: \"book-catalog\",\n      size: \"tiny\",\n      as: \"h6\"\n    }, __jsx(Icon, {\n      color: \"white\",\n      name: \"pencil\"\n    }), \" Ch\\u01B0\\u01A1ng m\\u1EDBi: \", mangalist.author)))), __jsx(Grid.Column, {\n      width: 3\n    }, __jsx(Header, {\n      className: \"book-catalog\",\n      size: \"tiny\",\n      as: \"h6\"\n    }, \"Ch\\u01B0\\u01A1ng m\\u1EDBi: \", mangalist.lasterchapter))));\n  }) : null, __jsx(Grid.Column, {\n    mobile: 16,\n    tablet: 16,\n    computer: 16\n  }, __jsx(Pagination, {\n    onPageChange: function onPageChange(e, data) {\n      return handleChangepage(e, data);\n    },\n    defaultActivePage: props.page,\n    totalPages: props.data.totalpage\n  })))));\n}\n\n_s(Update, \"fN7XvhJ+p5oE6+Xlo0NJmXpxjC8=\", false, function () {\n  return [useRouter];\n});\n\n_c = Update;\n\nUpdate.getInitialProps = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(context) {\n    var page, res, json;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            // eslint-disable-next-line no-undef\n            page = context.query.page;\n            _context.next = 3;\n            return fetch(\"\".concat(API_URL, \"update?page=\").concat(page));\n\n          case 3:\n            res = _context.sent;\n            _context.next = 6;\n            return res.json();\n\n          case 6:\n            json = _context.sent;\n            return _context.abrupt(\"return\", {\n              data: json,\n              page: page\n            });\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexport default Update;\n\nvar _c;\n\n$RefreshReg$(_c, \"Update\");","map":{"version":3,"sources":["C:/Users/bakhjem/Desktop/nhattin/nextjstruyen - Copy/pages/update/[page].js"],"names":["Layout","Link","useRouter","React","useEffect","ReactHtmlParser","processNodes","convertNodeToElement","htmlparser2","Helmet","Container","Divider","Dropdown","Grid","Header","Image","List","Menu","Icon","Segment","Pagination","API_URL","Update","props","router","handleChangepage","e","data","console","log","activePage","page","push","marginTop","length","map","mangalist","cover","height","idnovel","novelsname","author","lasterchapter","totalpage","getInitialProps","context","query","fetch","res","json"],"mappings":"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","sourcesContent":["import Layout from '../../components/MyLayout'\r\nimport 'isomorphic-unfetch'\r\nimport Link from 'next/link';\r\nimport { useRouter } from 'next/router'\r\nimport React, { useEffect } from 'react'\r\nimport ReactHtmlParser, { processNodes, convertNodeToElement, htmlparser2 } from 'react-html-parser';\r\nimport { Helmet } from 'react-helmet';\r\nimport {\r\n    Container,\r\n    Divider,\r\n    Dropdown,\r\n    Grid,\r\n    Header,\r\n    Image,\r\n    List,\r\n    Menu,\r\n    Icon,\r\n    Segment,\r\n    Pagination\r\n} from 'semantic-ui-react';\r\nimport { API_URL } from '../../config/config'\r\n\r\nfunction Update(props) {\r\n    const router = useRouter()\r\n    const handleChangepage = (e, data) => {\r\n        console.log(data)\r\n        if (data.activePage !== props.page) {\r\n            router.push(`/update/${data.activePage}`)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Layout>\r\n            <style>\r\n                {`\r\n      html, body {\r\n        background-color: #242933 !important;\r\n      }\r\n      p {\r\n        align-content: center;\r\n        background-color: #495285;\r\n        color: #fff;\r\n        display: flex;\r\n        flex-direction: column;\r\n        justify-content: center;\r\n        min-height: 6em;\r\n      }\r\n      p > span {\r\n        opacity: 0.4;\r\n        text-align: center;\r\n      }\r\n    }\r\n    `}\r\n            </style>\r\n            <Helmet>\r\n                <title>KitesNovel - Huge Web Novel Community for Reading</title>\r\n                <meta name=\"description\" content=\"A Huge Web Novel Community incloud Chinese Novels ( Translated ) , Original Novels, Light Novels and more. You can read all of them Online or Offline. Popular Novel Updates Daily With Fast Translation Speed And High Quality. We provide all genres of  web novel. e.g. love story, historical, romance, fantasy, wuxia, xianxia, light novel and another novels\" />\r\n                <meta name=\"theme-color\" content=\"#008f68\" />\r\n                <meta name=\"keywords\" content=\"Chinese novel,novel updates,web novel,novel online,read novels online,light novel,novel translation,wuxia\" />\r\n            </Helmet>\r\n            <Container style={{ marginTop: '7em' }}>\r\n                <Grid>\r\n                    <Grid.Column mobile={16} tablet={16} computer={16}>\r\n                        <Header className='title-name' as='h2'>Mới cập nhật</Header>\r\n                    </Grid.Column>\r\n                    {props.data.data.length !== 0 ?\r\n                        props.data.data.map(mangalist => (\r\n                            <Grid.Column mobile={16} tablet={116} computer={16}>\r\n                                <Grid>\r\n                                    <Grid.Column width={4}>\r\n                                        <Image fluid className='item-img' src={mangalist.cover} style={{ height: 82 }} />\r\n                                    </Grid.Column>\r\n                                    <Grid.Column width={9}>\r\n                                        <Grid.Row>\r\n                                            <Grid.Column width={8}>\r\n                                                <Link\r\n                                                    as={`/novel/${mangalist.idnovel}`} href={`/novel/[id]`}\r\n                                                >\r\n                                                    <Header className='book-name' as='h4'><Icon color='white' name='book' /> {mangalist.novelsname}</Header>\r\n                                                </Link>\r\n                                            </Grid.Column>\r\n                                            <Grid.Column width={16} style={{ marginTop: 15 }}>\r\n                                                <Header className='book-catalog' size='tiny' as='h6'><Icon color='white' name='pencil' /> Chương mới: {mangalist.author}</Header>\r\n                                            </Grid.Column>\r\n                                        </Grid.Row>\r\n                                    </Grid.Column>\r\n                                    <Grid.Column width={3}>\r\n                                        <Header className='book-catalog' size='tiny' as='h6'>Chương mới: {mangalist.lasterchapter}</Header>\r\n                                    </Grid.Column>\r\n                                </Grid>\r\n                            </Grid.Column>\r\n                        )) : null}\r\n                    <Grid.Column mobile={16} tablet={16} computer={16}>\r\n                        <Pagination onPageChange={(e, data) => handleChangepage(e, data)} defaultActivePage={props.page} totalPages={props.data.totalpage} />\r\n                    </Grid.Column>\r\n                </Grid>\r\n\r\n            </Container>\r\n\r\n        </Layout>\r\n    )\r\n\r\n}\r\nUpdate.getInitialProps = async (context) => {\r\n    // eslint-disable-next-line no-undef\r\n    const { page } = context.query\r\n    const res = await fetch(`${API_URL}update?page=${page}`)\r\n    const json = await res.json()\r\n    // console.log(json)\r\n    return { data: json, page: page }\r\n}\r\nexport default Update"]},"metadata":{},"sourceType":"module"}