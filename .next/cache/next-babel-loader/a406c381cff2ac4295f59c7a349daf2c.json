{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Document, { Head, Main, NextScript } from 'next/document'; // import classes from '../Css/style.css';\n\nimport { GA_TRACKING_ID } from '../lib/gtag';\nimport Helmet from 'react-helmet';\nexport default class MyDocument extends Document {\n  //  static async getInitialProps(ctx) {\n  //    const initialProps = await Document.getInitialProps(ctx)\n  //    return { ...initialProps }\n  //  }\n  static async getInitialProps(...args) {\n    const documentProps = await super.getInitialProps(...args); // see https://github.com/nfl/react-helmet#server-usage for more information\n    // 'head' was occupied by 'renderPage().head', we cannot use it\n\n    return _objectSpread(_objectSpread({}, documentProps), {}, {\n      helmet: Helmet.renderStatic()\n    });\n  } // should render on <html>\n\n\n  get helmetHtmlAttrComponents() {\n    return this.props.helmet.htmlAttributes.toComponent();\n  } // should render on <body>\n\n\n  get helmetBodyAttrComponents() {\n    return this.props.helmet.bodyAttributes.toComponent();\n  } // should render on <head>\n\n\n  get helmetHeadComponents() {\n    return Object.keys(this.props.helmet).filter(el => el !== 'htmlAttributes' && el !== 'bodyAttributes').map(el => this.props.helmet[el].toComponent());\n  }\n\n  render() {\n    return __jsx(\"html\", _extends({\n      lang: \"en\"\n    }, this.helmetHtmlAttrComponents), __jsx(Head, null, __jsx(\"link\", {\n      rel: \"stylesheet\",\n      href: \"https://cdnjs.cloudflare.com/ajax/libs/semantic-ui/2.4.1/semantic.min.css\"\n    }), __jsx(\"script\", {\n      async: true,\n      src: `https://www.googletagmanager.com/gtag/js?id=${GA_TRACKING_ID}`\n    }), __jsx(\"script\", {\n      dangerouslySetInnerHTML: {\n        __html: `\n            window.dataLayer = window.dataLayer || [];\n            function gtag(){dataLayer.push(arguments);}\n            gtag('js', new Date());\n            gtag('config', '${GA_TRACKING_ID}');\n          `\n      }\n    }), this.helmetHeadComponents), __jsx(\"body\", this.helmetBodyAttrComponents, __jsx(Main, null), __jsx(NextScript, null)));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/bakhjem/Desktop/nhattin/nextjstruyen/pages/_document.js"],"names":["Document","Head","Main","NextScript","GA_TRACKING_ID","Helmet","MyDocument","getInitialProps","args","documentProps","helmet","renderStatic","helmetHtmlAttrComponents","props","htmlAttributes","toComponent","helmetBodyAttrComponents","bodyAttributes","helmetHeadComponents","Object","keys","filter","el","map","render","__html"],"mappings":";;;;;;;;;;;AAAA,OAAOA,QAAP,IAAmBC,IAAnB,EAAyBC,IAAzB,EAA+BC,UAA/B,QAAiD,eAAjD,C,CACA;;AACA,SAASC,cAAT,QAA+B,aAA/B;AACA,OAAOC,MAAP,MAAmB,cAAnB;AAGA,eAAe,MAAMC,UAAN,SAAyBN,QAAzB,CAAkC;AACjD;AACA;AACA;AACA;AACC,eAAaO,eAAb,CAA8B,GAAGC,IAAjC,EAAuC;AACpC,UAAMC,aAAa,GAAG,MAAM,MAAMF,eAAN,CAAsB,GAAGC,IAAzB,CAA5B,CADoC,CAEpC;AACA;;AACA,2CAAYC,aAAZ;AAA2BC,MAAAA,MAAM,EAAEL,MAAM,CAACM,YAAP;AAAnC;AACD,GAV8C,CAY/C;;;AACA,MAAIC,wBAAJ,GAAgC;AAC9B,WAAO,KAAKC,KAAL,CAAWH,MAAX,CAAkBI,cAAlB,CAAiCC,WAAjC,EAAP;AACD,GAf8C,CAiB/C;;;AACA,MAAIC,wBAAJ,GAAgC;AAC9B,WAAO,KAAKH,KAAL,CAAWH,MAAX,CAAkBO,cAAlB,CAAiCF,WAAjC,EAAP;AACD,GApB8C,CAsB/C;;;AACA,MAAIG,oBAAJ,GAA4B;AAC1B,WAAOC,MAAM,CAACC,IAAP,CAAY,KAAKP,KAAL,CAAWH,MAAvB,EACJW,MADI,CACGC,EAAE,IAAIA,EAAE,KAAK,gBAAP,IAA2BA,EAAE,KAAK,gBAD3C,EAEJC,GAFI,CAEAD,EAAE,IAAI,KAAKT,KAAL,CAAWH,MAAX,CAAkBY,EAAlB,EAAsBP,WAAtB,EAFN,CAAP;AAGH;;AAEAS,EAAAA,MAAM,GAAG;AACP,WACE;AAAM,MAAA,IAAI,EAAC;AAAX,OAAoB,KAAKZ,wBAAzB,GACE,MAAC,IAAD,QACA;AAAM,MAAA,GAAG,EAAC,YAAV;AAAuB,MAAA,IAAI,EAAC;AAA5B,MADA,EAEI;AACC,MAAA,KAAK,MADN;AAEC,MAAA,GAAG,EAAG,+CAA8CR,cAAe;AAFpE,MAFJ,EAMG;AACE,MAAA,uBAAuB,EAAE;AACvBqB,QAAAA,MAAM,EAAG;AACvB;AACA;AACA;AACA,8BAA8BrB,cAAe;AAC7C;AANqC;AAD3B,MANH,EAgBE,KAAKc,oBAhBP,CADF,EAmBE,cAAU,KAAKF,wBAAf,EACE,MAAC,IAAD,OADF,EAEE,MAAC,UAAD,OAFF,CAnBF,CADF;AA0BD;;AAxD+C","sourcesContent":["import Document, { Head, Main, NextScript } from 'next/document'\r\n// import classes from '../Css/style.css';\r\nimport { GA_TRACKING_ID } from '../lib/gtag';\r\nimport Helmet from 'react-helmet'\r\n\r\n\r\nexport default class MyDocument extends Document {\r\n//  static async getInitialProps(ctx) {\r\n//    const initialProps = await Document.getInitialProps(ctx)\r\n//    return { ...initialProps }\r\n//  }\r\n static async getInitialProps (...args) {\r\n    const documentProps = await super.getInitialProps(...args)\r\n    // see https://github.com/nfl/react-helmet#server-usage for more information\r\n    // 'head' was occupied by 'renderPage().head', we cannot use it\r\n    return { ...documentProps, helmet: Helmet.renderStatic() }\r\n  }\r\n\r\n  // should render on <html>\r\n  get helmetHtmlAttrComponents () {\r\n    return this.props.helmet.htmlAttributes.toComponent()\r\n  }\r\n\r\n  // should render on <body>\r\n  get helmetBodyAttrComponents () {\r\n    return this.props.helmet.bodyAttributes.toComponent()\r\n  }\r\n\r\n  // should render on <head>\r\n  get helmetHeadComponents () {\r\n    return Object.keys(this.props.helmet)\r\n      .filter(el => el !== 'htmlAttributes' && el !== 'bodyAttributes')\r\n      .map(el => this.props.helmet[el].toComponent())\r\n}\r\n\r\n render() {\r\n   return (\r\n     <html lang=\"en\" {...this.helmetHtmlAttrComponents}>\r\n       <Head>\r\n       <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/semantic-ui/2.4.1/semantic.min.css\" />\r\n           <script\r\n            async\r\n            src={`https://www.googletagmanager.com/gtag/js?id=${GA_TRACKING_ID}`}\r\n          />\r\n          <script\r\n            dangerouslySetInnerHTML={{\r\n              __html: `\r\n            window.dataLayer = window.dataLayer || [];\r\n            function gtag(){dataLayer.push(arguments);}\r\n            gtag('js', new Date());\r\n            gtag('config', '${GA_TRACKING_ID}');\r\n          `\r\n            }}\r\n        />\r\n        {this.helmetHeadComponents}\r\n       </Head>\r\n       <body {...this.helmetBodyAttrComponents}>\r\n         <Main />\r\n         <NextScript />\r\n       </body>\r\n     </html>\r\n   )\r\n }\r\n}"]},"metadata":{},"sourceType":"module"}