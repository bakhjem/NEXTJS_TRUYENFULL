{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport App from 'next/app';\nimport Router from 'next/router';\nimport { Provider } from 'react-redux';\nimport NProgress from 'nprogress';\nimport 'semantic-ui-css/semantic.min.css';\nimport * as gtag from '../lib/gtag';\nimport { store } from '../redux/store';\nimport \"nprogress/nprogress.css\";\nRouter.events.on('routeChangeStart', url => {\n  console.log(`Loading: ${url}`);\n  NProgress.start();\n});\nRouter.events.on('routeChangeComplete', () => NProgress.done());\nRouter.events.on('routeChangeError', () => NProgress.done());\nRouter.events.on('routeChangeComplete', url => gtag.pageview(url));\n\nclass MyApp extends App {\n  componentDidMount() {\n    Router.events.on('routeChangeComplete', () => {\n      window.scroll({\n        top: 0,\n        left: 0,\n        behavior: 'smooth'\n      });\n    });\n  } // static async getInitialProps({ Component, ctx }) {\n  //     const pageProps = Component.getInitialProps ? await Component.getInitialProps(ctx) : {};\n  //     //Anything returned here can be accessed by the client\n  //     return { pageProps: pageProps };\n  // }\n\n\n  render() {\n    //pageProps that were returned  from 'getInitialProps' are stored in the props i.e. pageprops\n    const {\n      Component,\n      pageProps\n    } = this.props;\n    return __jsx(Provider, {\n      store: store\n    }, __jsx(Component, pageProps));\n  }\n\n} //withRedux wrapper that passes the store to the App Component\n\n\nexport default MyApp; // export default App","map":{"version":3,"sources":["/Users/admin/Desktop/NEXTJS/NEXTJS_NOVEL/pages/_app.js"],"names":["App","Router","Provider","NProgress","gtag","store","events","on","url","console","log","start","done","pageview","MyApp","componentDidMount","window","scroll","top","left","behavior","render","Component","pageProps","props"],"mappings":";;AAAA,OAAOA,GAAP,MAAgB,UAAhB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,SAAP,MAAsB,WAAtB;AACA,OAAO,kCAAP;AACA,OAAO,KAAKC,IAAZ,MAAsB,aAAtB;AACA,SAASC,KAAT,QAAuB,gBAAvB;AACA,OAAO,yBAAP;AAEAJ,MAAM,CAACK,MAAP,CAAcC,EAAd,CAAiB,kBAAjB,EAAqCC,GAAG,IAAI;AACxCC,EAAAA,OAAO,CAACC,GAAR,CAAa,YAAWF,GAAI,EAA5B;AACAL,EAAAA,SAAS,CAACQ,KAAV;AACH,CAHD;AAIAV,MAAM,CAACK,MAAP,CAAcC,EAAd,CAAiB,qBAAjB,EAAwC,MAAMJ,SAAS,CAACS,IAAV,EAA9C;AACAX,MAAM,CAACK,MAAP,CAAcC,EAAd,CAAiB,kBAAjB,EAAqC,MAAMJ,SAAS,CAACS,IAAV,EAA3C;AACAX,MAAM,CAACK,MAAP,CAAcC,EAAd,CAAiB,qBAAjB,EAAwCC,GAAG,IAAIJ,IAAI,CAACS,QAAL,CAAcL,GAAd,CAA/C;;AAEA,MAAMM,KAAN,SAAoBd,GAApB,CAAwB;AACpBe,EAAAA,iBAAiB,GAAG;AAChBd,IAAAA,MAAM,CAACK,MAAP,CAAcC,EAAd,CAAiB,qBAAjB,EAAwC,MAAM;AAC5CS,MAAAA,MAAM,CAACC,MAAP,CAAc;AACZC,QAAAA,GAAG,EAAE,CADO;AAEZC,QAAAA,IAAI,EAAE,CAFM;AAGZC,QAAAA,QAAQ,EAAE;AAHE,OAAd;AAKD,KAND;AAOD,GATiB,CAUpB;AACA;AAEA;AACA;AACA;;;AACAC,EAAAA,MAAM,GAAG;AACL;AACA,UAAM;AAAEC,MAAAA,SAAF;AAAaC,MAAAA;AAAb,QAA4B,KAAKC,KAAvC;AAEA,WACI,MAAC,QAAD;AAAU,MAAA,KAAK,EAAEnB;AAAjB,OACI,MAAC,SAAD,EAAekB,SAAf,CADJ,CADJ;AAKH;;AAzBmB,C,CA6BxB;;;AACA,eAAgBT,KAAhB,C,CACA","sourcesContent":["import App from 'next/app'\nimport Router from 'next/router'\nimport { Provider } from 'react-redux';\nimport NProgress from 'nprogress'\nimport 'semantic-ui-css/semantic.min.css'\nimport * as gtag from '../lib/gtag'\nimport { store }  from '../redux/store';\nimport \"nprogress/nprogress.css\";\n\nRouter.events.on('routeChangeStart', url => {\n    console.log(`Loading: ${url}`)\n    NProgress.start()\n})\nRouter.events.on('routeChangeComplete', () => NProgress.done())\nRouter.events.on('routeChangeError', () => NProgress.done())\nRouter.events.on('routeChangeComplete', url => gtag.pageview(url))\n\nclass MyApp extends App {\n    componentDidMount() {\n        Router.events.on('routeChangeComplete', () => {\n          window.scroll({\n            top: 0,\n            left: 0,\n            behavior: 'smooth'\n          });\n        });\n      }\n    // static async getInitialProps({ Component, ctx }) {\n    //     const pageProps = Component.getInitialProps ? await Component.getInitialProps(ctx) : {};\n\n    //     //Anything returned here can be accessed by the client\n    //     return { pageProps: pageProps };\n    // }\n    render() {\n        //pageProps that were returned  from 'getInitialProps' are stored in the props i.e. pageprops\n        const { Component, pageProps, } = this.props;\n\n        return (\n            <Provider store={store}>\n                <Component {...pageProps} />\n            </Provider>\n        );\n    }\n\n}\n\n//withRedux wrapper that passes the store to the App Component\nexport default (MyApp);\n// export default App"]},"metadata":{},"sourceType":"module"}