{"ast":null,"code":"var __jsx = React.createElement;\nimport 'isomorphic-unfetch';\nimport Link from 'next/link';\nimport React from 'react';\nimport ReactHtmlParser, { processNodes, convertNodeToElement, htmlparser2 } from 'react-html-parser';\nimport { Helmet } from 'react-helmet';\nimport Layout from '../../components/MyLayout';\nimport { useRouter } from 'next/router';\nimport { Button, Container, Divider, Grid, Header, Icon, Image, List, Menu, Segment, Sidebar, Visibility, Item, Label, Tab } from 'semantic-ui-react';\nexport default class Truyen extends React.Component {\n  static async getInitialProps({\n    query: {\n      id\n    }\n  }) {\n    // eslint-disable-next-line no-undef\n    // const { id } = context.query\n    // const router = useRouter()\n    // const { id } = router.query\n    const res = await fetch(`http://localhost:8001/novel?id=${id}`);\n    const json = await res.json(); // console.log(json)\n\n    return {\n      data: json\n    };\n  }\n\n  render() {\n    const panes = [{\n      menuItem: 'Tab 1',\n      render: () => __jsx(Tab.Pane, {\n        attached: false\n      }, \"Tab 1 Content\")\n    }, {\n      menuItem: 'Tab 2',\n      render: () => __jsx(Tab.Pane, {\n        attached: false\n      }, \"Tab 2 Content\")\n    }, {\n      menuItem: 'Tab 3',\n      render: () => __jsx(Tab.Pane, {\n        attached: false\n      }, \"Tab 3 Content\")\n    }];\n    return __jsx(Layout, null, __jsx(\"style\", null, `\n      html, body {\n        background-color: #f2f3f5 !important;\n      }\n    }\n    `), __jsx(Helmet, null, __jsx(\"title\", null, `${this.props.data.novelsname}`, \" - YYtruyen\"), __jsx(\"meta\", {\n      name: \"description\",\n      content: `Truyện ${this.props.data.novelsname} là tác phẩm của tác giả ${this.props.data.author}, tiến trình: ${this.props.data.status}. Vào yytruyen.com để đọc những chương mới nhất của tác phẩm này nhé  `\n    }), __jsx(\"meta\", {\n      name: \"theme-color\",\n      content: \"#008f68\"\n    }), __jsx(\"meta\", {\n      name: \"keywords\",\n      content: \"\\u0111\\u1ECDc truy\\u1EC7n online, truy\\u1EC7n online, truy\\u1EC7n ng\\xF4n t\\xECnh, truy\\u1EC7n ki\\u1EBFm hi\\u1EC7p, truy\\u1EC7n ng\\u01B0\\u1EE3c, s\\u1EE7ng\"\n    }), __jsx(\"meta\", {\n      property: \"og:title\",\n      content: `${this.props.data.novelsname}`\n    }), __jsx(\"meta\", {\n      property: \"og:type\",\n      content: \"book\"\n    }), __jsx(\"meta\", {\n      property: \"og:image\",\n      content: `${this.props.data.cover}`\n    }), __jsx(\"meta\", {\n      property: \"og:description\",\n      content: `${this.props.data.des}`\n    }), __jsx(\"meta\", {\n      property: \"og:site_name\",\n      content: \"Yytruyen.com\"\n    }), __jsx(\"meta\", {\n      property: \"og:url\",\n      content: `http://yytruyen.com/truyen/${this.props.data.idnovels}`\n    }), __jsx(\"meta\", {\n      property: \"book:author\",\n      content: `${this.props.data.author}`\n    }), __jsx(\"meta\", {\n      property: \"og:image:width\",\n      content: \"200\"\n    }), __jsx(\"meta\", {\n      property: \"og:image:height\",\n      content: \"300\"\n    }), __jsx(\"script\", {\n      type: \"application/ld+json\"\n    }, `\n                    {\n                    \"@context\": \"http://schema.org\",\n                    \"url\": \"http://yytruyen.com/truyen/${this.props.data.idnovels}\",\n                    \"image\": \"${this.props.data.cover}\",\n                    \"@type\": \"Book\",\n                    \"name\": \"${this.props.data.novelsname}\",\n                    \"author\": \"${this.props.data.author}\",\n                    \"description\": \"${this.props.data.des}\"\n                    }\n                    `)), __jsx(Segment, {\n      inverted: true,\n      style: {\n        maxHeight: '32.625rem',\n        padding: '1em 0em'\n      },\n      vertical: true\n    }, __jsx(\"div\", {\n      className: \"book-info\"\n    }, __jsx(\"img\", {\n      className: \"glass_background-img\",\n      src: this.props.data.cover\n    }), __jsx(Container, {\n      style: {}\n    }, __jsx(Grid, null, __jsx(Grid.Column, {\n      mobile: 16,\n      tablet: 4,\n      computer: 4\n    }, __jsx(Image, {\n      fluid: true,\n      className: \"item-img\",\n      src: this.props.data.cover,\n      style: {\n        height: '22.75rem'\n      }\n    })), __jsx(Grid.Column, {\n      mobile: 16,\n      tablet: 12,\n      computer: 12\n    }, __jsx(Item.Group, {\n      textAlign: \"left\"\n    }, __jsx(Item.Content, null, __jsx(Item.Header, {\n      className: \"book-title\",\n      as: \"h2\"\n    }, this.props.data.novelsname)), __jsx(Item.Extra, {\n      textAlign: \"left\",\n      style: {\n        marginTop: 10\n      }\n    }, __jsx(\"span\", {\n      className: \"label\"\n    }, \"Author:\"), \" \", this.props.data.author), __jsx(Item.Extra, {\n      textAlign: \"left\",\n      style: {\n        marginTop: 10\n      }\n    }, \"Genres: \", this.props.data.genresdata.map(genresdata => __jsx(Link, {\n      as: `/theloai/${genresdata.idgenres}/1`,\n      href: `/theloai/[id]/[page]`\n    }, __jsx(Label, {\n      as: \"a\",\n      color: \"yellow\"\n    }, __jsx(Label.Detail, null, genresdata.genrename))))), __jsx(Item.Extra, {\n      textAlign: \"left\",\n      style: {\n        marginTop: 10\n      }\n    }, __jsx(\"span\", {\n      className: \"label\"\n    }, \"Status:\"), \" \", this.props.data.status)), __jsx(Button, {\n      size: \"huge\",\n      color: \"yellow\"\n    }, \"READ\")))))), __jsx(Container, null, __jsx(Grid, null, __jsx(Grid.Column, {\n      className: \"detail-container\",\n      mobile: 16,\n      tablet: 16,\n      computer: 16\n    }, __jsx(Header, {\n      className: \"title-name-bottom\",\n      as: \"h2\"\n    }, \"Synopsis\"), __jsx(Item.Group, {\n      textAlign: \"left\"\n    }, __jsx(Item.Description, {\n      className: \"content\"\n    }, ReactHtmlParser(this.props.data.description))), __jsx(Divider, {\n      horizontal: true\n    }, __jsx(Header, {\n      className: \"title-name-bottom\",\n      as: \"h2\"\n    }, \"Chapter\")), __jsx(Grid, null, this.props.data.chapterlist.map((datachapter, key) => __jsx(Grid.Column, {\n      mobile: 16,\n      tablet: 8,\n      computer: 8\n    }, __jsx(Link, {\n      as: `/doc/${this.props.data.idnovels}/${datachapter.idchapter}`,\n      href: `/doc/[id]/[chapter]`\n    }, __jsx(Header, {\n      className: \"chapter\",\n      as: \"a\"\n    }, datachapter.chaptername)), __jsx(Divider, {\n      inverted: true\n    }))))))));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/bakhjem/Desktop/nhattin/nextjstruyen/pages/truyen/[id].js"],"names":["Link","React","ReactHtmlParser","processNodes","convertNodeToElement","htmlparser2","Helmet","Layout","useRouter","Button","Container","Divider","Grid","Header","Icon","Image","List","Menu","Segment","Sidebar","Visibility","Item","Label","Tab","Truyen","Component","getInitialProps","query","id","res","fetch","json","data","render","panes","menuItem","props","novelsname","author","status","cover","des","idnovels","maxHeight","padding","height","marginTop","genresdata","map","idgenres","genrename","description","chapterlist","datachapter","key","idchapter","chaptername"],"mappings":"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","sourcesContent":["import 'isomorphic-unfetch'\r\nimport Link from 'next/link'\r\nimport React from 'react'\r\nimport ReactHtmlParser, { processNodes, convertNodeToElement, htmlparser2 } from 'react-html-parser';\r\nimport { Helmet } from 'react-helmet';\r\nimport Layout from '../../components/MyLayout'\r\nimport { useRouter } from 'next/router'\r\nimport {\r\n    Button,\r\n    Container,\r\n    Divider,\r\n    Grid,\r\n    Header,\r\n    Icon,\r\n    Image,\r\n    List,\r\n    Menu,\r\n    Segment,\r\n    Sidebar,\r\n    Visibility,\r\n    Item,\r\n    Label,\r\n    Tab\r\n} from 'semantic-ui-react';\r\nexport default class Truyen extends React.Component {\r\n    static async getInitialProps({ query: { id } }) {\r\n        // eslint-disable-next-line no-undef\r\n        // const { id } = context.query\r\n        // const router = useRouter()\r\n        // const { id } = router.query\r\n        const res = await fetch(`http://localhost:8001/novel?id=${id}`)\r\n        const json = await res.json()\r\n        // console.log(json)\r\n        return { data: json }\r\n    }\r\n\r\n\r\n    render() {\r\n        const panes = [\r\n            {\r\n                menuItem: 'Tab 1',\r\n                render: () => <Tab.Pane attached={false}>Tab 1 Content</Tab.Pane>,\r\n            },\r\n            {\r\n                menuItem: 'Tab 2',\r\n                render: () => <Tab.Pane attached={false}>Tab 2 Content</Tab.Pane>,\r\n            },\r\n            {\r\n                menuItem: 'Tab 3',\r\n                render: () => <Tab.Pane attached={false}>Tab 3 Content</Tab.Pane>,\r\n            },\r\n        ]\r\n        return (\r\n            <Layout>\r\n                <style>\r\n                    {`\r\n      html, body {\r\n        background-color: #f2f3f5 !important;\r\n      }\r\n    }\r\n    `}\r\n                </style>\r\n                <Helmet>\r\n                    <title>{`${this.props.data.novelsname}`} - YYtruyen</title>\r\n                    <meta name=\"description\" content={`Truyện ${this.props.data.novelsname} là tác phẩm của tác giả ${this.props.data.author}, tiến trình: ${this.props.data.status}. Vào yytruyen.com để đọc những chương mới nhất của tác phẩm này nhé  `} />\r\n                    <meta name=\"theme-color\" content=\"#008f68\" />\r\n                    <meta name=\"keywords\" content=\"đọc truyện online, truyện online, truyện ngôn tình, truyện kiếm hiệp, truyện ngược, sủng\" />\r\n                    <meta property=\"og:title\" content={`${this.props.data.novelsname}`} />\r\n                    <meta property=\"og:type\" content=\"book\" />\r\n                    <meta property=\"og:image\" content={`${this.props.data.cover}`} />\r\n                    <meta property=\"og:description\" content={`${this.props.data.des}`} />\r\n                    <meta property=\"og:site_name\" content=\"Yytruyen.com\" />\r\n                    <meta property=\"og:url\" content={`http://yytruyen.com/truyen/${this.props.data.idnovels}`} />\r\n                    <meta property=\"book:author\" content={`${this.props.data.author}`} />\r\n                    <meta property=\"og:image:width\" content=\"200\" />\r\n                    <meta property=\"og:image:height\" content=\"300\" />\r\n\r\n                    <script type=\"application/ld+json\">{`\r\n                    {\r\n                    \"@context\": \"http://schema.org\",\r\n                    \"url\": \"http://yytruyen.com/truyen/${this.props.data.idnovels}\",\r\n                    \"image\": \"${this.props.data.cover}\",\r\n                    \"@type\": \"Book\",\r\n                    \"name\": \"${this.props.data.novelsname}\",\r\n                    \"author\": \"${this.props.data.author}\",\r\n                    \"description\": \"${this.props.data.des}\"\r\n                    }\r\n                    `}</script>\r\n                </Helmet>\r\n                <Segment\r\n                    inverted\r\n                    style={{ maxHeight: '32.625rem', padding: '1em 0em' }}\r\n                    vertical\r\n                >\r\n                    <div className='book-info'>\r\n                        <img className='glass_background-img' src={this.props.data.cover} />\r\n                        <Container style={{}}>\r\n                            <Grid>\r\n                                <Grid.Column mobile={16} tablet={4} computer={4}>\r\n                                    <Image fluid className='item-img' src={this.props.data.cover} style={{ height: '22.75rem' }} />\r\n                                </Grid.Column>\r\n                                <Grid.Column mobile={16} tablet={12} computer={12}>\r\n                                    <Item.Group textAlign='left'>\r\n                                        <Item.Content>\r\n                                            <Item.Header className='book-title' as='h2'>{this.props.data.novelsname}</Item.Header>\r\n                                        </Item.Content>\r\n                                        <Item.Extra textAlign='left' style={{ marginTop: 10 }}>\r\n                                            <span className='label'>Author:</span> {this.props.data.author}\r\n                                        </Item.Extra>\r\n                                        <Item.Extra textAlign='left' style={{ marginTop: 10 }}>\r\n                                            Genres: {this.props.data.genresdata.map(genresdata => (\r\n                                            <Link as={`/theloai/${genresdata.idgenres}/1`} href={`/theloai/[id]/[page]`}>\r\n                                                <Label as='a' color='yellow'>\r\n                                                    <Label.Detail>{genresdata.genrename}</Label.Detail>\r\n                                                </Label>\r\n\r\n                                            </Link>\r\n                                        ))}\r\n                                        </Item.Extra>\r\n                                        <Item.Extra textAlign='left' style={{ marginTop: 10 }}>\r\n                                            <span className='label'>Status:</span> {this.props.data.status}\r\n                                        </Item.Extra>\r\n                                    </Item.Group>\r\n                                    <Button size='huge' color='yellow'>READ</Button>\r\n                                </Grid.Column>\r\n                            </Grid>\r\n                        </Container>\r\n                    </div>\r\n                </Segment>\r\n                <Container>\r\n                    <Grid>\r\n                        <Grid.Column className='detail-container' mobile={16} tablet={16} computer={16}>\r\n                            <Header className='title-name-bottom' as='h2'>Synopsis</Header>\r\n                            <Item.Group textAlign='left'>\r\n                                <Item.Description className='content'>\r\n                                    {ReactHtmlParser(this.props.data.description)}\r\n                                </Item.Description>\r\n                            </Item.Group>\r\n                            <Divider horizontal>\r\n                            <Header className='title-name-bottom' as='h2'>Chapter</Header>\r\n                            </Divider>\r\n                            \r\n                            <Grid>\r\n                                {this.props.data.chapterlist.map((datachapter,key) => (\r\n                                    <Grid.Column mobile={16} tablet={8} computer={8}>\r\n                                        <Link\r\n                                            as={`/doc/${this.props.data.idnovels}/${datachapter.idchapter}`}\r\n                                            href={`/doc/[id]/[chapter]`}>\r\n                                            <Header className='chapter' as='a'>{datachapter.chaptername}</Header>\r\n                                        </Link>\r\n                                        <Divider inverted></Divider>\r\n                                    </Grid.Column>\r\n\r\n                                ))}\r\n                            </Grid>\r\n                        </Grid.Column>\r\n                    </Grid>\r\n                </Container>\r\n\r\n                {/* <div id=\"main_body\">\r\n                    <div className=\"cotgiua\">\r\n                        <div className=\"hfeed truyen_info_wrapper\">\r\n                            <div className=\"breadcrumb breadcrumbs\">\r\n                                <div className=\"rdfa-breadcrumb\">\r\n                                    <div>\r\n                                        <p>\r\n                                            <span className=\"breadcrumbs-title\" />\r\n                                            <span\r\n                                                itemScope\r\n                                                itemType=\"http://data-vocabulary.org/Breadcrumb\"\r\n                                            >\r\n                                                <Link\r\n                                                    href=\"/\"\r\n                                                >\r\n                                                    <a itemProp=\"url\" className=\"home\"\r\n                                                        title=\"Đọc truyện online\">\r\n                                                        <span itemProp=\"title\">Đọc truyện online</span>\r\n                                                    </a>\r\n                                                </Link>\r\n                                            </span>\r\n                                            <span className=\"separator\">»</span>\r\n                                            <span\r\n                                                itemScope\r\n                                                itemType=\"http://data-vocabulary.org/Breadcrumb\"\r\n                                            >\r\n                                                <Link\r\n                                                    as={`/truyen/${this.props.data.idnovels}`}\r\n                                                    href={`/truyen?id=${this.props.data.idnovels}`}\r\n\r\n                                                >\r\n                                                    <a itemProp=\"url\" title={this.props.data.novelsname}>\r\n                                                        <span itemProp=\"title\">\r\n                                                            {this.props.data.novelsname}\r\n                                                        </span>\r\n                                                    </a>\r\n                                                </Link>\r\n                                            </span>\r\n                                        </p>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            {this.props.data.chapterlist.length !== 0 ?\r\n                                <div className=\"hentry truyen_info\">\r\n                                    <div className=\"entry-header\">\r\n                                        <div className=\"truyen_if_wrap\">\r\n                                            <div className=\"truyen_info_left\">\r\n                                                <span\r\n                                                    className=\"info_image\"\r\n                                                    style={{\r\n                                                        background: `url(${\r\n                                                            this.props.data.cover\r\n                                                            })  center center no-repeat`,\r\n                                                        backgroundSize: \"contain\"\r\n                                                    }}\r\n                                                    title={this.props.data.novelsname}\r\n                                                >\r\n                                                    <img\r\n                                                        width={173}\r\n                                                        height={250}\r\n                                                        src={this.props.data.cover}\r\n                                                        className=\"attachment-large size-large wp-post-image\"\r\n                                                        alt={this.props.data.novelsname}\r\n                                                        title={this.props.data.novelsname}\r\n                                                        style={{ opacity: 0 }}\r\n                                                    />\r\n                                                </span>\r\n                                            </div>\r\n                                            <ul className=\"truyen_info_right\">\r\n                                                <h1 className=\"entry-title\">\r\n                                                    <span>{this.props.data.novelsname}</span>\r\n                                                </h1>\r\n                                                <li></li>\r\n                                                <li>\r\n                                                    <span>Tác giả: </span>\r\n                                                    {this.props.data.author}\r\n                                                </li>\r\n                                                <li>\r\n                                                    <span>Thể loại: </span>\r\n                                                    {this.props.data.genresdata.map(genresdata => (\r\n                                                        <Link as={`/theloai/${genresdata.idgenres}/1`} href={`/theloai/[id]/[page]`}>\r\n                                                            <a style={{ color: 'white',background:'#f95a35',padding:3,borderRadius:10 }} rel=\"nofollow\">\r\n                                                                {genresdata.genrename}\r\n                                                            </a>\r\n                                                        </Link>\r\n                                                    ))}\r\n                                                </li>\r\n                                                <li>\r\n                                                    <span>Tình trạng : </span>\r\n                                                    {this.props.data.status}\r\n                                                </li>\r\n                                                <li>\r\n                                                    <span>view : </span>\r\n                                                    <em\r\n                                                        className=\"entry-meta\"\r\n                                                        style={{ padding: 0, fontStyle: \"initial\" }}\r\n                                                    >\r\n                                                        <em className=\"date updated\">\r\n                                                            {this.props.data.view}\r\n                                                        </em>\r\n                                                    </em>\r\n                                                </li>\r\n                                            </ul>\r\n                                        </div>\r\n                                        <div\r\n                                            id=\"noidungm\"\r\n                                            style={{\r\n                                                font: \"400 14px Open Sans, Tahoma, Geneva, sans-serif\",\r\n                                                color: \"#3e3e3e\",\r\n                                                width: \"100%\",\r\n                                                background: \"#FFF\",\r\n                                                textAlign: \"justify\",\r\n                                                borderTop: \"1px dashed #ff530d\",\r\n                                                float: \"left\",\r\n                                                height: \"100%\",\r\n                                                position: \"relative\",\r\n                                                overflowY: \"auto\",\r\n                                                maxHeight: \"100%\",\r\n                                                overflowX: \"hidden\"\r\n                                            }}\r\n                                        >\r\n                                            <div style={{margin:15}}>{ReactHtmlParser(this.props.data.description)}</div>\r\n                                        </div>\r\n                                        <div style={{ width: \"100%\", textAlign: \"center\" }} />\r\n                                        <div id=\"list_chapter\" className=\"list_chapter\">\r\n                                            <div className=\"row title-list-chapter\">\r\n                                                <h2 className=\"h2-manga\">\r\n                                                    Danh sách chương\r\n                  </h2>\r\n                                            </div>\r\n                                            <div className=\"chapter-list\">\r\n                                                {this.props.data.chapterlist.map(datachapter => (\r\n                                                    <div className=\"row\" key={datachapter.idchapter}>\r\n                                                        <span><Link\r\n                                                            as={`/doc/${this.props.data.idnovels}/${datachapter.idchapter}`}\r\n                                                            href={`/doc/[id]/[chapter]`}>\r\n                                                            <a title={datachapter.chaptername}>{datachapter.chaptername}</a>\r\n                                                        </Link></span>\r\n                                                    </div>\r\n                                                ))}\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div> : null\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                \r\n                </div> */}\r\n            </Layout>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}