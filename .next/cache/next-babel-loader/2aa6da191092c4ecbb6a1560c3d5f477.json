{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport Link from 'next/link';\nimport 'isomorphic-unfetch';\nimport { Helmet } from 'react-helmet';\nimport Layout from '../components/MyLayout';\nimport { Container, Divider, Dropdown, Grid, Header, Image, List, Menu, Icon, Segment } from 'semantic-ui-react';\nimport { API_URL } from '../config/config';\n\nvar Index = /*#__PURE__*/function (_React$Component) {\n  _inherits(Index, _React$Component);\n\n  var _super = _createSuper(Index);\n\n  function Index() {\n    _classCallCheck(this, Index);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Index, [{\n    key: \"render\",\n    value: function render() {\n      return __jsx(Layout, null, __jsx(\"style\", null, \"\\n      html, body {\\n        background-color: #242933 !important;\\n      }\\n      p {\\n        align-content: center;\\n        background-color: #495285;\\n        color: #fff;\\n        display: flex;\\n        flex-direction: column;\\n        justify-content: center;\\n        min-height: 6em;\\n      }\\n      p > span {\\n        opacity: 0.4;\\n        text-align: center;\\n      }\\n    }\\n    \"), __jsx(Helmet, null, __jsx(\"title\", null, \"KitesNovel - Huge Web Novel Community for Reading\"), __jsx(\"meta\", {\n        name: \"description\",\n        content: \"A Huge Web Novel Community incloud Chinese Novels ( Translated ) , Original Novels, Light Novels and more. You can read all of them Online or Offline. Popular Novel Updates Daily With Fast Translation Speed And High Quality. We provide all genres of  web novel. e.g. love story, historical, romance, fantasy, wuxia, xianxia, light novel and another novels\"\n      }), __jsx(\"meta\", {\n        name: \"theme-color\",\n        content: \"#008f68\"\n      }), __jsx(\"meta\", {\n        name: \"keywords\",\n        content: \"Chinese novel,novel updates,web novel,novel online,read novels online,light novel,novel translation,wuxia\"\n      })), __jsx(Container, {\n        style: {\n          marginTop: '7em'\n        }\n      }, __jsx(Grid, null, __jsx(Grid.Column, {\n        mobile: 16,\n        tablet: 16,\n        computer: 16\n      }, __jsx(Header, {\n        className: \"title-name\",\n        as: \"h2\"\n      }, \"Truy\\u1EC7n m\\u1EDBi c\\u1EADp nh\\u1EADt\")), this.props.mangalist.length !== 0 ? this.props.mangalist.map(function (mangalist) {\n        return __jsx(Grid.Column, {\n          mobile: 16,\n          tablet: 116,\n          computer: 16\n        }, __jsx(Grid, null, __jsx(Grid.Column, {\n          width: 4\n        }, __jsx(Image, {\n          fluid: true,\n          className: \"item-img\",\n          src: mangalist.cover,\n          style: {\n            height: 82\n          }\n        })), __jsx(Grid.Column, {\n          width: 9\n        }, __jsx(Grid.Row, null, __jsx(Grid.Column, {\n          width: 8\n        }, __jsx(Link, {\n          as: \"/novel/\".concat(mangalist.idnovel),\n          href: \"/novel/[id]\"\n        }, __jsx(Header, {\n          className: \"book-name\",\n          as: \"h4\"\n        }, __jsx(Icon, {\n          color: \"white\",\n          name: \"book\"\n        }), \" \", mangalist.novelsname))), __jsx(Grid.Column, {\n          width: 16,\n          style: {\n            marginTop: 15\n          }\n        }, __jsx(Header, {\n          className: \"book-catalog\",\n          size: \"tiny\",\n          as: \"h6\"\n        }, __jsx(Icon, {\n          color: \"white\",\n          name: \"pencil\"\n        }), \" Ch\\u01B0\\u01A1ng m\\u1EDBi: \", mangalist.author)))), __jsx(Grid.Column, {\n          width: 3\n        }, __jsx(Header, {\n          className: \"book-catalog\",\n          size: \"tiny\",\n          as: \"h6\"\n        }, \"Ch\\u01B0\\u01A1ng m\\u1EDBi: \", mangalist.lasterchapter))));\n      }) : null)));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var res, json;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return fetch(\"\".concat(API_URL, \"update?page=1\"));\n\n              case 2:\n                res = _context.sent;\n                _context.next = 5;\n                return res.json();\n\n              case 5:\n                json = _context.sent;\n                return _context.abrupt(\"return\", {\n                  mangalist: json.data\n                });\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getInitialProps() {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  return Index;\n}(React.Component);\n\nexport { Index as default };","map":{"version":3,"sources":["C:/Users/bakhjem/Desktop/nhattin/nextjstruyen - Copy/pages/index.js"],"names":["React","Link","Helmet","Layout","Container","Divider","Dropdown","Grid","Header","Image","List","Menu","Icon","Segment","API_URL","Index","marginTop","props","mangalist","length","map","cover","height","idnovel","novelsname","author","lasterchapter","fetch","res","json","data","Component"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport Link from 'next/link'\r\nimport 'isomorphic-unfetch'\r\nimport { Helmet } from 'react-helmet';\r\nimport Layout from '../components/MyLayout'\r\nimport {\r\n  Container,\r\n  Divider,\r\n  Dropdown,\r\n  Grid,\r\n  Header,\r\n  Image,\r\n  List,\r\n  Menu,\r\n  Icon,\r\n  Segment,\r\n} from 'semantic-ui-react';\r\nimport { API_URL } from '../config/config'\r\nexport default class Index extends React.Component {\r\n  static async getInitialProps() {\r\n    // eslint-disable-next-line no-undef\r\n    const res = await fetch(`${API_URL}update?page=1`)\r\n    const json = await res.json()\r\n    // console.log(json.data)\r\n    return { mangalist: json.data }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Layout>\r\n        <style>\r\n          {`\r\n      html, body {\r\n        background-color: #242933 !important;\r\n      }\r\n      p {\r\n        align-content: center;\r\n        background-color: #495285;\r\n        color: #fff;\r\n        display: flex;\r\n        flex-direction: column;\r\n        justify-content: center;\r\n        min-height: 6em;\r\n      }\r\n      p > span {\r\n        opacity: 0.4;\r\n        text-align: center;\r\n      }\r\n    }\r\n    `}\r\n        </style>\r\n        <Helmet>\r\n          <title>KitesNovel - Huge Web Novel Community for Reading</title>\r\n          <meta name=\"description\" content=\"A Huge Web Novel Community incloud Chinese Novels ( Translated ) , Original Novels, Light Novels and more. You can read all of them Online or Offline. Popular Novel Updates Daily With Fast Translation Speed And High Quality. We provide all genres of  web novel. e.g. love story, historical, romance, fantasy, wuxia, xianxia, light novel and another novels\" />\r\n          <meta name=\"theme-color\" content=\"#008f68\" />\r\n          <meta name=\"keywords\" content=\"Chinese novel,novel updates,web novel,novel online,read novels online,light novel,novel translation,wuxia\" />\r\n        </Helmet>\r\n        <Container style={{ marginTop: '7em' }}>\r\n          <Grid>\r\n            <Grid.Column mobile={16} tablet={16} computer={16}>\r\n              <Header className='title-name' as='h2'>Truyện mới cập nhật</Header>\r\n            </Grid.Column>\r\n            {this.props.mangalist.length !== 0 ?\r\n              this.props.mangalist.map(mangalist => (\r\n                <Grid.Column mobile={16} tablet={116} computer={16}>\r\n                  <Grid>\r\n                    <Grid.Column width={4}>\r\n                      <Image fluid className='item-img' src={mangalist.cover} style={{ height: 82 }} />\r\n                    </Grid.Column>\r\n                    <Grid.Column width={9}>\r\n                      <Grid.Row>\r\n                        <Grid.Column width={8}>\r\n                          <Link\r\n                            as={`/novel/${mangalist.idnovel}`} href={`/novel/[id]`}\r\n                          >\r\n                            <Header className='book-name' as='h4'><Icon color='white' name='book' /> {mangalist.novelsname}</Header>\r\n                          </Link>\r\n                        </Grid.Column>\r\n                        <Grid.Column width={16} style={{ marginTop: 15 }}>\r\n                          <Header className='book-catalog' size='tiny' as='h6'><Icon color='white' name='pencil' /> Chương mới: {mangalist.author}</Header>\r\n                        </Grid.Column>\r\n                      </Grid.Row>\r\n                    </Grid.Column>\r\n                    <Grid.Column width={3}>\r\n                      <Header className='book-catalog' size='tiny' as='h6'>Chương mới: {mangalist.lasterchapter}</Header>\r\n                    </Grid.Column>\r\n                  </Grid>\r\n                </Grid.Column>\r\n              )) : null}\r\n          </Grid>\r\n        </Container>\r\n\r\n      </Layout>\r\n    )\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}